require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

target 'delivery' do
  # React Native Maps dependencies
    rn_maps_path = '../node_modules/react-native-maps'
    pod 'react-native-google-maps', :path => rn_maps_path
    pod 'GoogleMaps'
    pod 'Google-Maps-iOS-Utils'
    
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"])


  pod 'FBSDKCoreKit', :modular_headers => true
  pod 'FBSDKLoginKit', :modular_headers => true
  pod 'FBSDKShareKit', :modular_headers => true

  target 'deliveryTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  # use_flipper!({ 'Flipper-Folly' => '2.5.3', 'Flipper' => '0.87.0', 'Flipper-RSocket' => '1.3.1' })
  use_flipper!()
  post_install do |installer|
    react_native_post_install(installer)

    # # to build for the simulator on Apple M1
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # disables arm64 builds for the simulator
        # config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        # config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
        # config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
        config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
      end
    end

    # ## Fix for XCode 12.5 & RN 0.62.2 - See https://github.com/facebook/react-native/issues/28405
    # find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm",
    #   "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")

    # find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm",
    #   "RCTBridgeModuleNameForClass(strongModule))", "RCTBridgeModuleNameForClass(Class(strongModule)))")

    # find_and_replace("Pods/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
    #   "  atomic_notify_one(state);", "  folly::atomic_notify_one(state);")

    # ## Fix for Flipper-Folly on iOS 14.5
    # find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
    #   "atomic_notify_one(state)", "folly::atomic_notify_one(state)")

    # find_and_replace("Pods/Headers/Private/RCT-Folly/folly/synchronization/DistributedMutex-inl.h",
    #   "atomic_notify_one(state)", "folly::atomic_notify_one(state)")

    # find_and_replace("Pods/Flipper-Folly/folly/synchronization/DistributedMutex-inl.h",
    #   "atomic_wait_until(&state, previous | data, deadline)", "folly::atomic_wait_until(&state, previous | data, deadline)")
  end
end

# target 'delivery-tvOS' do
#   # Pods for delivery-tvOS

#   target 'delivery-tvOSTests' do
#     inherit! :search_paths
#     # Pods for testing
#   end
# end

# def find_and_replace(dir, findstr, replacestr)
#   Dir[dir].each do |name|
#       text = File.read(name)
#       replace = text.gsub(findstr,replacestr)
#       replaced = text.index(replacestr)
#       if replaced == nil && text != replace
#           puts "Fix: " + name
#           File.open(name, "w") { |file| file.puts replace }
#           STDOUT.flush
#       end
#   end
#   Dir[dir + '*/'].each(&method(:find_and_replace))
# end
