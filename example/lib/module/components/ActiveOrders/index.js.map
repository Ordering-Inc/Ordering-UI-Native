{"version":3,"sources":["index.tsx"],"names":["React","useLanguage","useUtils","useConfig","OButton","OIcon","OText","ActiveOrdersContainer","Card","Map","Information","Logo","OrderInformation","BusinessInformation","Price","View","StyleSheet","colors","getGoogleMapImage","ActiveOrders","props","onNavigationRedirect","orders","pagination","loadMoreOrders","getOrderStatus","configs","t","parseDate","parsePrice","handleClickCard","uuid","orderId","Order","order","index","google_maps_api_key","value","business","location","resizeMode","borderTopRightRadius","borderTopLeftRadius","logo","styles","name","orderNumber","textSecondary","id","delivery_datetime_utc","delivery_datetime","utc","summary","total","status","primary","totalPages","currentPage","loadOrders","height","white","color","fontSize","paddingLeft","paddingRight","length","map","create","borderRadius","width","flexDirection","justifyContent","alignItems","minWidth"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useLanguage, useUtils, useConfig } from 'ordering-components/native'\r\nimport { OButton, OIcon, OText } from '../shared'\r\nimport { ActiveOrdersContainer, Card, Map, Information, Logo, OrderInformation, BusinessInformation, Price } from './styles'\r\nimport { View, StyleSheet } from 'react-native'\r\nimport { colors } from '../../theme'\r\nimport { getGoogleMapImage } from '../../utils'\r\n\r\nimport { ActiveOrdersParams } from '../../types'\r\n\r\nexport const ActiveOrders = (props: ActiveOrdersParams) => {\r\n\r\n  const {\r\n    onNavigationRedirect,\r\n    orders,\r\n    pagination,\r\n    loadMoreOrders,\r\n    getOrderStatus\r\n  } = props\r\n\r\n  const [{configs}] = useConfig()\r\n  const [, t] = useLanguage()\r\n  const [{ parseDate, parsePrice }] = useUtils()\r\n\r\n  const handleClickCard = (uuid: string) => {\r\n    onNavigationRedirect && onNavigationRedirect('OrderDetails', { orderId: uuid })\r\n  }\r\n\r\n  const Order = ({ order, index }: { order: any, index: number }) => (\r\n    <React.Fragment>\r\n      <Card\r\n        isMiniCard={configs?.google_maps_api_key?.value}\r\n        onPress={() => handleClickCard(order?.uuid)}\r\n      >\r\n        {(configs?.google_maps_api_key?.value) && (\r\n          <Map>\r\n            <OIcon\r\n              url={getGoogleMapImage(order?.business?.location, configs?.google_maps_api_key?.value)}\r\n              height={100}\r\n              width={340}\r\n              style={{resizeMode: 'cover', borderTopRightRadius: 24, borderTopLeftRadius: 24}}\r\n            />\r\n          </Map>\r\n        )}\r\n        <Information>\r\n          {order.business?.logo && (\r\n            <Logo>\r\n              <OIcon url={order.business?.logo} style={styles.logo} />\r\n            </Logo>\r\n          )}\r\n          <OrderInformation>\r\n            <BusinessInformation>\r\n              <OText size={16}>{order.business?.name}</OText>\r\n              <View style={styles.orderNumber}>\r\n                <OText size={12} space color={colors.textSecondary}>{t('ORDER_NUMBER', 'Order No.')}</OText>\r\n                <OText size={12} color={colors.textSecondary}>{order.id}</OText>\r\n              </View>\r\n              <OText size={12} color={colors.textSecondary}>{order?.delivery_datetime_utc\r\n                ? parseDate(order?.delivery_datetime_utc)\r\n                : parseDate(order?.delivery_datetime, { utc: false })}</OText>\r\n            </BusinessInformation>\r\n            <Price>\r\n              <OText size={16}>{parsePrice(order?.summary?.total || order?.total)}</OText>\r\n              {order?.status !== 0 && (\r\n                <OText color={colors.primary} size={12} numberOfLines={2}>{getOrderStatus(order.status)?.value}</OText>\r\n              )}\r\n            </Price>\r\n          </OrderInformation>\r\n        </Information>\r\n      </Card>\r\n      {pagination?.totalPages && pagination?.currentPage < pagination?.totalPages && index === (10 * pagination?.currentPage) - 1 && (\r\n        <Card\r\n          style={{ ...styles.loadOrders, height: configs?.google_maps_api_key?.value ? 200 : 100 }}\r\n          onPress={loadMoreOrders}\r\n        >\r\n          <OButton\r\n            bgColor={colors.white}\r\n            textStyle={{ color: colors.primary, fontSize: 20 }}\r\n            text={t('LOAD_MORE_ORDERS', 'Load more orders')}\r\n            borderColor={colors.white}\r\n            style={{ paddingLeft: 30, paddingRight: 30 }}\r\n          />\r\n        </Card>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n\r\n  return (\r\n    <ActiveOrdersContainer\r\n      showsVerticalScrollIndicator={false}\r\n      showsHorizontalScrollIndicator={false}\r\n      horizontal\r\n      isMiniCards={configs?.google_maps_api_key?.value}\r\n    >\r\n      {orders.length > 0 && (\r\n        orders.map((order: any, index: any) => (\r\n          <Order\r\n            key={order?.id || order?.uuid}\r\n            order={order}\r\n            index={index}\r\n          />\r\n        ))\r\n      )}\r\n    </ActiveOrdersContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    borderRadius: 10,\r\n    width: 75,\r\n    height: '100%'\r\n  },\r\n  orderNumber: {\r\n    flexDirection: 'row'\r\n  },\r\n  loadOrders: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minWidth: 230\r\n  }\r\n})\r\n"]}