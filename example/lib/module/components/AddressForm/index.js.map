{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","useRef","AddressForm","AddressFormController","useLanguage","useConfig","useSession","useOrder","StyleSheet","View","TouchableOpacity","Keyboard","OInput","OButton","OText","OModal","getTraduction","NavBar","colors","ToastType","useToast","GooglePlacesAutocomplete","AddressFormContainer","AutocompleteInput","IconsContainer","GoogleMapContainer","FormInput","MaterialIcon","useForm","Controller","GoogleMap","Spinner","inputNames","name","code","tagsName","icon","value","AddressFormUI","props","navigation","updateChanges","address","formState","isEditing","handleChangeInput","addressState","addressesList","saveAddress","userCustomerSetup","isGuestUser","isRequiredField","isFromProductsList","hasAddressDefault","t","auth","showToast","configState","orderState","handleSubmit","errors","control","setValue","toggleMap","setToggleMap","alertState","setAlertState","open","content","key","addressTag","setAddressTag","tag","firstLocationNoEdit","setFirstLocationNoEdit","lat","lng","isFirstTime","setIsFirstTime","locationChange","setLocationChange","location","changes","saveMapLocation","setSaveMapLocation","isKeyboardShow","setIsKeyboardShow","isSignUpEffect","setIsSignUpEffect","googleInput","googleMapsApiKey","configs","google_maps_api_key","isLocationRequired","google_autocomplete_selection_required","maxLimitLocation","meters_to_change_address","continueAsGuest","navigate","goToBack","goBack","onSubmit","arrayList","addresses","filter","id","addressToCompare","isAddressAlreadyExist","map","checkAddress","some","values","forEach","prop","push","every","handleChangeAddress","data","details","addressSelected","description","geometry","utc_offset","map_data","library","place_id","zip_code","handleAddressTag","target","handleToggleMap","loading","options","Error","field","result","error","prevLocation","Math","trunc","newLocation","Success","Object","keys","length","list","stringError","item","i","message","current","setAddressText","keyboardDidShowListener","addListener","keyboardDidHideListener","remove","height","overflow","required","onChangeText","text","autoCorrect","listView","position","marginTop","borderBottomStartRadius","borderBottomEndRadius","elevation","borderWidth","borderColor","container","zIndex","textInput","borderRadius","flexGrow","fontSize","paddingHorizontal","minHeight","fontFamily","marginBottom","primary","textAlign","internal_number","styles","inputsStyle","zipcode","address_notes","textAreaStyles","iconContainer","backgroundColor","backgroundGray","icons","color","white","marginHorizontal","create","display","justifyContent","alignItems","paddingVertical","secundaryContrast","maxHeight","textAlignVertical","addressFormProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { AddressForm as AddressFormController, useLanguage, useConfig, useSession, useOrder } from 'ordering-components/native'\r\nimport { StyleSheet, View, TouchableOpacity, Keyboard } from 'react-native'\r\nimport { OInput, OButton, OText, OModal } from '../shared'\r\nimport { getTraduction } from '../../utils'\r\nimport NavBar from '../NavBar'\r\nimport { colors } from '../../theme'\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete'\r\nimport { AddressFormContainer, AutocompleteInput, IconsContainer, GoogleMapContainer, FormInput } from './styles'\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { AddressFormParams } from '../../types'\r\nimport { GoogleMap } from '../GoogleMap'\r\nimport Spinner from 'react-native-loading-spinner-overlay'\r\n\r\nconst inputNames = [{ name: 'address', code: 'Address' }, { name: 'internal_number', code: 'Internal number' }, { name: 'zipcode', code: 'Zipcode' }, { name: 'address_notes', code: 'Address notes' }]\r\nconst tagsName = [\r\n  { icon: 'home', value: 'home' },\r\n  { icon: 'office-building', value: 'office' },\r\n  { icon: 'heart', value: 'favorite' },\r\n  { icon: 'plus', value: 'other' }\r\n]\r\n\r\nconst AddressFormUI = (props: AddressFormParams) => {\r\n  const {\r\n    navigation,\r\n    updateChanges,\r\n    address,\r\n    formState,\r\n    isEditing,\r\n    handleChangeInput,\r\n    addressState,\r\n    addressesList,\r\n    saveAddress,\r\n    userCustomerSetup,\r\n    isGuestUser,\r\n    isRequiredField,\r\n    isFromProductsList,\r\n    hasAddressDefault\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const [{ auth }] = useSession()\r\n  const { showToast } = useToast()\r\n  const [configState] = useConfig()\r\n  const [orderState] = useOrder()\r\n  const { handleSubmit, errors, control, setValue } = useForm()\r\n\r\n  const [toggleMap, setToggleMap] = useState(false)\r\n  const [alertState, setAlertState] = useState<{ open: boolean, content: Array<string>, key?: string | null }>({ open: false, content: [], key: null })\r\n  const [addressTag, setAddressTag] = useState(addressState?.address?.tag)\r\n  const [firstLocationNoEdit, setFirstLocationNoEdit] = useState({ value: { lat: null, lng: null }, address: null })\r\n  const [isFirstTime, setIsFirstTime] = useState(true)\r\n  const [locationChange, setLocationChange] = useState(\r\n    isEditing\r\n      ? addressState?.address?.location\r\n      : formState.changes?.location ?? null\r\n  )\r\n  const [saveMapLocation, setSaveMapLocation] = useState(false)\r\n  const [isKeyboardShow, setIsKeyboardShow] = useState(false)\r\n  const [isSignUpEffect, setIsSignUpEffect] = useState(false)\r\n\r\n  const googleInput: any = useRef(null)\r\n\r\n  const googleMapsApiKey = configState?.configs?.google_maps_api_key?.value\r\n  const isLocationRequired = configState.configs?.google_autocomplete_selection_required?.value === '1' ||\r\n    configState.configs?.google_autocomplete_selection_required?.value === 'true'\r\n  const maxLimitLocation = configState?.configs?.meters_to_change_address?.value\r\n\r\n  const continueAsGuest = () => navigation.navigate('BusinessList')\r\n  const goToBack = () => navigation.goBack()\r\n\r\n  const onSubmit = () => {\r\n    if (!auth && formState?.changes?.address === '' && addressState?.address?.address) {\r\n      setAlertState({\r\n        open: true,\r\n        content: [t('VALIDATION_ERROR_ADDRESS_REQUIRED', 'The field Address is required')]\r\n      })\r\n      return\r\n    }\r\n    if (formState?.changes?.address && !formState?.changes?.location) {\r\n      if (isLocationRequired) {\r\n        setAlertState({\r\n          open: true,\r\n          content: [t('ADDRESS_REQUIRE_LOCATION', 'The address needs a location, please select one of the suggested')]\r\n        })\r\n        return\r\n      }\r\n    }\r\n\r\n    const arrayList = isEditing\r\n      ? addressesList?.addresses?.filter((address: any) => address.id !== addressState?.address?.id) || []\r\n      : addressesList || []\r\n    const addressToCompare = isEditing\r\n      ? { ...addressState.address, ...formState.changes }\r\n      : formState?.changes\r\n\r\n    const isAddressAlreadyExist = arrayList.map((address: any) => checkAddress(address, addressToCompare)).some((value: any) => value) ?? false\r\n\r\n    if (!isAddressAlreadyExist) {\r\n      saveAddress()\r\n      if (isGuestUser) {\r\n        continueAsGuest()\r\n      }\r\n      if (!isGuestUser && !auth) {\r\n        !isFromProductsList ? navigation.navigate('Business') : navigation.goBack()\r\n      }\r\n      return\r\n    }\r\n\r\n    setAlertState({\r\n      open: true,\r\n      content: [t('ADDRESS_ALREADY_EXIST', 'The address already exists')]\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Returns true when the user made no changes\r\n   * @param {object} address\r\n   */\r\n  const checkAddress = (address: any, addressToCompare: any) => {\r\n    const props = ['address', 'address_notes', 'zipcode', 'location', 'internal_number']\r\n    const values: any = []\r\n    props.forEach(prop => {\r\n      if (addressToCompare[prop]) {\r\n        if (prop === 'location') {\r\n          values.push(address[prop]?.lat === addressToCompare[prop]?.lat &&\r\n            address[prop]?.lng === addressToCompare[prop]?.lng)\r\n        } else {\r\n          values.push(address[prop] === addressToCompare[prop])\r\n        }\r\n      } else {\r\n        values.push(!address[prop])\r\n      }\r\n    })\r\n    return values.every((value: any) => value)\r\n  }\r\n\r\n  const handleChangeAddress = (data: any, details: any) => {\r\n    const addressSelected = {\r\n      address: data?.description || data?.address,\r\n      location: details?.geometry?.location,\r\n      utc_offset: details?.utc_offset || null,\r\n      map_data: { library: 'google', place_id: data.place_id },\r\n      zip_code: data?.zip_code || null\r\n    }\r\n    updateChanges(addressSelected)\r\n  }\r\n\r\n  const handleAddressTag = (tag: string) => {\r\n    setAddressTag(tag)\r\n    handleChangeInput({\r\n      target: {\r\n        name: 'tag',\r\n        value: tag\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleToggleMap = () => {\r\n    setToggleMap(!toggleMap)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (orderState.loading && !addressesList && orderState.options.address && auth) {\r\n      !isFromProductsList ? navigation.navigate('BottomTab') : navigation.navigate('Business')\r\n    }\r\n  }, [orderState.options.address])\r\n\r\n  useEffect(() => {\r\n    if (alertState.open && alertState?.key !== 'ERROR_MAX_LIMIT_LOCATION') {\r\n      alertState.content && showToast(\r\n        ToastType.Error,\r\n        alertState.content\r\n      )\r\n    }\r\n  }, [alertState.content])\r\n\r\n  useEffect(() => {\r\n    if (!auth) {\r\n      inputNames.forEach(field =>\r\n        setValue(\r\n          field.name,\r\n          formState?.changes[field.name] ||\r\n          (orderState?.options?.address && orderState?.options?.address[field.name]) ||\r\n          ''\r\n        )\r\n      )\r\n      return\r\n    }\r\n\r\n    if (!formState.loading && formState.result?.error) {\r\n      setAlertState({\r\n        open: true,\r\n        content: formState.result?.result || [t('ERROR', 'Error')]\r\n      })\r\n    }\r\n\r\n    setValue('address', formState?.changes?.address ?? addressState.address?.address ?? '')\r\n    if (!isEditing) {\r\n      formState?.changes?.address && setLocationChange(formState?.changes?.location)\r\n      if (\r\n        formState?.changes?.address &&\r\n        formState?.changes?.address !== firstLocationNoEdit?.address &&\r\n        formState?.changes?.location &&\r\n        formState?.changes?.location?.lat !== firstLocationNoEdit.value?.lat &&\r\n        formState?.changes?.location?.lng !== firstLocationNoEdit.value?.lng\r\n      ) {\r\n        setFirstLocationNoEdit({\r\n          value: formState?.changes?.location,\r\n          address: formState?.changes?.address\r\n        })\r\n      }\r\n    }\r\n\r\n    if (isEditing) {\r\n      if (formState?.changes?.location) {\r\n        const prevLocation = { lat: Math.trunc(locationChange.lat), lng: Math.trunc(locationChange.lng) }\r\n        const newLocation = { lat: Math.trunc(formState?.changes?.location?.lat), lng: Math.trunc(formState?.changes?.location?.lng) }\r\n        if (prevLocation.lat !== newLocation.lat && prevLocation.lng !== newLocation.lng) {\r\n          setLocationChange(formState?.changes?.location)\r\n        }\r\n      }\r\n    }\r\n  }, [formState])\r\n\r\n  useEffect(() => {\r\n    if (formState?.result?.result && !formState?.loading) {\r\n      if (formState.result?.error) {\r\n        showToast(ToastType.Error, formState.result.result);\r\n      } else {\r\n        showToast(ToastType.Success, t('UPDATE_SUCCESSFULLY', 'Update successfully'));\r\n      }\r\n    }\r\n  }, [formState.result])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors);\r\n      let stringError = '';\r\n      list.map((item: any, i: number) => {\r\n        stringError +=\r\n          i + 1 === list.length ? `- ${item.message}` : `- ${item.message}\\n`;\r\n      });\r\n      showToast(ToastType.Error, stringError);\r\n    }\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    if (googleInput?.current) {\r\n      googleInput?.current?.setAddressText(address?.address || formState.changes?.address || addressState.address.address || '')\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', () => {\r\n      setIsKeyboardShow(true)\r\n    })\r\n    const keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', () => {\r\n      setIsKeyboardShow(false)\r\n    })\r\n    return () => {\r\n      keyboardDidShowListener.remove()\r\n      keyboardDidHideListener.remove()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!orderState.loading && auth && !hasAddressDefault && isSignUpEffect) {\r\n      navigation.navigate('BottomTab')\r\n    }\r\n    setIsSignUpEffect(true)\r\n  }, [orderState.loading])\r\n\r\n  return (\r\n    <>\r\n      <NavBar\r\n        title={t('ADDRESS_FORM', 'Address Form')}\r\n        titleAlign={'center'}\r\n        onActionLeft={goToBack}\r\n        showCall={false}\r\n        paddingTop={20}\r\n      />\r\n      <AddressFormContainer style={{ height: 600, overflow: 'scroll' }}>\r\n        <View>\r\n          <FormInput>\r\n            <AutocompleteInput>\r\n              <Controller\r\n                control={control}\r\n                name='address'\r\n                defaultValue={address?.address || formState.changes?.address || addressState.address.address || ''}\r\n                rules={{ required: isRequiredField && isRequiredField('address') ? t(`VALIDATION_ERROR_ADDRESS_REQUIRED`, `The field Address is required`) : null }}\r\n                render={() => (\r\n                  <GooglePlacesAutocomplete\r\n                    placeholder={t('ADD_ADDRESS', 'Add a address')}\r\n                    onPress={(data, details: any) => {\r\n                      handleChangeAddress(data, details)\r\n                    }}\r\n                    query={{ key: googleMapsApiKey }}\r\n                    fetchDetails\r\n                    ref={googleInput}\r\n                    textInputProps={{\r\n                      onChangeText: (text) => {\r\n                        if (!isFirstTime) {\r\n                          handleChangeInput({ target: { name: 'address', value: text } })\r\n                          setValue('address', text)\r\n                        }\r\n                        setIsFirstTime(false)\r\n                      },\r\n                      autoCorrect: false\r\n                    }}\r\n                    onFail={(error) => setAlertState({ open: true, content: getTraduction(error) })}\r\n                    styles={{\r\n                      listView: {\r\n                        position: \"absolute\",\r\n                        marginTop: 50,\r\n                        borderBottomStartRadius: 15,\r\n                        borderBottomEndRadius: 15,\r\n                        elevation: 2,\r\n                        borderWidth: 1,\r\n                        borderColor: \"#ddd\"\r\n                      },\r\n                      container: {\r\n                        zIndex: 100\r\n                      },\r\n                      textInput: {\r\n                        borderWidth: 1,\r\n                        borderRadius: 10,\r\n                        flexGrow: 1,\r\n                        fontSize: 15,\r\n                        paddingHorizontal: 20,\r\n                        minHeight: 50,\r\n                        fontFamily: 'Poppins-Regular',\r\n                        marginBottom: !isKeyboardShow && (addressState?.address?.location || formState?.changes?.location) ? 10 : 20\r\n                      }\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </AutocompleteInput>\r\n\r\n            {!isKeyboardShow && (addressState?.address?.location || formState?.changes?.location) && (\r\n              <TouchableOpacity onPress={handleToggleMap} style={{ marginBottom: 10 }}>\r\n                <OText\r\n                  color={colors.primary}\r\n                  style={{ textAlign: 'center' }}\r\n                >\r\n                  {t('VIEW_MAP', 'View map to modify the exact location')}\r\n                </OText>\r\n              </TouchableOpacity>\r\n            )}\r\n\r\n            <Controller\r\n              control={control}\r\n              name='internal_number'\r\n              rules={{ required: isRequiredField && isRequiredField('internal_number') ? t(`VALIDATION_ERROR_INTERNAL_NUMBER_REQUIRED`, `The field internal number is required`) : null }}\r\n              defaultValue={address?.internal_number || formState.changes?.internal_number || addressState.address.internal_number || ''}\r\n              render={() => (\r\n                <OInput\r\n                  name='internal_number'\r\n                  placeholder={t('INTERNAL_NUMBER', 'Internal number')}\r\n                  onChange={(text: string) => {\r\n                    handleChangeInput(text)\r\n                    setValue('internal_number', text)\r\n                  }}\r\n                  value={address?.internal_number || formState.changes?.internal_number || addressState.address.internal_number || ''}\r\n                  style={styles.inputsStyle}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              control={control}\r\n              name='zipcode'\r\n              rules={{ required: isRequiredField && isRequiredField('zipcode') ? t(`VALIDATION_ERROR_ZIP_CODE_REQUIRED`, `The field Zip Code is required`) : null }}\r\n              defaultValue={address?.zipcode || formState.changes?.zipcode || addressState.address.zipcode || ''}\r\n              render={() => (\r\n                <OInput\r\n                  name='zipcode'\r\n                  placeholder={t('ZIP_CODE', 'Zip code')}\r\n                  onChange={(text: string) => {\r\n                    handleChangeInput(text)\r\n                    setValue('zipcode', text)\r\n                  }}\r\n                  value={address?.zipcode || formState.changes?.zipcode || addressState.address.zipcode || ''}\r\n                  style={styles.inputsStyle}\r\n                />\r\n              )}\r\n            />\r\n            <Controller\r\n              control={control}\r\n              name='address_notes'\r\n              rules={{ required: isRequiredField && isRequiredField('address_notes') ? t(`VALIDATION_ERROR_ADDRESS_NOTES_REQUIRED`, `The field address notes is required`) : null }}\r\n              defaultValue={address?.address_notes || formState.changes?.address_notes || addressState.address.address_notes || ''}\r\n              render={() => (\r\n                <OInput\r\n                  name='address_notes'\r\n                  placeholder={t('ADDRESS_NOTES', 'Address notes')}\r\n                  onChange={(text: any) => {\r\n                    handleChangeInput(text)\r\n                    setValue('address_notes', text)\r\n                  }}\r\n                  value={address?.address_notes || formState.changes?.address_notes || addressState.address.address_notes || ''}\r\n                  multiline\r\n                  style={styles.textAreaStyles}\r\n                />\r\n              )}\r\n            />\r\n          </FormInput>\r\n          {!isKeyboardShow && (\r\n            <IconsContainer>\r\n              {tagsName.map(tag => (\r\n                <TouchableOpacity\r\n                  key={tag.value}\r\n                  onPress={() => handleAddressTag(tag.value)}\r\n                >\r\n                  <View\r\n                    style={{\r\n                      ...styles.iconContainer,\r\n                      backgroundColor: addressTag === tag.value\r\n                        ? colors.primary\r\n                        : colors.backgroundGray,\r\n                      borderColor: addressTag === tag.value\r\n                        ? colors.primary\r\n                        : colors.backgroundGray\r\n                    }}\r\n                  >\r\n                    <MaterialIcon\r\n                      name={tag.icon}\r\n                      size={40}\r\n                      style={{ ...styles.icons }}\r\n                    />\r\n                  </View>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </IconsContainer>\r\n          )}\r\n        </View>\r\n\r\n        <View>\r\n          {Object.keys(formState?.changes).length > 0 ? (\r\n            <OButton\r\n              text={\r\n                !formState.loading ? (\r\n                  isEditing || (!auth && orderState.options?.address?.address)\r\n                    ? t('UPDATE', 'Update')\r\n                    : t('SAVE', 'Save')\r\n                ) : t('LOADING', 'Loading')\r\n              }\r\n              imgRightSrc=''\r\n              onClick={handleSubmit(onSubmit)}\r\n              textStyle={{ color: colors.white }}\r\n              isDisabled={formState.loading}\r\n            />\r\n          ) : (\r\n            <OButton\r\n              text={t('CANCEL', 'Cancel')}\r\n              style={{ backgroundColor: colors.white }}\r\n              onClick={() => navigation.goBack()}\r\n            />\r\n          )}\r\n        </View>\r\n        <OModal open={toggleMap} onClose={() => handleToggleMap()} entireModal customClose >\r\n          {locationChange && (\r\n            <GoogleMapContainer>\r\n              <GoogleMap\r\n                location={locationChange}\r\n                handleChangeAddressMap={handleChangeAddress}\r\n                maxLimitLocation={maxLimitLocation}\r\n                saveLocation={saveMapLocation}\r\n                setSaveLocation={setSaveMapLocation}\r\n                handleToggleMap={handleToggleMap}\r\n              />\r\n            </GoogleMapContainer>\r\n          )}\r\n          <OButton\r\n            text={t('SAVE', 'Save')}\r\n            textStyle={{ color: colors.white }}\r\n            imgRightSrc={null}\r\n            style={{ marginHorizontal: 30, marginBottom: 10 }}\r\n            onClick={() => setSaveMapLocation(true)}\r\n          />\r\n        </OModal>\r\n        <Spinner visible={saveMapLocation} />\r\n      </AddressFormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    paddingHorizontal: 18,\r\n    paddingVertical: 5,\r\n  },\r\n  icons: {\r\n    borderRadius: 20,\r\n    color: colors.white\r\n  },\r\n  inputsStyle: {\r\n    borderColor: colors.secundaryContrast,\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n    height: 50,\r\n    maxHeight: 50,\r\n    minHeight: 50\r\n  },\r\n  textAreaStyles: {\r\n    borderColor: colors.secundaryContrast,\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n    height: 150,\r\n    maxHeight: 150,\r\n    textAlignVertical: 'top',\r\n    alignItems: 'flex-start'\r\n  },\r\n})\r\n\r\nexport const AddressForm = (props: AddressFormParams) => {\r\n  const addressFormProps = {\r\n    ...props,\r\n    UIComponent: AddressFormUI\r\n  }\r\n  return <AddressFormController {...addressFormProps} />\r\n}\r\n"]}