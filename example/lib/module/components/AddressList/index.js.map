{"version":3,"sources":["index.tsx"],"names":["React","useEffect","AddressList","AddressListController","useLanguage","useOrder","useSession","AddressListContainer","AddressItem","StyleSheet","View","Spinner","MaterialIcon","colors","OButton","OText","OAlert","Container","NotFoundSource","NavBar","Fade","Placeholder","PlaceholderLine","addIcon","require","AddressListUI","props","navigation","route","addressList","isFromProfile","nopadding","handleSetDefault","handleDelete","setAddressList","isGoBack","actionStatus","isFromBusinesses","isFromProductsList","orderState","t","auth","onNavigatorRedirect","goToBack","onNavigationRedirect","params","isFromCheckout","uniqueAddressesList","addresses","filter","address","i","self","findIndex","obj","address_notes","zipcode","internal_number","checkAddress","options","values","forEach","prop","push","lat","lng","every","value","addressIcon","tag","handleSetAddress","id","address_id","handleSaveAddress","found","map","_address","Object","assign","default","goBack","navigate","loading","location","paddingLeft","Array","item","padding","flexDirection","marginBottom","marginRight","error","length","primary","styles","icon","green","isEditing","addressesList","onSaveAddress","isSelectedAfterAdd","hasAddressDefault","disabled","message","white","buttonIcon","button","color","create","flex","marginHorizontal","width","height","resizeMode","left","position","marginVertical","addressListProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { AddressList as AddressListController, useLanguage, useOrder, useSession } from 'ordering-components/native'\r\nimport { AddressListContainer, AddressItem } from './styles'\r\nimport { StyleSheet, View } from 'react-native'\r\nimport Spinner from 'react-native-loading-spinner-overlay'\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport { colors } from '../../theme'\r\nimport { OButton, OText, OAlert, OModal } from '../shared'\r\nimport { Container } from '../../layouts/Container'\r\nimport { AddressFormParams, AddressListParams } from '../../types'\r\nimport { NotFoundSource } from '../NotFoundSource'\r\nimport NavBar from '../NavBar'\r\nimport { Fade, Placeholder, PlaceholderLine } from 'rn-placeholder'\r\n\r\nconst addIcon = require('../../assets/icons/add-circular-outlined-button.png')\r\n\r\nconst AddressListUI = (props: AddressListParams) => {\r\n\r\n  const {\r\n    navigation,\r\n    route,\r\n    addressList,\r\n    isFromProfile,\r\n    nopadding,\r\n    handleSetDefault,\r\n    handleDelete,\r\n    setAddressList,\r\n    isGoBack,\r\n    actionStatus,\r\n    isFromBusinesses,\r\n    isFromProductsList\r\n  } = props\r\n\r\n  const [orderState] = useOrder()\r\n  const [, t] = useLanguage()\r\n  const [{ auth }] = useSession()\r\n\r\n  const onNavigatorRedirect = () => {\r\n    if (route && (isFromBusinesses || isGoBack)) {\r\n      isGoBack ? goToBack() : onNavigationRedirect('BottomTab')\r\n      return\r\n    }\r\n    if (route && route?.params?.isFromCheckout) {\r\n      onNavigationRedirect('CheckoutPage')\r\n      return\r\n    }\r\n    onNavigationRedirect('BottomTab')\r\n\r\n  }\r\n\r\n  const uniqueAddressesList = (addressList.addresses && addressList.addresses.filter(\r\n    (address: any, i: number, self: any) =>\r\n      i === self.findIndex((obj: any) => (\r\n        address.address === obj.address &&\r\n        address.address_notes === obj.address_notes &&\r\n        address.zipcode === obj.zipcode &&\r\n        address.internal_number === obj.internal_number\r\n      )))) || []\r\n\r\n  const checkAddress = (address: any) => {\r\n    if (!orderState?.options?.address) return true\r\n    const props = ['address', 'address_notes', 'zipcode', 'location', 'internal_number']\r\n    const values: any = []\r\n    props.forEach(prop => {\r\n      if (address[prop]) {\r\n        if (prop === 'location') {\r\n          values.push(address[prop].lat === orderState?.options?.address[prop]?.lat &&\r\n            address[prop].lng === orderState?.options?.address[prop]?.lng)\r\n        } else {\r\n          values.push(address[prop] === orderState?.options?.address[prop])\r\n        }\r\n      } else {\r\n        values.push(orderState?.options?.address[prop] === null || orderState?.options?.address[prop] === '')\r\n      }\r\n    })\r\n    return values.every((value: any) => value)\r\n  }\r\n\r\n  const addressIcon = (tag: string) => {\r\n    switch (tag) {\r\n      case 'other':\r\n        return 'plus'\r\n      case 'office':\r\n        return 'office-building'\r\n      case 'home':\r\n        return 'home'\r\n      case 'favorite':\r\n        return 'heart'\r\n      default:\r\n        return 'plus'\r\n    }\r\n  }\r\n\r\n  const handleSetAddress = (address: any) => {\r\n    if (address.id === orderState?.options?.address_id) return\r\n    handleSetDefault(address)\r\n  }\r\n\r\n  const handleSaveAddress = (address: any) => {\r\n    let found = false\r\n    const addresses = addressList.addresses.map((_address: any) => {\r\n      if (_address?.id === address?.id) {\r\n        Object.assign(_address, address)\r\n        found = true\r\n      } else if (address.default) {\r\n        _address.default = false\r\n      }\r\n      return _address\r\n    })\r\n    if (!found) {\r\n      addresses.push(address)\r\n    }\r\n    setAddressList({\r\n      ...addressList,\r\n      addresses\r\n    })\r\n  }\r\n\r\n  const goToBack = () => navigation.goBack()\r\n  const onNavigationRedirect = (route: string, params?: any) => navigation.navigate(route, params)\r\n\r\n  useEffect(() => {\r\n    if (orderState.loading && auth && orderState.options.address?.location) {\r\n      onNavigatorRedirect()\r\n    }\r\n  }, [orderState.options.address])\r\n\r\n  return (\r\n    <Container nopadding={nopadding}>\r\n      <Spinner visible={actionStatus.loading || orderState.loading || (addressList.loading && (!isFromBusinesses && !isFromProfile))} />\r\n      {(!addressList.loading || (isFromProductsList || isFromBusinesses || isFromProfile)) && (\r\n        <AddressListContainer>\r\n          {isFromProfile && (\r\n            <OText size={24} mBottom={20}>{t('SAVED_PLACES', 'My saved places')}</OText>\r\n          )}\r\n          {\r\n            route &&\r\n            (\r\n              route?.params?.isFromBusinesses ||\r\n              route?.params?.isFromCheckout ||\r\n              route?.params?.isFromProductsList\r\n            ) &&\r\n            !isFromProfile &&\r\n            (\r\n              <NavBar\r\n                title={t('ADDRESS_LIST', 'Address List')}\r\n                titleAlign={'center'}\r\n                onActionLeft={() => goToBack()}\r\n                showCall={false}\r\n                btnStyle={{ paddingLeft: 0 }}\r\n                paddingTop={0}\r\n              />\r\n            )}\r\n          {addressList.loading && (\r\n            <>\r\n              {[...Array(5)].map((item, i) => (\r\n                <Placeholder key={i} style={{ padding: 20 }} Animation={Fade}>\r\n                  <View style={{ flexDirection: 'row' }}>\r\n                    <PlaceholderLine width={20} height={60} style={{ marginBottom: 0, marginRight: 15 }} />\r\n                    <Placeholder>\r\n                      <PlaceholderLine width={70} />\r\n                      <PlaceholderLine width={40} />\r\n                      <PlaceholderLine width={70} />\r\n                    </Placeholder>\r\n                  </View>\r\n                </Placeholder>\r\n              ))}\r\n            </>\r\n          )}\r\n          {\r\n            !addressList.error &&\r\n            addressList?.addresses?.length > 0 && (\r\n              <>\r\n                {uniqueAddressesList.map((address: any) => (\r\n                  <AddressItem\r\n                    key={address.id}\r\n                    isSelected={checkAddress(address)}\r\n                    onPress={() => handleSetAddress(address)}\r\n                  >\r\n                    <MaterialIcon\r\n                      name={addressIcon(address?.tag)}\r\n                      size={32}\r\n                      color={colors.primary}\r\n                      style={styles.icon}\r\n                    />\r\n                    <OText style={styles.address}>{address.address}</OText>\r\n                    <MaterialIcon\r\n                      name='pencil-outline'\r\n                      size={28}\r\n                      color={colors.green}\r\n                      onPress={() => onNavigationRedirect(\r\n                        'AddressForm',\r\n                        {\r\n                          address: address,\r\n                          isEditing: true,\r\n                          addressesList: addressList,\r\n                          onSaveAddress: handleSaveAddress,\r\n                          isSelectedAfterAdd: true,\r\n                          isFromProductsList: isFromProductsList,\r\n                          hasAddressDefault: !!orderState.options?.address?.location\r\n                        }\r\n                      )}\r\n                    />\r\n                    <OAlert\r\n                      title={t('DELETE_ADDRESS', 'Delete Address')}\r\n                      message={t('QUESTION_DELETE_ADDRESS', 'Are you sure to you wants delete the selected address')}\r\n                      onAccept={() => handleDelete(address)}\r\n                      disabled={checkAddress(address)}\r\n                    >\r\n                      <MaterialIcon\r\n                        name='trash-can-outline'\r\n                        size={28}\r\n                        color={!checkAddress(address) ? colors.primary : colors.disabled}\r\n                      />\r\n                    </OAlert>\r\n                  </AddressItem>\r\n                ))}\r\n              </>\r\n            )}\r\n          {!addressList.loading && addressList.error && (\r\n            addressList.error.length > 0 && (\r\n              <NotFoundSource\r\n                content={\r\n                  addressList.error[0]?.message ||\r\n                  addressList.error[0] ||\r\n                  t('NETWORK_ERROR', 'Network Error, please reload the app')\r\n                }\r\n              />\r\n            )\r\n          )}\r\n          {!addressList.loading && !addressList.error && (\r\n            <>\r\n              {!(\r\n                route && (route?.params?.isFromBusinesses || route?.params?.isFromCheckout)\r\n              ) && !isFromProfile && (\r\n                  <OText size={24}>\r\n                    {t('WHERE_DELIVER_NOW', 'Where do we deliver you?')}\r\n                  </OText>\r\n                )}\r\n              <OButton\r\n                text={t('ADD_NEW_ADDRESS', 'Add new Address')}\r\n                imgRightSrc=''\r\n                imgLeftSrc={addIcon}\r\n                bgColor={colors.white}\r\n                imgLeftStyle={styles.buttonIcon}\r\n                style={styles.button}\r\n                borderColor={colors.primary}\r\n                onClick={() => onNavigationRedirect(\r\n                  'AddressForm',\r\n                  {\r\n                    address: null,\r\n                    onSaveAddress: handleSaveAddress,\r\n                    addressesList: addressList?.addresses,\r\n                    nopadding: true,\r\n                    isSelectedAfterAdd: true,\r\n                    hasAddressDefault: !!orderState.options?.address?.location\r\n                  })}\r\n              />\r\n            </>\r\n          )}\r\n          {!isFromProfile && addressList?.addresses?.length > 0 && (\r\n            <OButton\r\n              text={t('CONTINUE', 'Continue')}\r\n              style={styles.button}\r\n              onClick={() => onNavigatorRedirect()}\r\n              textStyle={{ color: colors.white }}\r\n            />\r\n          )}\r\n        </AddressListContainer>\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  address: {\r\n    flex: 1,\r\n    marginHorizontal: 5\r\n  },\r\n  icon: {\r\n    flex: 0.2\r\n  },\r\n  buttonIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    resizeMode: 'contain',\r\n    left: 20,\r\n    position: 'absolute',\r\n  },\r\n  button: {\r\n    marginVertical: 30\r\n  }\r\n})\r\n\r\nexport const AddressList = (props: AddressListParams) => {\r\n  const addressListProps = {\r\n    ...props,\r\n    UIComponent: AddressListUI\r\n  }\r\n  return <AddressListController {...addressListProps} />\r\n}\r\n"]}