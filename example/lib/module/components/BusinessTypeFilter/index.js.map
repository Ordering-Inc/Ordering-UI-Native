{"version":3,"sources":["index.tsx"],"names":["React","BusinessTypeFilter","BusinessTypeFilterController","useLanguage","BusinessCategoriesTitle","BusinessCategories","Category","IconContainer","OText","StyleSheet","MaterialIcon","Ionicons","colors","BusinessTypeFilterUI","props","businessTypes","handleChangeBusinessType","currentTypeSelected","t","categoryIcons","category","key","styles","icons","color","value","primaryContrast","backgroundGray","textSecondary","map","backgroundColor","primary","textAlign","btnFont","toUpperCase","create","padding","businessTypeFilterProps","UIComponent","defaultBusinessType","onChangeBusinessType"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { BusinessTypeFilter as BusinessTypeFilterController, useLanguage } from 'ordering-components/native'\r\nimport { BusinessCategoriesTitle, BusinessCategories, Category, IconContainer } from './styles'\r\nimport { OText } from '../shared'\r\nimport { StyleSheet } from 'react-native'\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport Ionicons from 'react-native-vector-icons/Ionicons'\r\nimport { colors } from '../../theme'\r\nimport { BusinessTypeFilterParams } from '../../types'\r\n\r\nexport const BusinessTypeFilterUI = (props: BusinessTypeFilterParams) => {\r\n  const {\r\n    businessTypes,\r\n    handleChangeBusinessType,\r\n    currentTypeSelected\r\n  } = props;\r\n\r\n  const [, t] = useLanguage();\r\n\r\n  const categoryIcons = (category: any) => {\r\n    switch (category.key) {\r\n      case 'All':\r\n        return (\r\n          <MaterialIcon\r\n            name='view-grid-plus-outline'\r\n            size={40}\r\n            style={{\r\n              ...styles.icons,\r\n              color: currentTypeSelected === category.value\r\n                ? colors.primaryContrast\r\n                : colors.backgroundGray\r\n            }}\r\n            onPress={() => handleChangeBusinessType(category.value)}\r\n          />\r\n        )\r\n      case 'Food':\r\n        return (\r\n          <Ionicons\r\n            name='fast-food-outline'\r\n            size={40}\r\n            style={{\r\n              ...styles.icons,\r\n              color: currentTypeSelected === category.value\r\n                ? colors.primaryContrast\r\n                : colors.backgroundGray\r\n            }}\r\n            onPress={() => handleChangeBusinessType(category.value)}\r\n          />\r\n        )\r\n      case 'Groceries':\r\n        return (\r\n          <MaterialIcon\r\n            name='baguette'\r\n            size={40}\r\n            style={{\r\n              ...styles.icons,\r\n              color: currentTypeSelected === category.value\r\n                ? colors.primaryContrast\r\n                : colors.backgroundGray\r\n            }}\r\n            onPress={() => handleChangeBusinessType(category.value)}\r\n          />\r\n        )\r\n      case 'Laundry':\r\n        return (\r\n          <MaterialIcon\r\n            name='washing-machine'\r\n            size={40}\r\n            style={{\r\n              ...styles.icons,\r\n              color: currentTypeSelected === category.value\r\n                ? colors.primaryContrast\r\n                : colors.backgroundGray\r\n            }}\r\n            onPress={() => handleChangeBusinessType(category.value)}\r\n          />\r\n        )\r\n      case 'Alcohol':\r\n        return (\r\n          <MaterialIcon\r\n            name='glass-wine'\r\n            size={40}\r\n            style={{\r\n              ...styles.icons,\r\n              color: currentTypeSelected === category.value\r\n                ? colors.primaryContrast\r\n                : colors.backgroundGray\r\n            }}\r\n            onPress={() => handleChangeBusinessType(category.value)}\r\n          />\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BusinessCategoriesTitle>\r\n        <OText\r\n          size={16}\r\n          color={colors.textSecondary}\r\n        >\r\n          {t('BUSINESS_CATEGORIES', 'Business Categories')}\r\n        </OText>\r\n      </BusinessCategoriesTitle>\r\n      <BusinessCategories>\r\n        {businessTypes?.map((category: any) => (\r\n          <Category key={category.key} >\r\n            <IconContainer\r\n              style={{\r\n                backgroundColor: currentTypeSelected === category.value\r\n                  ? colors.primary\r\n                  : colors.primaryContrast\r\n              }}\r\n            >\r\n              {categoryIcons(category)}\r\n            </IconContainer>\r\n            <OText\r\n              style={{ textAlign: 'center' }}\r\n              color={currentTypeSelected === category.value ? colors.btnFont : colors.textSecondary}\r\n            >\r\n              {t(`BUSINESS_TYPE_${category.value ? category.value.toUpperCase() : 'ALL'}`, category.key)}\r\n            </OText>\r\n          </Category>\r\n        ))}\r\n      </BusinessCategories>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icons: {\r\n    padding: 10\r\n  },\r\n})\r\n\r\nexport const BusinessTypeFilter = (props: BusinessTypeFilterParams) => {\r\n  const businessTypeFilterProps = {\r\n    ...props,\r\n    UIComponent: BusinessTypeFilterUI,\r\n    businessTypes: props.businessTypes || [\r\n      { key: 'All', value: null },\r\n      { key: 'Food', value: 'food' },\r\n      { key: 'Groceries', value: 'groceries' },\r\n      { key: 'Laundry', value: 'laundry' },\r\n      { key: 'Alcohol', value: 'alcohol' },\r\n    ],\r\n    defaultBusinessType: props.defaultBusinessType || null,\r\n    onChangeBusinessType: props.handleChangeBusinessType\r\n  }\r\n\r\n  return (\r\n    <BusinessTypeFilterController {...businessTypeFilterProps} />\r\n  )\r\n}\r\n"]}