{"version":3,"sources":["index.tsx"],"names":["React","useEffect","StyleSheet","Alert","CouponControl","CouponController","useLanguage","CContainer","CCWrapper","CCButton","OInput","OButton","OAlert","OText","colors","CouponControlUI","props","couponDefault","couponInput","handleButtonApplyClick","handleRemoveCouponClick","onChangeInputCoupon","confirm","setConfirm","t","handleOnAccept","error","cleanSetConfirm","open","content","alert","text","onPress","style","cancelable","white","textAlign","e","styles","inputsStyle","primary","color","create","borderColor","secundaryContrast","borderRadius","flex","marginRight","couponProp","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { StyleSheet, Alert, Text } from 'react-native';\r\nimport { CouponControl as CouponController, useLanguage } from 'ordering-components/native';\r\n\r\nimport {\r\n  CContainer,\r\n  CCWrapper,\r\n  CCButton\r\n} from './styles';\r\n\r\nimport { OInput, OButton, OAlert, OText } from '../shared';\r\nimport { colors } from '../../theme';\r\n\r\nconst CouponControlUI = (props: any) => {\r\n  const {\r\n    couponDefault,\r\n    couponInput,\r\n    handleButtonApplyClick,\r\n    handleRemoveCouponClick,\r\n    onChangeInputCoupon,\r\n    confirm,\r\n    setConfirm\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n\r\n  const handleOnAccept = () => {\r\n    if (!confirm.error) {\r\n      handleRemoveCouponClick && handleRemoveCouponClick()\r\n    }\r\n    onChangeInputCoupon('')\r\n  }\r\n\r\n  const cleanSetConfirm = () => {\r\n    setConfirm({ ...confirm, open: false, error: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (confirm.content) {\r\n      Alert.alert(\r\n        t('COUPON_ERROR', 'Coupon Error'),\r\n        confirm.content[0],\r\n        [\r\n          {\r\n            text: t('CANCEL', 'cancel'),\r\n            onPress: () => cleanSetConfirm(),\r\n            style: 'cancel'\r\n          },\r\n          {\r\n            text: t('ACCEPT', 'Accept'),\r\n            onPress: () => cleanSetConfirm()\r\n          }\r\n        ],\r\n        { cancelable: false }\r\n      )\r\n    }\r\n  }, [confirm])\r\n\r\n  return (\r\n    <CContainer>\r\n      {couponDefault ? (\r\n        <OAlert\r\n          title={t('REMOVE_COUPON', 'Remove Coupon')}\r\n          message={t('QUESTION_DELETE_COUPON', 'Are you sure that you want to delete the coupon?')}\r\n          onAccept={() => handleOnAccept()}\r\n        >\r\n          <CCButton>\r\n            <OText\r\n              size={16}\r\n              color={colors.white}\r\n              style={{ textAlign: 'center' }}\r\n            >\r\n              {`${t('REMOVE_COUPON', 'Remove Coupon')} ${couponDefault}`}\r\n            </OText>\r\n          </CCButton>\r\n        </OAlert>\r\n      ) : (\r\n        <CCWrapper>\r\n          <OInput\r\n            placeholder={t('DISCOUNT_COUPON', 'Discount coupon')}\r\n            onChange={(e: any) => onChangeInputCoupon(e)}\r\n            style={styles.inputsStyle}\r\n          />\r\n          <OButton\r\n            onClick={() => handleButtonApplyClick()}\r\n            bgColor={colors.primary}\r\n            borderColor={colors.primary}\r\n            textStyle={{color: 'white'}}\r\n            imgRightSrc={null}\r\n            text={t('APPLY', 'Apply')}\r\n            isDisabled={!couponInput}\r\n          />\r\n        </CCWrapper>\r\n      )}\r\n    </CContainer>\r\n  )\r\n}\r\nconst styles = StyleSheet.create({\r\n  inputsStyle: {\r\n    borderColor: colors.secundaryContrast,\r\n    borderRadius: 50,\r\n    flex: 1,\r\n    marginRight: 30\r\n  },\r\n});\r\n\r\nexport const CouponControl = (props: any) => {\r\n  const couponProp = {\r\n    ...props,\r\n    UIComponent: CouponControlUI\r\n  }\r\n  return (\r\n    <CouponController {...couponProp} />\r\n  )\r\n}\r\n"]}