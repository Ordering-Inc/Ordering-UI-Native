{"version":3,"sources":["index.tsx"],"names":["React","useEffect","StyleSheet","Text","AccessToken","LoginManager","useLanguage","useSession","useApi","Icon","Container","FacebookButton","colors","FacebookLogin","props","handleErrors","handleLoading","handleSuccessFacebookLogin","t","ordering","auth","buttonText","logoutWithFacebook","logOut","handleLoginClick","accessToken","response","users","authFacebook","access_token","content","error","result","err","message","loginWithFacebook","logInWithPermissions","then","login","isCancelled","getCurrentAccessToken","data","toString","replace","toUpperCase","onPressButton","skyBlue","style","fbBtn","textBtn","create","position","left","marginHorizontal","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text } from 'react-native';\r\nimport { AccessToken, LoginManager } from 'react-native-fbsdk';\r\nimport { useLanguage, useSession, useApi } from 'ordering-components/native';\r\n// import { clearAllData } from '../../providers/StoreUtil'\r\n\r\nimport Icon from 'react-native-vector-icons/FontAwesome5';\r\n\r\nimport { Container, FacebookButton } from './styles';\r\nimport { colors } from '../../theme';\r\n\r\nexport const FacebookLogin = (props: any) => {\r\n  const {\r\n    handleErrors,\r\n    handleLoading,\r\n    handleSuccessFacebookLogin\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const [ordering] = useApi()\r\n  const [{ auth }] = useSession()\r\n\r\n  const buttonText = auth\r\n    ? t('LOGOUT_WITH_FACEBOOK', 'Logout with Facebook')\r\n    : t('LOGIN_WITH_FACEBOOK', 'Login with Facebook');\r\n\r\n  const logoutWithFacebook = () => {\r\n    LoginManager.logOut();\r\n  };\r\n\r\n  const handleLoginClick = async (accessToken: string) => {\r\n    try {\r\n      const response = await ordering.users().authFacebook({ access_token: accessToken })\r\n      if (!response.content.error) {\r\n        if (handleSuccessFacebookLogin) {\r\n          handleSuccessFacebookLogin(response.content.result)\r\n          handleLoading && handleLoading(false)\r\n        }\r\n      } else {\r\n        handleLoading && handleLoading(false)\r\n        logoutWithFacebook()\r\n      }\r\n    } catch (err) {\r\n      handleLoading && handleLoading(false)\r\n      handleErrors && handleErrors(err.message)\r\n    }\r\n  }\r\n\r\n  const loginWithFacebook = () => {\r\n    handleLoading && handleLoading(true)\r\n    LoginManager.logInWithPermissions(['public_profile']).then(\r\n      (login: any) => {\r\n        if (login.isCancelled) {\r\n          const err = t('LOGIN_WITH_FACEBOOK_CANCELLED', 'Login cancelled')\r\n          handleLoading && handleLoading(false)\r\n          handleErrors && handleErrors(err)\r\n        } else {\r\n          AccessToken.getCurrentAccessToken().then((data: any) => {\r\n            const accessToken = data.accessToken.toString();\r\n            handleLoginClick(accessToken)\r\n          });\r\n        }\r\n      },\r\n      (error: any) => {\r\n        const err = error\r\n          ? t(error?.replace(/ /g, '_').toUpperCase(), 'Login cancelled')\r\n          : t('LOGIN_FAIL_WITH_FACEBOOK', 'Login fail with facebook')\r\n        handleLoading && handleLoading(true)\r\n        handleErrors && handleErrors(err)\r\n      },\r\n    );\r\n  };\r\n\r\n  const onPressButton = auth\r\n    ? logoutWithFacebook\r\n    : loginWithFacebook;\r\n\r\n  useEffect(() => {\r\n    // clearAllData()\r\n  }, [])\r\n\r\n  return (\r\n    <Container>\r\n      <FacebookButton\r\n        onPress={onPressButton}\r\n      >\r\n        <Icon\r\n          name=\"facebook\"\r\n          size={34}\r\n          color={colors.skyBlue}\r\n          style={style.fbBtn}\r\n        />\r\n        <Text style={style.textBtn}>\r\n          {buttonText}\r\n        </Text>\r\n      </FacebookButton>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  fbBtn: {\r\n    position: 'absolute',\r\n    left: 0,\r\n    marginHorizontal: 10\r\n  },\r\n  textBtn: {\r\n    fontSize: 16,\r\n    color: '#000000'\r\n  }\r\n})\r\n"]}