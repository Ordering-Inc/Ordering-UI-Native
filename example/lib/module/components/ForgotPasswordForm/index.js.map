{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","StyleSheet","useForm","Controller","BottomWrapper","NavBar","OButton","OInput","OText","colors","IMAGES","ToastType","useToast","ForgotPasswordForm","ForgotPasswordController","useLanguage","Wrapper","ForgotPasswordUI","props","navigation","formState","handleButtonForgotPasswordClick","t","showToast","control","handleSubmit","errors","emailSent","setEmailSent","onSubmit","values","email","handleChangeInputEmail","value","onChange","toLowerCase","replace","loading","result","error","Error","Success","Object","keys","length","list","stringError","map","item","i","message","goBack","paddingLeft","marginBottom","style","inputStyle","e","required","pattern","color","disabled","primary","create","borderWidth","borderColor","ForgotPasswordProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport BottomWrapper from '../BottomWrapper';\r\nimport NavBar from '../NavBar';\r\nimport { OButton, OInput, OText } from '../shared';\r\nimport { colors } from '../../theme';\r\nimport { IMAGES } from '../../config/constants';\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\n\r\nimport {\r\n  ForgotPasswordForm as ForgotPasswordController,\r\n  useLanguage\r\n} from 'ordering-components/native';\r\n\r\nimport { Wrapper } from './styles';\r\n\r\nconst ForgotPasswordUI = (props: any) => {\r\n  const {\r\n    navigation,\r\n    formState,\r\n    handleButtonForgotPasswordClick,\r\n  } = props;\r\n  const [, t] = useLanguage();\r\n  const { showToast } = useToast();\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  const [emailSent, setEmailSent] = useState(null);\r\n\r\n  const onSubmit = (values: any) => {\r\n    setEmailSent(values.email)\r\n    handleButtonForgotPasswordClick && handleButtonForgotPasswordClick(values)\r\n  }\r\n\r\n  const handleChangeInputEmail = (value : string, onChange : any) => {\r\n    onChange(value.toLowerCase().replace(/[&,()%\";:รง?<>{}\\\\[\\]\\s]/g, ''))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!formState.loading && emailSent) {\r\n      if (formState.result?.error) {\r\n        setEmailSent(null)\r\n        formState.result?.result && showToast(\r\n          ToastType.Error,\r\n          formState.result?.result[0]\r\n        )\r\n        return\r\n      }\r\n      showToast(\r\n        ToastType.Success,\r\n        `${t('SUCCESS_SEND_FORGOT_PASSWORD', 'Your link has been sent to the email')}: ${emailSent}`\r\n      )\r\n    }\r\n  }, [formState])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors)\r\n      let stringError = ''\r\n      list.map((item: any, i: number) => {\r\n        stringError += (i + 1) === list.length ? `- ${item.message}` : `- ${item.message}\\n`\r\n      })\r\n      showToast(ToastType.Error, stringError)\r\n    }\r\n  }, [errors])\r\n\r\n  return (\r\n    <>\r\n      <NavBar\r\n        title={'Forgot your password?'}\r\n        titleAlign={'center'}\r\n        onActionLeft={() => navigation.goBack()}\r\n        showCall={false}\r\n        btnStyle={{ paddingLeft: 0 }}\r\n        paddingTop={0}\r\n      />\r\n      <Wrapper>\r\n        <OText\r\n          color={'gray'}\r\n          size={16}\r\n          weight={'300'}\r\n          style={{ marginBottom: 30 }}\r\n        >\r\n          {t('FORGOT_PASSWORD_TEXT_MESSAGE', \"Enter your email address and we'll sent a link to reset your password.\")}\r\n        </OText>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, value }) => (\r\n            <OInput\r\n              placeholder={t('EMAIL', 'Email')}\r\n              style={style.inputStyle}\r\n              icon={IMAGES.email}\r\n              value={value}\r\n              onChange={(e: any) => {\r\n                handleChangeInputEmail(e, onChange)\r\n              }}\r\n              autoCapitalize='none'\r\n              autoCompleteType='off'\r\n              autoCorrect={false}\r\n              type='email-address'\r\n              isSecured\r\n            />\r\n          )}\r\n          name=\"email\"\r\n          rules={{\r\n            required: t('VALIDATION_ERROR_EMAIL_REQUIRED', 'The field Email is required').replace('_attribute_', t('EMAIL', 'Email')),\r\n            pattern: {\r\n              value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n              message: t('INVALID_ERROR_EMAIL', 'Invalid email address').replace('_attribute_', t('EMAIL', 'Email'))\r\n            }\r\n          }}\r\n          defaultValue=\"\"\r\n        />\r\n      </Wrapper>\r\n      <BottomWrapper>\r\n        <OButton\r\n          text={emailSent && !formState.result?.error ? t('LINK_SEND_FORGOT_PASSWORD', 'Link Sent') : t('FRONT_RECOVER_PASSWORD', 'Recover Password')}\r\n          textStyle={{ color: 'white' }}\r\n          bgColor={emailSent && !formState.result?.error ? colors.disabled : colors.primary}\r\n          borderColor={emailSent && !formState.result?.error ? colors.disabled : colors.primary}\r\n          isLoading={formState.loading}\r\n          onClick={emailSent && !formState.result?.error ? () => {} : handleSubmit(onSubmit)}\r\n        />\r\n      </BottomWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n  inputStyle: {\r\n    marginBottom: 25,\r\n    borderWidth: 1,\r\n    borderColor: colors.disabled\r\n  }\r\n});\r\n\r\nexport const ForgotPasswordForm = (props:  any) => {\r\n  const ForgotPasswordProps = {\r\n    ...props,\r\n    UIComponent: ForgotPasswordUI\r\n  }\r\n  return <ForgotPasswordController {...ForgotPasswordProps} />\r\n}\r\n"]}