{"version":3,"sources":["index.tsx"],"names":["React","useLanguage","useOrder","StyleSheet","View","Dimensions","colors","OButton","OIcon","OText","LogoWrapper","Slogan","LanguageSelector","TouchableOpacity","sloganImage","require","applogo","windowHeight","get","height","Home","props","onNavigationRedirect","t","orderState","styles","container","wrapperContent","languageSelector","logo","slogan","wrapperBtn","primary","buttons","color","white","textLink","marginTop","options","address","isGuestUser","create","marginRight","flexDirection","textAlign","justifyContent","alignItems","flex","width","marginVertical","marginHorizontal","sloganText","position","bottom","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useLanguage, useOrder } from 'ordering-components/native';\r\nimport { StyleSheet, View, Dimensions } from 'react-native';\r\nimport { colors } from '../../theme';\r\nimport { OButton, OIcon, OText } from '../shared';\r\nimport { LogoWrapper, Slogan } from './styles';\r\nimport { LanguageSelector } from '../LanguageSelector'\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\nconst sloganImage = require('../../assets/images/home-logo.png');\r\nconst applogo = require('../../assets/images/app-logo.png');\r\n\r\nconst windowHeight = Dimensions.get('window').height\r\n\r\nexport const Home = (props: any) => {\r\n  const {\r\n    onNavigationRedirect\r\n  } = props;\r\n\r\n  const [, t] = useLanguage();\r\n  const [orderState] = useOrder()\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.wrapperContent}>\r\n        <View style={styles.languageSelector}>\r\n          <LanguageSelector />\r\n        </View>\r\n        <LogoWrapper>\r\n          <OIcon src={applogo} style={styles.logo} />\r\n        </LogoWrapper>\r\n        <Slogan>\r\n          <OIcon src={sloganImage} style={styles.slogan} />\r\n        </Slogan>\r\n      </View>\r\n      <View style={styles.wrapperBtn}>\r\n        <OButton\r\n          text={t('LOGIN_NOW', 'Login now')}\r\n          bgColor={colors.primary}\r\n          borderColor={colors.primary}\r\n          style={styles.buttons}\r\n          textStyle={{ color: 'white' }}\r\n          onClick={() => onNavigationRedirect('Login')}\r\n        />\r\n        <OButton\r\n          text={t('SIGNUP', 'Signup')}\r\n          bgColor={colors.white}\r\n          borderColor={colors.primary}\r\n          style={styles.buttons}\r\n          onClick={() => onNavigationRedirect('Signup')}\r\n        />\r\n        <TouchableOpacity\r\n          style={{ ...styles.textLink, marginTop: 15 }}\r\n          onPress={() => orderState?.options?.address?.address\r\n            ? onNavigationRedirect('BusinessList', { isGuestUser: true })\r\n            : onNavigationRedirect('AddressForm', { isGuestUser: true })\r\n          }\r\n        >\r\n          <OText weight='bold' size={18}>\r\n            {t('CONTINUE_AS_GUEST', 'Continue as guest')}\r\n          </OText>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  languageSelector: {\r\n    marginRight: 10\r\n  },\r\n  textLink: {\r\n    flexDirection: 'row',\r\n    textAlign: 'center',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  logo: {\r\n    height: 80,\r\n    width: 250,\r\n    marginTop: 10\r\n  },\r\n  slogan: {\r\n    height: windowHeight / 2,\r\n    width: 400\r\n  },\r\n  buttons: {\r\n    marginVertical: 10,\r\n    marginHorizontal: 30\r\n  },\r\n  sloganText: {\r\n    textAlign: 'center'\r\n  },\r\n  wrapperContent: {\r\n    marginTop: 20,\r\n  },\r\n  wrapperBtn: {\r\n    width: '100%',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    marginBottom: 20\r\n  }\r\n});\r\n"]}