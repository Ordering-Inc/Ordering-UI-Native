{"version":3,"sources":["index.tsx"],"names":["React","LanguageSelector","LanguageSelectorController","useOrder","Platform","StyleSheet","RNPickerSelect","Container","colors","AntIcon","LanguageSelectorUI","props","orderState","languagesState","currentLanguage","handleChangeLanguage","_languages","languages","map","language","value","code","label","name","inputLabel","toUpperCase","sort","a","b","content","pickerStyle","icon","loading","create","inputAndroid","color","secundaryContrast","width","borderWidth","borderColor","borderRadius","paddingHorizontal","inputIOS","paddingEnd","height","backgroundColor","backgroundGray","top","OS","right","position","placeholder","LanguageProps","UIComponent"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { LanguageSelector as LanguageSelectorController, useOrder } from 'ordering-components/native'\r\nimport { Platform, StyleSheet } from 'react-native'\r\n\r\nimport RNPickerSelect from 'react-native-picker-select'\r\nimport { Container } from './styles'\r\nimport { colors } from '../../theme'\r\nimport { LanguageSelectorParams } from '../../types'\r\nimport AntIcon from 'react-native-vector-icons/AntDesign'\r\n\r\nconst LanguageSelectorUI = (props: LanguageSelectorParams) => {\r\n\r\n  const [orderState] = useOrder()\r\n\r\n  const {\r\n    languagesState,\r\n    currentLanguage,\r\n    handleChangeLanguage,\r\n  } = props\r\n\r\n  const _languages = languagesState?.languages?.map((language: any) => {\r\n    return {\r\n      value: language?.code,\r\n      label: language?.name,\r\n      inputLabel: language?.code.toUpperCase()\r\n    }\r\n  })\r\n  _languages && _languages.sort((a: any, b: any) =>\r\n    (a.content > b.content) ? 1 : ((b.content > a.content) ? -1 : 0)\r\n  )\r\n  return (\r\n    <Container>\r\n      {languagesState?.languages && (\r\n        <RNPickerSelect\r\n          onValueChange={handleChangeLanguage}\r\n          items={_languages || []}\r\n          value={currentLanguage}\r\n          style={pickerStyle}\r\n          useNativeAndroidPickerStyle={false}\r\n          placeholder={{}}\r\n          Icon={() => <AntIcon name='caretdown' style={pickerStyle.icon} />}\r\n          disabled={orderState.loading}\r\n        />\r\n      )}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst pickerStyle = StyleSheet.create({\r\n  inputAndroid: {\r\n    color: colors.secundaryContrast,\r\n    width: 60,\r\n    borderWidth: 1,\r\n    borderColor: colors.secundaryContrast,\r\n    borderRadius: 20,\r\n    paddingHorizontal: 10\r\n  },\r\n  inputIOS: {\r\n    color: colors.secundaryContrast,\r\n    paddingEnd: 20,\r\n    height: 30,\r\n    borderWidth: 1,\r\n    borderColor: 'transparent',\r\n    borderRadius: 4,\r\n    paddingHorizontal: 10,\r\n    backgroundColor: colors.backgroundGray\r\n  },\r\n  icon: {\r\n    width: 10,\r\n    height: 10,\r\n    top: Platform.OS === 'ios' ? 8 : 17,\r\n    right: Platform.OS === 'ios' ? 7 : 10,\r\n    position: 'absolute',\r\n  },\r\n  placeholder: {\r\n    color: colors.secundaryContrast\r\n  }\r\n})\r\n\r\nexport const LanguageSelector = (props: LanguageSelectorParams) => {\r\n  const LanguageProps = {\r\n    ...props,\r\n    UIComponent: LanguageSelectorUI\r\n  }\r\n\r\n  return <LanguageSelectorController {...LanguageProps} />\r\n}\r\n"]}