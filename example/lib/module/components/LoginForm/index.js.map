{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","Pressable","StyleSheet","View","Spinner","useForm","Controller","PhoneInputNumber","MaterialCommunityIcons","LoginForm","LoginFormController","useLanguage","useConfig","useSession","FacebookLogin","VerifyPhone","Container","ButtonsWrapper","LoginWith","FormSide","FormInput","OTabs","OTab","SocialButtons","OrSeparator","LineSeparator","IMAGES","ToastType","useToast","NavBar","OText","OButton","OInput","OModal","colors","LoginFormUI","props","loginTab","formState","navigation","useLoginByEmail","useLoginByCellphone","loginButtonText","forgotButtonText","verifyPhoneState","checkPhoneCodeState","registerButtonText","setCheckPhoneCodeState","handleButtonLoginClick","handleSendVerifyCode","handleCheckPhoneCode","onNavigationRedirect","showToast","t","configs","login","control","handleSubmit","errors","passwordSee","setPasswordSee","isLoadingVerifyModal","setIsLoadingVerifyModal","isModalVisible","setIsModalVisible","isFBLoading","setIsFBLoading","phoneInputData","setPhoneInputData","error","phone","country_phone_code","cellphone","handleChangeTab","val","onSubmit","values","Error","handleVerifyCodeClick","handleSuccessFacebook","user","token","session","access_token","handleChangeInputEmail","value","onChange","toLowerCase","replace","loading","result","message","okResult","Object","keys","length","list","stringError","unshift","map","item","i","goBack","paddingLeft","primary","disabled","loginStyle","inputStyle","email","e","required","pattern","marginBottom","lock","color","twilio_service_enabled","btnOutline","facebook_login","facebook_id","err","create","backgroundColor","borderWidth","borderColor","loginProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Pressable, StyleSheet, View } from 'react-native';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { PhoneInputNumber } from '../PhoneInputNumber'\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport {\r\n  LoginForm as LoginFormController,\r\n  useLanguage,\r\n  useConfig,\r\n  useSession\r\n} from 'ordering-components/native';\r\n\r\nimport { FacebookLogin } from '../FacebookLogin';\r\nimport { VerifyPhone } from '../VerifyPhone';\r\n\r\nimport {\r\n  Container,\r\n  ButtonsWrapper,\r\n  LoginWith,\r\n  FormSide,\r\n  FormInput,\r\n  OTabs,\r\n  OTab,\r\n  SocialButtons,\r\n  OrSeparator,\r\n  LineSeparator\r\n} from './styles';\r\n\r\nimport { IMAGES } from '../../config/constants';\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\nimport NavBar from '../NavBar'\r\n\r\nimport { OText, OButton, OInput, OModal } from '../shared';\r\nimport { LoginParams } from '../../types';\r\nimport { colors } from '../../theme'\r\n\r\nconst LoginFormUI = (props: LoginParams) => {\r\n  const {\r\n    loginTab,\r\n    formState,\r\n    navigation,\r\n    useLoginByEmail,\r\n    useLoginByCellphone,\r\n    loginButtonText,\r\n    forgotButtonText,\r\n    verifyPhoneState,\r\n    checkPhoneCodeState,\r\n    registerButtonText,\r\n    setCheckPhoneCodeState,\r\n    handleButtonLoginClick,\r\n    handleSendVerifyCode,\r\n    handleCheckPhoneCode,\r\n    onNavigationRedirect,\r\n  } = props\r\n\r\n  const { showToast } = useToast();\r\n  const [, t] = useLanguage()\r\n  const [{ configs }] = useConfig()\r\n  const [, { login }] = useSession()\r\n  const { control, handleSubmit, errors } = useForm();\r\n  const [passwordSee, setPasswordSee] = useState(false);\r\n  const [isLoadingVerifyModal, setIsLoadingVerifyModal] = useState(false);\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isFBLoading, setIsFBLoading] = useState(false);\r\n  const [phoneInputData, setPhoneInputData] = useState({\r\n    error: '',\r\n    phone: {\r\n      country_phone_code: null,\r\n      cellphone: null\r\n    }\r\n  });\r\n\r\n  const handleChangeTab = (val: string) => {\r\n    props.handleChangeTab(val);\r\n    setPasswordSee(false);\r\n  }\r\n\r\n  const onSubmit = (values: any) => {\r\n    if (phoneInputData.error) {\r\n      showToast(ToastType.Error, phoneInputData.error);\r\n      return\r\n    }\r\n    handleButtonLoginClick({\r\n      ...values,\r\n      ...phoneInputData.phone\r\n    });\r\n  }\r\n\r\n  const handleVerifyCodeClick = () => {\r\n    if (phoneInputData.error) {\r\n      showToast(ToastType.Error, phoneInputData.error);\r\n      return\r\n    }\r\n    if (\r\n      !phoneInputData.error &&\r\n      !phoneInputData.phone.country_phone_code &&\r\n      !phoneInputData.phone.cellphone\r\n    ) {\r\n      showToast(ToastType.Error, t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Mobile phone is required.'))\r\n      return\r\n    }\r\n    handleSendVerifyCode && handleSendVerifyCode(phoneInputData.phone)\r\n    setIsLoadingVerifyModal(true)\r\n  }\r\n\r\n  const handleSuccessFacebook = (user: any) => {\r\n    login({\r\n      user,\r\n      token: user.session.access_token\r\n    })\r\n  }\r\n\r\n  const handleChangeInputEmail = (value : string, onChange : any) => {\r\n    onChange(value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, ''))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!formState.loading && formState.result?.error) {\r\n      formState.result?.result && showToast(\r\n        ToastType.Error,\r\n        formState.result?.result[0]\r\n      )\r\n    }\r\n  }, [formState])\r\n\r\n  useEffect(() => {\r\n    if (verifyPhoneState && !verifyPhoneState?.loading) {\r\n      if (verifyPhoneState.result?.error) {\r\n        const message = typeof verifyPhoneState?.result?.result === 'string'\r\n          ? verifyPhoneState?.result?.result\r\n          : verifyPhoneState?.result?.result[0]\r\n        verifyPhoneState.result?.result && showToast(\r\n          ToastType.Error,\r\n          message\r\n        )\r\n        setIsLoadingVerifyModal(false)\r\n        return\r\n      }\r\n\r\n      const okResult = verifyPhoneState.result?.result === 'OK'\r\n      if (okResult) {\r\n        !isModalVisible && setIsModalVisible(true)\r\n        setIsLoadingVerifyModal(false)\r\n      }\r\n    }\r\n  }, [verifyPhoneState])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors)\r\n      let stringError = ''\r\n      if (phoneInputData.error) {\r\n        list.unshift({ message: phoneInputData.error })\r\n      }\r\n      if (\r\n        loginTab === 'cellphone' &&\r\n        !phoneInputData.error &&\r\n        !phoneInputData.phone.country_phone_code &&\r\n        !phoneInputData.phone.cellphone\r\n      ) {\r\n        list.unshift({ message: t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Mobile phone is required.') })\r\n      }\r\n      list.map((item: any, i: number) => {\r\n        stringError += (i + 1) === list.length ? `- ${item.message}` : `- ${item.message}\\n`\r\n      })\r\n      showToast(ToastType.Error, stringError)\r\n    }\r\n  }, [errors])\r\n\r\n  return (\r\n    <Container>\r\n      <NavBar\r\n        title={t('LOGIN', 'Login')}\r\n        titleAlign={'center'}\r\n        onActionLeft={() => navigation.goBack()}\r\n        showCall={false}\r\n        btnStyle={{ paddingLeft: 0 }}\r\n        paddingTop={0}\r\n      />\r\n      <FormSide>\r\n        {useLoginByEmail && useLoginByCellphone && (\r\n          <LoginWith>\r\n            <OTabs>\r\n              {useLoginByEmail && (\r\n                <Pressable onPress={() => handleChangeTab('email')}>\r\n                  <OTab>\r\n                    <OText size={18} color={loginTab === 'email' ? colors.primary : colors.disabled}>\r\n                      {t('LOGIN_BY_EMAIL', 'Login by Email')}\r\n                    </OText>\r\n                  </OTab>\r\n                </Pressable>\r\n              )}\r\n              {useLoginByCellphone && (\r\n                <Pressable onPress={() => handleChangeTab('cellphone')}>\r\n                  <OTab>\r\n                    <OText size={18} color={loginTab === 'cellphone' ? colors.primary : colors.disabled}>\r\n                      {t('LOGIN_BY_PHONE', 'Login by Phone')}\r\n                    </OText>\r\n                  </OTab>\r\n                </Pressable>\r\n              )}\r\n            </OTabs>\r\n          </LoginWith>\r\n        )}\r\n\r\n        {(useLoginByCellphone || useLoginByEmail) && (\r\n          <FormInput>\r\n            {useLoginByEmail && loginTab === 'email' && (\r\n              <Controller\r\n                control={control}\r\n                render={({ onChange, value }) => (\r\n                  <OInput\r\n                    placeholder={t('EMAIL', 'Email')}\r\n                    style={loginStyle.inputStyle}\r\n                    icon={IMAGES.email}\r\n                    onChange={(e: any) => {\r\n                      handleChangeInputEmail(e, onChange)\r\n                    }}\r\n                    value={value}\r\n                    autoCapitalize='none'\r\n                    autoCorrect={false}\r\n                    type='email-address'\r\n                    isSecured\r\n                  />\r\n                )}\r\n                name=\"email\"\r\n                rules={{\r\n                  required: t('VALIDATION_ERROR_EMAIL_REQUIRED', 'The field Email is required').replace('_attribute_', t('EMAIL', 'Email')),\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: t('INVALID_ERROR_EMAIL', 'Invalid email address').replace('_attribute_', t('EMAIL', 'Email'))\r\n                  }\r\n                }}\r\n                defaultValue=\"\"\r\n              />\r\n            )}\r\n            {useLoginByCellphone && loginTab === 'cellphone' && (\r\n              <View style={{ marginBottom: 25 }}>\r\n                <PhoneInputNumber\r\n                  data={phoneInputData}\r\n                  handleData={(val: any) => setPhoneInputData(val)}\r\n                />\r\n              </View>\r\n            )}\r\n\r\n            <Controller\r\n              control={control}\r\n              render={({ onChange, value }) => (\r\n                <OInput\r\n                  isSecured={!passwordSee ? true : false}\r\n                  placeholder={t('PASSWORD', 'Password')}\r\n                  style={loginStyle.inputStyle}\r\n                  icon={IMAGES.lock}\r\n                  iconCustomRight={\r\n                    !passwordSee ?\r\n                      <MaterialCommunityIcons name='eye-outline' size={24} onPress={() => setPasswordSee(!passwordSee)} /> :\r\n                      <MaterialCommunityIcons name='eye-off-outline' size={24} onPress={() => setPasswordSee(!passwordSee)} />\r\n                  }\r\n                  value={value}\r\n                  onChange={(val: any) => onChange(val)}\r\n                />\r\n              )}\r\n              name=\"password\"\r\n              rules={{ required: t('VALIDATION_ERROR_PASSWORD_REQUIRED', 'The field Password is required').replace('_attribute_', t('PASSWORD', 'Password')) }}\r\n              defaultValue=\"\"\r\n            />\r\n\r\n            <OButton\r\n              onClick={handleSubmit(onSubmit)}\r\n              text={loginButtonText}\r\n              bgColor={colors.primary}\r\n              borderColor={colors.primary}\r\n              textStyle={{ color: 'white' }}\r\n              imgRightSrc={null}\r\n              isLoading={formState.loading}\r\n            />\r\n          </FormInput>\r\n        )}\r\n\r\n        {onNavigationRedirect && forgotButtonText && (\r\n          <Pressable onPress={() => onNavigationRedirect('Forgot')}>\r\n            <OText size={20} mBottom={18}>\r\n              {forgotButtonText}\r\n            </OText>\r\n          </Pressable>\r\n        )}\r\n\r\n        {useLoginByCellphone &&\r\n          loginTab === 'cellphone' &&\r\n          configs && Object.keys(configs).length > 0 &&\r\n          (configs?.twilio_service_enabled?.value === 'true' ||\r\n            configs?.twilio_service_enabled?.value === '1') &&\r\n          (\r\n            <>\r\n              <OrSeparator>\r\n                <LineSeparator />\r\n                <OText size={18} mRight={20} mLeft={20}>\r\n                  {t('OR', 'Or')}\r\n                </OText>\r\n                <LineSeparator />\r\n              </OrSeparator>\r\n\r\n              <ButtonsWrapper mBottom={20}>\r\n                <OButton\r\n                  onClick={handleVerifyCodeClick}\r\n                  text={t('GET_VERIFY_CODE', 'Get Verify Code')}\r\n                  borderColor={colors.primary}\r\n                  style={loginStyle.btnOutline}\r\n                  imgRightSrc={null}\r\n                  isLoading={isLoadingVerifyModal}\r\n                  indicatorColor={colors.primary}\r\n                />\r\n              </ButtonsWrapper>\r\n            </>\r\n          )\r\n        }\r\n\r\n        {configs && Object.keys(configs).length > 0 && (\r\n          (configs?.facebook_login?.value === 'true' ||\r\n            configs?.facebook_login?.value === '1') &&\r\n          configs?.facebook_id?.value &&\r\n          (\r\n            <ButtonsWrapper>\r\n              <OText size={18} mBottom={10} color={colors.disabled}>\r\n                {t('SELECT_AN_OPTION_TO_LOGIN', 'Select an option to login')}\r\n              </OText>\r\n\r\n              <SocialButtons>\r\n                <FacebookLogin\r\n                  handleErrors={(err: any) => showToast(ToastType.Error, err)}\r\n                  handleLoading={(val: boolean) => setIsFBLoading(val)}\r\n                  handleSuccessFacebookLogin={handleSuccessFacebook}\r\n                />\r\n              </SocialButtons>\r\n            </ButtonsWrapper>\r\n          )\r\n        )}\r\n\r\n        {onNavigationRedirect && registerButtonText && (\r\n          <ButtonsWrapper>\r\n            <OButton\r\n              onClick={() => onNavigationRedirect('Signup')}\r\n              text={registerButtonText}\r\n              style={loginStyle.btnOutline}\r\n              borderColor={colors.primary}\r\n              imgRightSrc={null}\r\n            />\r\n          </ButtonsWrapper>\r\n        )}\r\n      </FormSide>\r\n      <OModal\r\n        open={isModalVisible}\r\n        onClose={() => setIsModalVisible(false)}\r\n      >\r\n        <VerifyPhone\r\n          phone={phoneInputData.phone}\r\n          verifyPhoneState={verifyPhoneState}\r\n          checkPhoneCodeState={checkPhoneCodeState}\r\n          handleCheckPhoneCode={handleCheckPhoneCode}\r\n          setCheckPhoneCodeState={setCheckPhoneCodeState}\r\n          handleVerifyCodeClick={handleVerifyCodeClick}\r\n        />\r\n      </OModal>\r\n      <Spinner visible={isFBLoading} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst loginStyle = StyleSheet.create({\r\n  btnOutline: {\r\n    backgroundColor: '#FFF',\r\n    color: colors.primary\r\n  },\r\n  inputStyle: {\r\n    marginBottom: 25,\r\n    borderWidth: 1,\r\n    borderColor: colors.disabled\r\n  }\r\n});\r\n\r\nexport const LoginForm = (props: any) => {\r\n  const loginProps = {\r\n    ...props,\r\n    UIComponent: LoginFormUI,\r\n  };\r\n  return <LoginFormController {...loginProps} />;\r\n};\r\n"]}