{"version":3,"sources":["index.tsx"],"names":["React","useState","useEffect","moment","MomentOption","MomentOptionController","useLanguage","useConfig","useUtils","useOrder","Spinner","StyleSheet","MaterialIcon","NavBar","OText","colors","Container","HeaderTitle","WrapSelectOption","Days","Day","WrapHours","Hours","Hour","WrapDelveryTime","MomentOptionUI","props","navigation","nopadding","datesList","hoursList","dateSelected","timeSelected","handleAsap","handleChangeDate","handleChangeTime","t","configs","parseTime","orderState","optionSelected","setOptionSelected","isAsap","isSchedule","goToBack","goBack","_handleAsap","options","paddingLeft","textSecondary","primary","styles","icon","length","slice","map","date","i","dateParts","split","_date","Date","dayName","getDay","substring","toUpperCase","dayNumber","getDate","dayNameStyle","hour","startTime","format_time","value","includes","outputFormat","loading","create","marginRight","textTransform","selectStyle","zIndex","momentOptionProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport {\r\n  MomentOption as MomentOptionController,\r\n  useLanguage,\r\n  useConfig,\r\n  useUtils,\r\n  useOrder\r\n} from 'ordering-components/native'\r\nimport Spinner from 'react-native-loading-spinner-overlay'\r\nimport { StyleSheet } from 'react-native'\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport { MomentOptionParams } from '../../types'\r\nimport NavBar from '../NavBar'\r\nimport { OText } from '../shared'\r\nimport { colors } from '../../theme'\r\nimport {Container} from '../../layouts/Container'\r\nimport {\r\n  HeaderTitle,\r\n  WrapSelectOption,\r\n  Days,\r\n  Day,\r\n  WrapHours,\r\n  Hours,\r\n  Hour,\r\n  WrapDelveryTime\r\n} from './styles'\r\n\r\nconst MomentOptionUI = (props: MomentOptionParams) => {\r\n  const {\r\n    navigation,\r\n    nopadding,\r\n    datesList,\r\n    hoursList,\r\n    dateSelected,\r\n    timeSelected,\r\n    handleAsap,\r\n    handleChangeDate,\r\n    handleChangeTime\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const [{ configs }] = useConfig()\r\n  const [{ parseTime }] = useUtils()\r\n  const [orderState] = useOrder()\r\n  const [optionSelected, setOptionSelected] = useState({ isAsap: false, isSchedule: false })\r\n\r\n  const goToBack = () => navigation.goBack()\r\n  const _handleAsap = () => {\r\n    handleAsap()\r\n    setOptionSelected({ isAsap: true, isSchedule: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (orderState.options?.moment) {\r\n      setOptionSelected({ isAsap: false, isSchedule: true })\r\n    } else {\r\n      setOptionSelected({ isAsap: true, isSchedule: false })\r\n    }\r\n  }, [orderState.options?.moment])\r\n\r\n  return (\r\n    <Container nopadding={nopadding}>\r\n      <NavBar\r\n        onActionLeft={() => goToBack()}\r\n        btnStyle={{ paddingLeft: 0 }}\r\n        paddingTop={0}\r\n      />\r\n      <HeaderTitle>\r\n        <OText size={28} weight='bold'>{t('DELIVERY_TIME', 'Delivery time')}</OText>\r\n        <OText color={colors.textSecondary}>{t('SELECT_A_DELIVERY_DATE', 'Select a Delivery Date')}</OText>\r\n      </HeaderTitle>\r\n\r\n      <WrapSelectOption\r\n        onPress={() => _handleAsap()}\r\n      >\r\n        {optionSelected.isAsap ? (\r\n          <MaterialIcon\r\n            name='radiobox-marked'\r\n            size={32}\r\n            color={colors.primary}\r\n            style={styles.icon}\r\n          />\r\n        ) : (\r\n          <MaterialIcon\r\n            name='radiobox-blank'\r\n            size={32}\r\n            color={colors.textSecondary}\r\n            style={styles.icon}\r\n          />\r\n        )}\r\n        <OText>{t('ASAP_ABBREVIATION', 'ASAP')}</OText>\r\n      </WrapSelectOption>\r\n      <WrapSelectOption\r\n        onPress={() => setOptionSelected({ isAsap: false, isSchedule: true })}\r\n      >\r\n        {optionSelected.isSchedule ? (\r\n          <MaterialIcon\r\n            name='radiobox-marked'\r\n            size={32}\r\n            color={colors.primary}\r\n            style={styles.icon}\r\n          />\r\n        ) : (\r\n          <MaterialIcon\r\n            name='radiobox-blank'\r\n            size={32}\r\n            color={colors.textSecondary}\r\n            style={styles.icon}\r\n          />\r\n        )}\r\n        <OText>{t('SCHEDULE_FOR_LATER', 'Schedule for later')}</OText>\r\n      </WrapSelectOption>\r\n\r\n      <WrapDelveryTime\r\n        pointerEvents={optionSelected.isAsap ? 'none': 'auto'}\r\n      >\r\n        {datesList.length > 0 && (\r\n          <>\r\n            <OText color={colors.textSecondary}>{t('DELIVERY_DATE', 'Delivery Date')}</OText>\r\n            <Days>\r\n              {\r\n                datesList.slice(0, 6).map((date: any, i: any) => {\r\n                  const dateParts = date.split('-')\r\n                  const _date = new Date(dateParts[0], dateParts[1] - 1, dateParts[2])\r\n                  const dayName = t('DAY' + (_date.getDay() >= 1 ? _date.getDay() : 7)).substring(0, 3).toUpperCase()\r\n                  const dayNumber = (_date.getDate() < 10 ? '0' : '') + _date.getDate()\r\n                  return (\r\n                    <Day\r\n                      key={dayNumber}\r\n                      borderLeftShow={i === 0 || i === 4}\r\n                      onPress={() => handleChangeDate(date)}\r\n                    >\r\n                      <OText\r\n                        style={styles.dayNameStyle}\r\n                        color={(dateSelected === date && optionSelected.isSchedule) ? colors.primary : colors.textSecondary}\r\n                      >{dayName}</OText>\r\n                      <OText\r\n                        size={28}\r\n                        color={(dateSelected === date && optionSelected.isSchedule) ? colors.primary : colors.textSecondary}\r\n                      >{dayNumber}</OText>\r\n                    </Day>\r\n                  )\r\n                })\r\n              }\r\n            </Days>\r\n          </>\r\n        )}\r\n\r\n        {hoursList.length > 0 && (\r\n          <>\r\n            <OText color={colors.textSecondary}>{t('DELIVERY_TIME', 'Delivery Time')}</OText>\r\n            {optionSelected.isSchedule && (\r\n              <WrapHours>\r\n                <Hours name='hours'>\r\n                  {\r\n                    hoursList.map((hour: any, i: any) => (\r\n                      <Hour\r\n                        key={i}\r\n                        onPress={() => handleChangeTime(hour.startTime)}\r\n                      >\r\n                        <OText color={timeSelected === hour.startTime ? colors.primary : colors.textSecondary}>\r\n                          {configs?.format_time?.value === '12' ? (\r\n                            hour.startTime.includes('12')\r\n                              ? `${hour.startTime}PM`\r\n                              : parseTime(moment(hour.startTime, 'HH:mm'), { outputFormat: 'hh:mma' })\r\n                          ) : (\r\n                            parseTime(moment(hour.startTime, 'HH:mm'), { outputFormat: 'HH:mm' })\r\n                          )}\r\n                        </OText>\r\n                      </Hour>\r\n                    ))\r\n                  }\r\n                </Hours>\r\n              </WrapHours>\r\n            )}\r\n          </>\r\n        )}\r\n      </WrapDelveryTime>\r\n      <Spinner visible={orderState.loading} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  icon: {\r\n    marginRight: 10\r\n  },\r\n  dayNameStyle: {\r\n    textTransform: 'uppercase'\r\n  },\r\n  selectStyle: {\r\n    zIndex: 10\r\n  }\r\n})\r\n\r\nexport const MomentOption = (props: any) => {\r\n  const momentOptionProps = {\r\n    ...props,\r\n    UIComponent: MomentOptionUI\r\n  }\r\n  return <MomentOptionController {...momentOptionProps} />\r\n}\r\n"]}