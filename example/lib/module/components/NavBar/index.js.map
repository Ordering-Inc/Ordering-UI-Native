{"version":3,"sources":["index.tsx"],"names":["React","styled","OButton","OIcon","OText","colors","useSafeAreaInsets","Platform","IMAGES","Wrapper","View","white","TitleWrapper","TitleTopWrapper","btnBackArrow","borderWidth","backgroundColor","borderColor","shadowColor","NavBar","props","safeAreaInset","goSupport","navigation","navigate","paddingTop","OS","top","style","leftImg","arrow_left","btnStyle","onActionLeft","withIcon","icon","lightGray","borderRadius","textAlign","titleAlign","marginRight","showCall","color","titleColor","paddingHorizontal","titleStyle","title","subTitle","primary","tintColor","width","height","support","onRightAction","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport styled from 'styled-components/native'\r\nimport { OButton, OIcon, OText } from '../shared'\r\nimport { colors } from '../../theme'\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context'\r\nimport { Platform, TextStyle } from 'react-native'\r\nimport { IMAGES } from '../../config/constants'\r\n\r\nconst Wrapper = styled.View`\r\n  background-color: ${colors.white};\r\n  padding: 10px 20px 20px 0px;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n`\r\nconst TitleWrapper = styled.View`\r\n  flex-direction: column;\r\n  padding-horizontal: 10px;\r\n`\r\nconst TitleTopWrapper = styled.View`\r\n  flex-grow: 1;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`\r\n\r\nconst btnBackArrow = {\r\n  borderWidth: 0,\r\n  backgroundColor: '#FFF',\r\n  borderColor: '#FFF',\r\n  shadowColor: '#FFF'\r\n}\r\n\r\ninterface Props {\r\n  navigation?: any,\r\n  route?: any,\r\n  title?: string,\r\n  subTitle?: any,\r\n  titleColor?: string,\r\n  titleAlign?: any,\r\n  withIcon?: boolean,\r\n  icon?: any,\r\n  leftImg?: any,\r\n  isBackStyle?: boolean,\r\n  onActionLeft?: () => void,\r\n  onRightAction?: () => void,\r\n  showCall?: boolean,\r\n  titleStyle?: TextStyle,\r\n  btnStyle?: TextStyle,\r\n  style?: TextStyle,\r\n  paddingTop?: number\r\n}\r\n\r\nconst NavBar = (props: Props) => {\r\n  const safeAreaInset = useSafeAreaInsets();\r\n  const goSupport = () => {\r\n    props.navigation.navigate('Supports', {});\r\n  }\r\n  return (\r\n    <Wrapper style={{ paddingTop: Platform.OS == 'ios' ? safeAreaInset.top : props.paddingTop, ...props.style }}>\r\n      <OButton\r\n        imgLeftSrc={props.leftImg || IMAGES.arrow_left}\r\n        imgRightSrc={null}\r\n        style={{ ...btnBackArrow, ...props.btnStyle }}\r\n        onClick={props.onActionLeft}\r\n      />\r\n      <TitleTopWrapper>\r\n        {props.withIcon\r\n          ? (\r\n              <OIcon\r\n                url={props.icon}\r\n                style={{\r\n                  borderColor: colors.lightGray,\r\n                  borderRadius: 20,\r\n                }}\r\n                width={60}\r\n                height={60} \r\n              />\r\n          )\r\n          : null\r\n        }\r\n        <TitleWrapper>\r\n          <OText\r\n            size={22}\r\n            weight={'600'}\r\n            style={\r\n              {\r\n                textAlign: props.titleAlign ? props.titleAlign : 'center',\r\n                marginRight: props.showCall ? 0 : 40,\r\n                color: props.titleColor || 'black',\r\n                paddingHorizontal: props.titleAlign == 'left' ? 12 : 0,\r\n                ...props.titleStyle\r\n              }\r\n            }\r\n          >\r\n            {props.title || ''}\r\n          </OText>\r\n          {props.subTitle\r\n            ? (props.subTitle)\r\n            : null\r\n          }\r\n        </TitleWrapper>\r\n      </TitleTopWrapper>\r\n      { props.showCall\r\n        ? (<OButton\r\n          isCircle={true}\r\n          bgColor={colors.primary}\r\n          borderColor={colors.primary}\r\n          imgRightSrc={null}\r\n          imgLeftStyle={{ tintColor: 'white', width: 30, height: 30 }}\r\n          imgLeftSrc={IMAGES.support}\r\n          onClick={props.onRightAction || goSupport} />)\r\n        : null\r\n      }\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nNavBar.defaultProps = {\r\n  title: '',\r\n  textAlign: 'center'\r\n};\r\n\r\nexport default NavBar;\r\n"]}