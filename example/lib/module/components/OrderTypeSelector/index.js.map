{"version":3,"sources":["index.tsx"],"names":["React","OrderTypeControl","useLanguage","ODropDown","OrderTypeWrapper","colors","OrderTypeSelectorUI","props","handleChangeOrderType","typeSelected","defaultValue","configTypes","orderTypes","undefined","inputDisabled","black","filter","type","includes","value","orderType","OrderTypeSelector","t","orderTypeProps","UIComponent","content"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,WAFF,QAGO,4BAHP;AAIA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,gBAAT,QAAiC,UAAjC;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,mBAAmB,GAAIC,KAAD,IAAkC;AAC5D,QAAM;AACJC,IAAAA,qBADI;AAEJC,IAAAA,YAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,SACEE,YAAY,KAAKI,SAAjB,iBACE,oBAAC,gBAAD,qBACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAER,MAAM,CAACS,aADlB;AAEE,IAAA,SAAS,EAAET,MAAM,CAACU,KAFpB;AAGE,IAAA,OAAO,EAAEH,UAAU,CAACI,MAAX,CAAmBC,IAAD,IAAeN,WAAf,aAAeA,WAAf,uBAAeA,WAAW,CAAEO,QAAb,CAAsBD,IAAI,CAACE,KAA3B,CAAjC,CAHX;AAIE,IAAA,YAAY,EAAET,YAAY,IAAID,YAJhC;AAKE,IAAA,QAAQ,EAAGW,SAAD,IAAoBZ,qBAAqB,CAACY,SAAD;AALrD,IADF,CAFJ;AAaD,CArBD;;AAwBA,OAAO,MAAMC,iBAAiB,GAAId,KAAD,IAAgB;AAC/C,QAAM,GAAGe,CAAH,IAAQpB,WAAW,EAAzB;AAEA,QAAMqB,cAAc,GAAG,EACrB,GAAGhB,KADkB;AAErBiB,IAAAA,WAAW,EAAElB,mBAFQ;AAGrBM,IAAAA,UAAU,EAAEL,KAAK,CAACa,SAAN,IAAmB,CAC7B;AACED,MAAAA,KAAK,EAAE,CADT;AAEEM,MAAAA,OAAO,EAAEH,CAAC,CAAC,UAAD,EAAa,UAAb;AAFZ,KAD6B,EAK7B;AACEH,MAAAA,KAAK,EAAE,CADT;AAEEM,MAAAA,OAAO,EAAEH,CAAC,CAAC,QAAD,EAAW,QAAX;AAFZ,KAL6B,EAS7B;AACEH,MAAAA,KAAK,EAAE,CADT;AAEEM,MAAAA,OAAO,EAAEH,CAAC,CAAC,QAAD,EAAW,QAAX;AAFZ,KAT6B,EAa7B;AACEH,MAAAA,KAAK,EAAE,CADT;AAEEM,MAAAA,OAAO,EAAEH,CAAC,CAAC,UAAD,EAAa,UAAb;AAFZ,KAb6B,EAiB7B;AACEH,MAAAA,KAAK,EAAE,CADT;AAEEM,MAAAA,OAAO,EAAEH,CAAC,CAAC,YAAD,EAAe,YAAf;AAFZ,KAjB6B;AAHV,GAAvB;AA2BA,sBAAO,oBAAC,gBAAD,EAAsBC,cAAtB,CAAP;AACD,CA/BM","sourcesContent":["import React from 'react'\r\nimport {\r\n  OrderTypeControl,\r\n  useLanguage\r\n} from 'ordering-components/native'\r\nimport { ODropDown } from '../shared'\r\nimport { OrderTypeWrapper } from './styles'\r\nimport { OrderTypeSelectParams } from '../../types'\r\nimport { colors } from '../../theme'\r\n\r\nconst OrderTypeSelectorUI = (props: OrderTypeSelectParams) => {\r\n  const {\r\n    handleChangeOrderType,\r\n    typeSelected,\r\n    defaultValue,\r\n    configTypes,\r\n    orderTypes\r\n  } = props\r\n  return (\r\n    typeSelected !== undefined && (\r\n      <OrderTypeWrapper>\r\n        <ODropDown\r\n          bgcolor={colors.inputDisabled}\r\n          textcolor={colors.black}\r\n          options={orderTypes.filter((type: any) => configTypes?.includes(type.value))}\r\n          defaultValue={defaultValue || typeSelected}\r\n          onSelect={(orderType: any) => handleChangeOrderType(orderType)}\r\n        />\r\n      </OrderTypeWrapper>\r\n    )\r\n  )\r\n}\r\n\r\n\r\nexport const OrderTypeSelector = (props: any) => {\r\n  const [, t] = useLanguage()\r\n\r\n  const orderTypeProps = {\r\n    ...props,\r\n    UIComponent: OrderTypeSelectorUI,\r\n    orderTypes: props.orderType || [\r\n      {\r\n        value: 1,\r\n        content: t('DELIVERY', 'Delivery')\r\n      },\r\n      {\r\n        value: 2,\r\n        content: t('PICKUP', 'Pickup')\r\n      },\r\n      {\r\n        value: 3,\r\n        content: t('EAT_IN', 'Eat in')\r\n      },\r\n      {\r\n        value: 4,\r\n        content: t('CURBSIDE', 'Curbside')\r\n      },\r\n      {\r\n        value: 5,\r\n        content: t('DRIVE_THRU', 'Drive thru')\r\n      }\r\n    ]\r\n  }\r\n\r\n  return <OrderTypeControl {...orderTypeProps} />\r\n}\r\n"]}