{"version":3,"sources":["index.tsx"],"names":["React","useState","useEffect","OrderList","useLanguage","useOrder","OText","NotFoundSource","ActiveOrders","PreviousOrders","OptionTitle","colors","ToastType","useToast","Placeholder","PlaceholderLine","Fade","View","OrdersOptionUI","props","activeOrders","orderList","pagination","titleContent","customArray","loadMoreOrders","onNavigationRedirect","t","reorder","showToast","loading","error","orders","values","imageFails","require","ordersSorted","setOrdersSorted","reorderLoading","setReorderLoading","handleReorder","orderId","result","cartUuid","uuid","err","Error","message","getOrderStatus","s","status","parseInt","orderStatus","key","value","objectStatus","find","o","sort","a","b","Math","abs","Date","created_at","getTime","length","textSecondary","marginTop","width","flexDirection","marginRight","marginBottom","Array","map","item","i","OrdersOption","MyOrdersProps","UIComponent","useDefualtSessionManager","paginationSettings","initialPage","pageSize","controlType"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { OrderList, useLanguage, useOrder } from 'ordering-components/native'\r\nimport { OText } from '../shared'\r\nimport { NotFoundSource } from '../NotFoundSource'\r\nimport { ActiveOrders } from '../ActiveOrders'\r\nimport { PreviousOrders } from '../PreviousOrders'\r\n\r\nimport { OptionTitle } from './styles'\r\nimport { colors } from '../../theme'\r\nimport { OrdersOptionParams } from '../../types'\r\nimport { ToastType, useToast } from '../../providers/ToastProvider'\r\n\r\nimport {\r\n  Placeholder,\r\n  PlaceholderMedia,\r\n  PlaceholderLine,\r\n  Fade\r\n} from \"rn-placeholder\";\r\nimport { View } from 'react-native'\r\n\r\nconst OrdersOptionUI = (props: OrdersOptionParams) => {\r\n  const {\r\n    activeOrders,\r\n    orderList,\r\n    pagination,\r\n    titleContent,\r\n    customArray,\r\n    loadMoreOrders,\r\n    onNavigationRedirect\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const [, { reorder }] = useOrder()\r\n  const { showToast } = useToast()\r\n  const { loading, error, orders: values } = orderList\r\n\r\n  const imageFails = activeOrders\r\n    ? require('../../assets/images/empty_active_orders.png')\r\n    : require('../../assets/images/empty_past_orders.png')\r\n\r\n  const orders = customArray || values\r\n\r\n  const [ordersSorted, setOrdersSorted] = useState<Array<any>>([])\r\n\r\n  const [reorderLoading, setReorderLoading] = useState(false)\r\n\r\n\r\n  const handleReorder = async (orderId: number) => {\r\n    setReorderLoading(true)\r\n    try {\r\n      const { error, result } = await reorder(orderId)\r\n      if (!error) {\r\n        onNavigationRedirect && onNavigationRedirect('CheckoutNavigator', { cartUuid: result.uuid })\r\n        return\r\n      }\r\n      setReorderLoading(false)\r\n    } catch (err) {\r\n      showToast(ToastType.Error, t('ERROR', err.message))\r\n      setReorderLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOrderStatus = (s: string) => {\r\n    const status = parseInt(s)\r\n    const orderStatus = [\r\n      { key: 0, value: t('PENDING', 'Pending') },\r\n      { key: 1, value: t('COMPLETED', 'Completed') },\r\n      { key: 2, value: t('REJECTED', 'Rejected') },\r\n      { key: 3, value: t('DRIVER_IN_BUSINESS', 'Driver in business') },\r\n      { key: 4, value: t('PREPARATION_COMPLETED', 'Preparation Completed') },\r\n      { key: 5, value: t('REJECTED_BY_BUSINESS', 'Rejected by business') },\r\n      { key: 6, value: t('REJECTED_BY_DRIVER', 'Rejected by Driver') },\r\n      { key: 7, value: t('ACCEPTED_BY_BUSINESS', 'Accepted by business') },\r\n      { key: 8, value: t('ACCEPTED_BY_DRIVER', 'Accepted by driver') },\r\n      { key: 9, value: t('PICK_UP_COMPLETED_BY_DRIVER', 'Pick up completed by driver') },\r\n      { key: 10, value: t('PICK_UP_FAILED_BY_DRIVER', 'Pick up Failed by driver') },\r\n      { key: 11, value: t('DELIVERY_COMPLETED_BY_DRIVER', 'Delivery completed by driver') },\r\n      { key: 12, value: t('DELIVERY_FAILED_BY_DRIVER', 'Delivery Failed by driver') }\r\n    ]\r\n\r\n    const objectStatus = orderStatus.find((o) => o.key === status)\r\n\r\n    return objectStatus && objectStatus\r\n  }\r\n\r\n  useEffect(() => {\r\n    const ordersSorted = orders.sort((a: any, b: any) => {\r\n      if (activeOrders) {\r\n        return Math.abs(new Date(b.created_at).getTime() - new Date(a.created_at).getTime())\r\n      }\r\n      return Math.abs(new Date(a.created_at).getTime() - new Date(b.created_at).getTime())\r\n    })\r\n    setOrdersSorted(ordersSorted)\r\n  }, [orders])\r\n\r\n  return (\r\n    <>\r\n      {(orders.length > 0) && (\r\n        <>\r\n          <OptionTitle>\r\n            <OText size={16} color={colors.textSecondary} mBottom={10} >\r\n              {titleContent || (activeOrders\r\n                ? t('ACTIVE_ORDERS', 'Active Orders')\r\n                : t('PREVIOUS_ORDERS', 'Previous Orders'))}\r\n            </OText>\r\n          </OptionTitle>\r\n          {!loading && ordersSorted.length === 0 && (\r\n            <NotFoundSource\r\n              content={t('NO_RESULTS_FOUND', 'Sorry, no results found')}\r\n              image={imageFails}\r\n              conditioned\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          {activeOrders ? (\r\n            <Placeholder style={{ marginTop: 30 }} Animation={Fade}>\r\n              <View style={{ width: '100%', flexDirection: 'row' }}>\r\n                <PlaceholderLine width={20} height={70} style={{ marginRight: 20, marginBottom: 35 }} />\r\n                <Placeholder>\r\n                  <PlaceholderLine width={30} style={{ marginTop: 5 }} />\r\n                  <PlaceholderLine width={50} />\r\n                  <PlaceholderLine width={70} />\r\n                </Placeholder>\r\n              </View>\r\n            </Placeholder>\r\n          ) : (\r\n            <View style={{ marginTop: 30 }}>\r\n              {[...Array(5)].map((item, i) => (\r\n                <Placeholder key={i} Animation={Fade}>\r\n                  <View style={{ width: '100%', flexDirection: 'row' }}>\r\n                    <PlaceholderLine width={20} height={70} style={{ marginRight: 20, marginBottom: 20 }} />\r\n                    <Placeholder>\r\n                      <PlaceholderLine width={30} style={{ marginTop: 5 }} />\r\n                      <PlaceholderLine width={50} />\r\n                      <PlaceholderLine width={20} />\r\n                    </Placeholder>\r\n                  </View>\r\n                </Placeholder>\r\n              ))}\r\n            </View>\r\n          )}\r\n        </>\r\n      )}\r\n      {!loading && !error && orders.length > 0 && (\r\n        activeOrders ? (\r\n          <ActiveOrders\r\n            orders={ordersSorted}\r\n            pagination={pagination}\r\n            loadMoreOrders={loadMoreOrders}\r\n            reorderLoading={reorderLoading}\r\n            customArray={customArray}\r\n            getOrderStatus={getOrderStatus}\r\n            onNavigationRedirect={onNavigationRedirect}\r\n          />\r\n        ) : (\r\n          <PreviousOrders\r\n            reorderLoading={reorderLoading}\r\n            orders={ordersSorted}\r\n            pagination={pagination}\r\n            loadMoreOrders={loadMoreOrders}\r\n            getOrderStatus={getOrderStatus}\r\n            onNavigationRedirect={onNavigationRedirect}\r\n            handleReorder={handleReorder}\r\n          />\r\n        )\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport const OrdersOption = (props: OrdersOptionParams) => {\r\n  const MyOrdersProps = {\r\n    ...props,\r\n    UIComponent: OrdersOptionUI,\r\n    orderStatus: props.activeOrders ? [0, 3, 4, 7, 8, 9] : [1, 2, 5, 6, 10, 11, 12],\r\n    useDefualtSessionManager: true,\r\n    paginationSettings: {\r\n      initialPage: 1,\r\n      pageSize: 10,\r\n      controlType: 'infinity'\r\n    }\r\n  }\r\n\r\n  return <OrderList {...MyOrdersProps} />\r\n\r\n}\r\n"]}