{"version":3,"sources":["index.tsx"],"names":["React","useEffect","FlatList","TouchableOpacity","View","StyleSheet","KeyboardAvoidingView","Platform","MaterialCommunityIcons","Placeholder","PlaceholderLine","Fade","PaymentOptions","PaymentOptionsController","useLanguage","PaymentOptionCash","PaymentOptionStripe","StripeElementsForm","PAYMENT_IMAGES","OText","OIcon","OModal","PMContainer","PMItem","PMCardSelected","PMCardItemContent","colors","getIconCard","stripeOptions","stripeRedirectOptions","name","value","getPayIcon","method","cash","carddelivery","paypal","stripe","stripecc","stripes","stripesb","creditCard","paypalBtnStyle","color","shape","label","size","PaymentOptionsUI","props","cart","errorCash","isLoading","isDisabled","paymethodSelected","paymethodData","paymethodsList","isPaymethodNull","onNavigationRedirect","handlePaymethodClick","handlePaymethodDataChange","t","stripeRedirectValues","paymethods","length","gateway","setErrorCash","renderPaymethods","item","id","white","backgroundDark","margin","excludeIds","sort","a","b","filter","p","includes","paymethod","toString","loading","marginTop","display","flexDirection","Array","map","_","i","borderRadius","marginRight","error","message","total","card","styles","viewStyle","primary","brand","last4","businessId","credentials","publishable","OS","create","paymentOptions","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, TouchableOpacity, View, StyleSheet, KeyboardAvoidingView, Platform, ScrollView } from 'react-native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport {\r\n  Placeholder,\r\n  PlaceholderMedia,\r\n  PlaceholderLine,\r\n  Fade\r\n} from \"rn-placeholder\";\r\n\r\nimport {\r\n  PaymentOptions as PaymentOptionsController,\r\n  useLanguage,\r\n  useSession\r\n} from 'ordering-components/native';\r\n\r\nimport { PaymentOptionCash } from '../PaymentOptionCash';\r\nimport { PaymentOptionStripe } from '../PaymentOptionStripe';\r\nimport { StripeElementsForm } from '../StripeElementsForm';\r\nimport { StripeRedirectForm } from '../StripeRedirectForm';\r\n// import { PaymentOptionPaypal } from '../PaymentOptionPaypal'\r\n// import { NotFoundSource } from '../NotFoundSource'\r\n\r\nimport { IMAGES, PAYMENT_IMAGES } from '../../config/constants';\r\nimport { OText, OButton, OIcon, OModal } from '../shared';\r\n\r\nimport {\r\n  PMContainer,\r\n  PMItem,\r\n  PMCardSelected,\r\n  PMCardItemContent\r\n} from './styles'\r\nimport { colors } from '../../theme';\r\nimport { getIconCard, flatArray } from '../../utils';\r\n\r\nconst stripeOptions = ['stripe_direct', 'stripe', 'stripe_connect']\r\nconst stripeRedirectOptions = [\r\n  { name: 'Bancontact', value: 'bancontact' },\r\n  { name: 'Alipay', value: 'alipay' },\r\n  { name: 'Giropay', value: 'giropay' },\r\n  { name: 'iDEAL', value: 'ideal' }\r\n]\r\n\r\nconst getPayIcon = (method: string) => {\r\n  switch (method) {\r\n    case 'cash':\r\n      return PAYMENT_IMAGES.cash\r\n    case 'card_delivery':\r\n      return PAYMENT_IMAGES.carddelivery\r\n    case 'paypal':\r\n      return PAYMENT_IMAGES.paypal\r\n    case 'stripe':\r\n      return PAYMENT_IMAGES.stripe\r\n    case 'stripe_direct':\r\n      return PAYMENT_IMAGES.stripecc\r\n    case 'stripe_connect':\r\n      return PAYMENT_IMAGES.stripes\r\n    case 'stripe_redirect':\r\n      return PAYMENT_IMAGES.stripesb\r\n    default:\r\n      return PAYMENT_IMAGES.creditCard\r\n  }\r\n}\r\n\r\nconst paypalBtnStyle = {\r\n  color: 'gold',\r\n  shape: 'pill',\r\n  label: 'paypal',\r\n  size: 'responsive'\r\n}\r\n\r\nconst PaymentOptionsUI = (props: any) => {\r\n  const {\r\n    cart,\r\n    errorCash,\r\n    isLoading,\r\n    isDisabled,\r\n    paymethodSelected,\r\n    paymethodData,\r\n    paymethodsList,\r\n    isPaymethodNull,\r\n    onNavigationRedirect,\r\n    handlePaymethodClick,\r\n    handlePaymethodDataChange\r\n  } = props\r\n  const [, t] = useLanguage();\r\n  // const [{ token }] = useSession()\r\n\r\n  const stripeRedirectValues = [\r\n    { name: t('SELECT_A_PAYMENT_METHOD', 'Select a payment method'), value: '-1' },\r\n  ]\r\n\r\n  useEffect(() => {\r\n    if (paymethodsList.paymethods.length === 1) {\r\n      handlePaymethodClick && handlePaymethodClick(paymethodsList.paymethods[0])\r\n    }\r\n  }, [paymethodsList.paymethods])\r\n\r\n  useEffect(() => {\r\n    if (paymethodSelected?.gateway !== 'cash' && errorCash) {\r\n      props.setErrorCash(false)\r\n    }\r\n  }, [paymethodSelected])\r\n\r\n  useEffect(() => {\r\n    !isPaymethodNull &&\r\n    handlePaymethodClick &&\r\n    handlePaymethodClick(isPaymethodNull)\r\n  }, [isPaymethodNull])\r\n\r\n  const renderPaymethods = ({ item }: any) => {\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() => handlePaymethodClick(item)}\r\n      >\r\n        <PMItem\r\n          key={item.id}\r\n          isDisabled={isDisabled}\r\n          isActive={paymethodSelected?.id === item.id}\r\n        >\r\n          <OIcon\r\n            src={getPayIcon(item.gateway)}\r\n            width={40}\r\n            height={40}\r\n            color={paymethodSelected?.id === item.id ? colors.white : colors.backgroundDark}\r\n            />\r\n          <OText\r\n            size={12}\r\n            style={{ margin: 0 }}\r\n            color={paymethodSelected?.id === item.id ? colors.white : '#000'}\r\n          >\r\n            {item.name}\r\n          </OText>\r\n        </PMItem>\r\n      </TouchableOpacity>\r\n    )\r\n  }\r\n\r\n  const excludeIds = [3, 31, 32]; //exclude paypal & connect & redirect\r\n\r\n  return (\r\n    <PMContainer>\r\n      {paymethodsList.paymethods.length > 0 && (\r\n        <FlatList\r\n          horizontal\r\n          showsHorizontalScrollIndicator={false}\r\n          // data={paymethodsList.paymethods.sort((a: any, b: any) => a.id - b.id)}\r\n          data={paymethodsList.paymethods.sort((a: any, b: any) => a.id - b.id).filter((p: any) => !excludeIds.includes(p.id))}\r\n          renderItem={renderPaymethods}\r\n          keyExtractor={paymethod => paymethod.id.toString()}\r\n        />\r\n      )}\r\n\r\n      {(paymethodsList.loading || isLoading) && (\r\n        <Placeholder style={{ marginTop: 10 }} Animation={Fade}>\r\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\r\n            {[...Array(3)].map((_, i) => (\r\n              <PlaceholderLine\r\n              key={i}\r\n              width={37}\r\n              height={80}\r\n              noMargin\r\n              style={{ borderRadius: 10, marginRight: 10 }}\r\n              />\r\n            ))}\r\n          </View>\r\n        </Placeholder>\r\n      )}\r\n\r\n      {paymethodsList.error && paymethodsList.error.length > 0 && (\r\n        <OText size={12} style={{ margin: 0 }}>\r\n          {paymethodsList?.error[0]?.message || paymethodsList?.error[0]}\r\n        </OText>\r\n      )}\r\n\r\n      {!(paymethodsList.loading || isLoading) &&\r\n        !paymethodsList.error &&\r\n        (!paymethodsList?.paymethods || paymethodsList.paymethods.length === 0) &&\r\n      (\r\n        <OText size={12} style={{ margin: 0 }}>\r\n          {t('NO_PAYMENT_METHODS', 'No payment methods!')}\r\n        </OText>\r\n      )}\r\n\r\n      {paymethodSelected?.gateway === 'cash' && (\r\n        <PaymentOptionCash\r\n          orderTotal={cart.total}\r\n          onChangeData={handlePaymethodDataChange}\r\n          setErrorCash={props.setErrorCash}\r\n        />\r\n      )}\r\n\r\n      {stripeOptions.includes(paymethodSelected?.gateway) && paymethodData?.card && (\r\n        <PMCardSelected>\r\n          <PMCardItemContent>\r\n            <View style={styles.viewStyle}>\r\n              <MaterialCommunityIcons\r\n                name='radiobox-marked'\r\n                size={24}\r\n                color={colors.primary}\r\n              />\r\n            </View>\r\n            <View style={styles.viewStyle}>\r\n              <OText>\r\n                {getIconCard(paymethodData?.card?.brand, 26)}\r\n              </OText>\r\n            </View>\r\n            <View style={styles.viewStyle}>\r\n              <OText>\r\n                XXXX-XXXX-XXXX-{paymethodData?.card?.last4}\r\n              </OText>\r\n            </View>\r\n          </PMCardItemContent>\r\n        </PMCardSelected>\r\n      )}\r\n\r\n      {/* Stripe */}\r\n      <OModal\r\n        isNotDecoration\r\n        open={paymethodSelected?.gateway === 'stripe' && !paymethodData.id}\r\n        title={t('SELECT_A_CARD', 'Select a card')}\r\n        onClose={() => handlePaymethodClick(null)}\r\n      >\r\n        {paymethodSelected?.gateway === 'stripe' && (\r\n          <PaymentOptionStripe\r\n            paymethod={paymethodSelected}\r\n            businessId={props.businessId}\r\n            publicKey={paymethodSelected.credentials.publishable}\r\n            payType={paymethodsList?.name}\r\n            onSelectCard={handlePaymethodDataChange}\r\n            onNavigationRedirect={onNavigationRedirect}\r\n            onCancel={() => handlePaymethodClick(null)}\r\n          />\r\n        )}\r\n      </OModal>\r\n\r\n      {/* Stripe direct */}\r\n      <OModal\r\n        isNotDecoration\r\n        title={t('ADD_CREDIT_OR_DEBIT_CARD', 'Add credit or debit card')}\r\n        open={paymethodSelected?.gateway === 'stripe_direct' && !paymethodData.id}\r\n        onClose={() => handlePaymethodClick(null)}\r\n      >\r\n        {paymethodSelected?.gateway === 'stripe_direct' && (\r\n          <KeyboardAvoidingView\r\n            behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\r\n            keyboardVerticalOffset={Platform.OS == 'ios' ? 0 : 0}\r\n            enabled={Platform.OS === 'ios' ? true : false}\r\n          >\r\n            <StripeElementsForm\r\n              businessId={props.businessId}\r\n              publicKey={paymethodSelected.credentials.publishable}\r\n              handleSource={handlePaymethodDataChange}\r\n              onCancel={() => handlePaymethodClick(null)}\r\n            />\r\n          </KeyboardAvoidingView>\r\n        )}\r\n      </OModal>\r\n\r\n      {/* Stripe Connect */}\r\n      {/* <OModal\r\n        isNotDecoration\r\n        open={paymethodSelected?.gateway === 'stripe_connect' && !paymethodData.id}\r\n        title={t('SELECT_A_CARD', 'Select a card')}\r\n        onClose={() => handlePaymethodClick(null)}\r\n      >\r\n        {paymethodSelected?.gateway === 'stripe_connect' && (\r\n          <PaymentOptionStripe\r\n            paymethod={paymethodSelected}\r\n            businessId={props.businessId}\r\n            publicKey={paymethodSelected.credentials.stripe.publishable}\r\n            clientSecret={paymethodSelected.credentials.publishable}\r\n            payType={paymethodsList?.name}\r\n            onSelectCard={handlePaymethodDataChange}\r\n            onCancel={() => handlePaymethodClick(null)}\r\n          />\r\n        )}\r\n      </OModal> */}\r\n\r\n      {/* Stripe Redirect */}\r\n      {/* <OModal\r\n        isNotDecoration\r\n        open={['stripe_redirect'].includes(paymethodSelected?.gateway) && !paymethodData.type}\r\n        title={t('STRIPE_REDIRECT', 'Stripe Redirect')}\r\n        onClose={() => handlePaymethodClick(null)}\r\n      >\r\n        <StripeRedirectForm\r\n          businessId={props.businessId}\r\n          currency={props.currency}\r\n          // paymethods={flatArray([stripeRedirectValues, stripeRedirectOptions])}\r\n          publicKey={paymethodSelected?.credentials?.publishable}\r\n          paymethods={stripeRedirectOptions}\r\n          handleStripeRedirect={handlePaymethodDataChange}\r\n        />\r\n      </OModal> */}\r\n\r\n      {/* Paypal */}\r\n      {/* <Modal\r\n        className='modal-info'\r\n        open={paymethodSelected?.gateway === 'paypal' && !paymethodData.id}\r\n        onClose={() => handlePaymethodClick(null)}\r\n        title={t('PAY_WITH_PAYPAL', 'Pay with PayPal')}\r\n      >\r\n        {paymethodSelected?.gateway === 'paypal' && (\r\n          <PaymentOptionPaypal\r\n            clientId={paymethodSelected?.credentials?.client_id}\r\n            body={{\r\n              paymethod_id: paymethodSelected.id,\r\n              amount: cart.total,\r\n              delivery_zone_id: cart.delivery_zone_id,\r\n              cartUuid: cart.uuid\r\n            }}\r\n            btnStyle={paypalBtnStyle}\r\n            noAuthMessage={\r\n              !token\r\n                ? t('NEED_LOGIN_TO_USE', 'Sorry, you need to login to use this method')\r\n                : null\r\n            }\r\n            handlerChangePaypal={(uuid) => onNavigationRedirect && onNavigationRedirect('OrderDetails', { orderId: uuid })}\r\n          />\r\n        )}\r\n      </Modal> */}\r\n    </PMContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  viewStyle: {\r\n    marginRight: 10\r\n  },\r\n})\r\n\r\nexport const PaymentOptions = (props: any) => {\r\n  const paymentOptions = {\r\n    ...props,\r\n    UIComponent: PaymentOptionsUI\r\n  }\r\n  return (\r\n    <PaymentOptionsController {...paymentOptions} />\r\n  )\r\n}\r\n"]}