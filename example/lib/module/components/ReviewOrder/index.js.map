{"version":3,"sources":["index.tsx"],"names":["React","useState","useEffect","OrderReview","ReviewOrderController","useLanguage","MaterialCommunityIcon","useForm","Controller","ReviewOrderContainer","BusinessLogo","FormReviews","Category","Stars","OButton","OIcon","OInput","OText","TouchableOpacity","StyleSheet","colors","useToast","ToastType","NavBar","Spinner","ReviewOrderUI","props","order","stars","handleChangeInput","handleChangeRating","handleSendReview","formState","navigation","t","showToast","handleSubmit","control","errors","alertState","setAlertState","open","content","success","categories","quality","name","show","punctuality","service","packaging","onSubmit","Object","values","some","value","map","category","i","replace","toUpperCase","getStarArr","rating","error","loading","Error","result","Success","goBack","keys","length","list","stringError","item","message","getStar","star","index","target","backgroundDark","primary","paddingLeft","logo","onChange","val","styles","inputTextArea","inputDisabled","required","color","white","marginTop","create","borderColor","secundaryContrast","borderRadius","marginVertical","height","alignItems","ReviewOrder","reviewOrderProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { OrderReview as ReviewOrderController, useLanguage } from 'ordering-components/native'\r\nimport MaterialCommunityIcon from 'react-native-vector-icons/MaterialCommunityIcons'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nimport {\r\n  ReviewOrderContainer,\r\n  BusinessLogo,\r\n  FormReviews,\r\n  Category,\r\n  Stars\r\n} from './styles'\r\nimport { OButton, OIcon, OInput, OText } from '../shared'\r\nimport { TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { colors } from '../../theme'\r\nimport { useToast, ToastType } from '../../providers/ToastProvider'\r\nimport NavBar from '../NavBar'\r\nimport Spinner from 'react-native-loading-spinner-overlay'\r\n\r\nimport { ReviewOrderParams } from '../../types'\r\n\r\nexport const ReviewOrderUI = (props: ReviewOrderParams) => {\r\n  const {\r\n    order,\r\n    stars,\r\n    handleChangeInput,\r\n    handleChangeRating,\r\n    handleSendReview,\r\n    formState,\r\n    navigation\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const { showToast } = useToast()\r\n  const { handleSubmit, control, errors } = useForm()\r\n\r\n  const [alertState, setAlertState] = useState<{ open: boolean, content: Array<any>, success?: boolean }>({ open: false, content: [], success: false })\r\n\r\n  const categories = {\r\n    quality: { name: 'quality', show: t('QUALITY', 'Quality of Product') },\r\n    punctuality: { name: 'punctiality', show: t('PUNCTUALITY', 'Punctuality') },\r\n    service: { name: 'service', show: t('SERVICE', 'Service') },\r\n    packaging: { name: 'packaging', show: t('PRODUCT_PACKAGING', 'Product Packaging') }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (Object.values(stars).some(value => value === 0)) {\r\n      setAlertState({\r\n        open: true,\r\n        content: Object.values(categories).map((category, i) => stars[category.name] === 0 ? `- ${t('CATEGORY_ATLEAST_ONE', `${category.show} must be at least one point`).replace('CATEGORY', category.name.toUpperCase())} ${i !== 3 && '\\n'}` : ' ')\r\n      })\r\n      return\r\n    }\r\n    handleSendReview()\r\n    setAlertState({ ...alertState, success: true })\r\n  }\r\n\r\n  const getStarArr = (rating: number) => {\r\n    switch (rating) {\r\n      case 0:\r\n        return [0, 0, 0, 0, 0];\r\n      case 1:\r\n        return [1, 0, 0, 0, 0];\r\n      case 2:\r\n        return [1, 1, 0, 0, 0];\r\n      case 3:\r\n        return [1, 1, 1, 0, 0];\r\n      case 4:\r\n        return [1, 1, 1, 1, 0];\r\n      case 5:\r\n        return [1, 1, 1, 1, 1];\r\n      default:\r\n        return [0, 0, 0, 0, 0];\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (formState.error && !formState?.loading) {\r\n      showToast(ToastType.Error, formState.result)\r\n    }\r\n    if (!formState.loading && !formState.error && alertState.success) {\r\n      showToast(ToastType.Success, t('REVIEW_SUCCESS_CONTENT', 'Thank you, Review successfully submitted!'))\r\n      navigation.goBack()\r\n    }\r\n  }, [formState.result])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors);\r\n      let stringError = '';\r\n      list.map((item: any, i: number) => {\r\n        stringError +=\r\n          i + 1 === list.length ? `- ${item.message}` : `- ${item.message}\\n`;\r\n      });\r\n      showToast(ToastType.Error, stringError);\r\n    }\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    if (alertState.open) {\r\n      alertState.content && showToast(\r\n        ToastType.Error,\r\n        alertState.content\r\n      )\r\n    }\r\n  }, [alertState.content])\r\n\r\n\r\n  const getStar = (star: number, index: number, category: string) => {\r\n    switch (star) {\r\n      case 0:\r\n        return (\r\n          <TouchableOpacity key={index} onPress={() => handleChangeRating({ target: { name: category, value: index + 1 } })}>\r\n            <MaterialCommunityIcon name='star-outline' size={24} color={colors.backgroundDark} />\r\n          </TouchableOpacity>\r\n        )\r\n      case 1:\r\n        return (\r\n          <TouchableOpacity key={index} onPress={() => handleChangeRating({ target: { name: category, value: index + 1 } })}>\r\n            <MaterialCommunityIcon name='star' size={24} color={colors.primary} />\r\n          </TouchableOpacity>\r\n        )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ReviewOrderContainer>\r\n      <NavBar\r\n        title={t('REVIEW_ORDER', 'Review your Order')}\r\n        titleAlign={'center'}\r\n        onActionLeft={() => navigation.goBack()}\r\n        showCall={false}\r\n        btnStyle={{ paddingLeft: 0 }}\r\n        paddingTop={0}\r\n      />\r\n      <BusinessLogo>\r\n        <OIcon url={order?.logo} width={100} height={100} />\r\n      </BusinessLogo>\r\n      <FormReviews>\r\n        {Object.values(categories).map(category => (\r\n          <Category key={category.name}>\r\n            <OText>{category.show}</OText>\r\n            <Stars>\r\n              {getStarArr(stars[category?.name]).map((star, index) => getStar(star, index, category.name))}\r\n            </Stars>\r\n          </Category>\r\n        ))}\r\n        <Controller\r\n          control={control}\r\n          defaultValue=''\r\n          name='comments'\r\n          render={({onChange}) => (\r\n            <OInput\r\n              name='comments'\r\n              placeholder={t('COMMENTS', 'Comments')}\r\n              onChange={(val: string) => {\r\n                onChange(val)\r\n                handleChangeInput(val)\r\n              }}\r\n              style={styles.inputTextArea}\r\n              multiline\r\n              bgColor={colors.inputDisabled}\r\n            />\r\n          )}\r\n          rules={{\r\n            required: t('FIELD_COMMENT_REQUIRED', 'The field comments is required')\r\n          }}\r\n        />\r\n      </FormReviews>\r\n      <OButton\r\n        textStyle={{ color: colors.white }}\r\n        style={{ marginTop: 20 }}\r\n        text={t('SAVE', 'Save')}\r\n        imgRightSrc=''\r\n        onClick={handleSubmit(onSubmit)}\r\n      />\r\n      <Spinner visible={formState.loading} />\r\n    </ReviewOrderContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputTextArea: {\r\n    borderColor: colors.secundaryContrast,\r\n    borderRadius: 10,\r\n    marginVertical: 20,\r\n    height: 150,\r\n    alignItems: 'flex-start'\r\n  }\r\n})\r\n\r\nexport const ReviewOrder = (props: ReviewOrderParams) => {\r\n  const reviewOrderProps = {\r\n    ...props,\r\n    UIComponent: ReviewOrderUI\r\n  }\r\n  return <ReviewOrderController {...reviewOrderProps} />\r\n}\r\n"]}