{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","View","Pressable","StyleSheet","useForm","Controller","Spinner","MaterialCommunityIcons","PhoneInputNumber","FacebookLogin","SignupForm","SignUpController","useLanguage","useConfig","useSession","FormSide","FormInput","ButtonsSection","SocialButtons","LoginWith","SignupWith","OTab","OTabs","IMAGES","ToastType","useToast","NavBar","VerifyPhone","OText","OButton","OInput","OModal","colors","sortInputFields","notValidationFields","SignupFormUI","props","navigation","loginButtonText","signupButtonText","onNavigationRedirect","formState","validationFields","showField","isRequiredField","useChekoutFileds","useSignupByEmail","useSignupByCellphone","handleSuccessSignup","handleButtonSignupClick","verifyPhoneState","checkPhoneCodeState","setCheckPhoneCodeState","handleSendVerifyCode","handleCheckPhoneCode","showInputPhoneNumber","fields","checkout","cellphone","enabled","showToast","t","login","configs","control","handleSubmit","errors","passwordSee","setPasswordSee","formValues","setFormValues","isModalVisible","setIsModalVisible","isLoadingVerifyModal","setIsLoadingVerifyModal","signupTab","setSignupTab","isFBLoading","setIsFBLoading","phoneInputData","setPhoneInputData","error","phone","country_phone_code","handleSuccessFacebook","user","token","session","access_token","navigate","handleChangeTab","val","onSubmit","values","Error","required","loading","result","handleVerifyCodeClick","formData","getInputRules","field","rules","code","toUpperCase","name","replace","pattern","value","message","handleChangeInputEmail","onChange","toLowerCase","Object","keys","length","list","push","stringError","map","item","i","okResult","goBack","paddingLeft","twilio_service_enabled","paddingBottom","primary","disabled","includes","id","style","inputStyle","email","marginBottom","lock","minLength","color","white","wrappText","marginRight","facebook_login","facebook_id","err","create","btnOutline","backgroundColor","borderWidth","borderColor","display","flexDirection","justifyContent","signupProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { View, Pressable, StyleSheet } from 'react-native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons'\r\n\r\nimport { PhoneInputNumber } from '../PhoneInputNumber'\r\nimport { FacebookLogin } from '../FacebookLogin'\r\n\r\nimport {\r\n  SignupForm as SignUpController,\r\n  useLanguage,\r\n  useConfig,\r\n  useSession\r\n} from 'ordering-components/native';\r\n\r\nimport {\r\n  FormSide,\r\n  FormInput,\r\n  ButtonsSection,\r\n  SocialButtons\r\n} from './styles'\r\n\r\nimport { LoginWith as SignupWith, OTab, OTabs } from '../LoginForm/styles'\r\n\r\nimport { IMAGES } from '../../config/constants';\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\nimport NavBar from '../NavBar'\r\nimport { VerifyPhone } from '../VerifyPhone';\r\n\r\nimport { OText, OButton, OInput, OModal } from '../shared';\r\nimport { SignupParams } from '../../types';\r\nimport { colors } from '../../theme'\r\nimport { sortInputFields } from '../../utils';\r\n\r\nconst notValidationFields = ['coupon', 'driver_tip', 'mobile_phone', 'address', 'address_notes']\r\n\r\nconst SignupFormUI = (props: SignupParams) => {\r\n  const {\r\n    navigation,\r\n    loginButtonText,\r\n    signupButtonText,\r\n    onNavigationRedirect,\r\n    formState,\r\n    validationFields,\r\n    showField,\r\n    isRequiredField,\r\n    useChekoutFileds,\r\n    useSignupByEmail,\r\n    useSignupByCellphone,\r\n    handleSuccessSignup,\r\n    handleButtonSignupClick,\r\n    verifyPhoneState,\r\n    checkPhoneCodeState,\r\n    setCheckPhoneCodeState,\r\n    handleSendVerifyCode,\r\n    handleCheckPhoneCode\r\n  } = props\r\n\r\n  const showInputPhoneNumber = validationFields?.fields?.checkout?.cellphone?.enabled ?? false\r\n\r\n  const { showToast } = useToast();\r\n  const [, t] = useLanguage();\r\n  const [, { login }] = useSession();\r\n  const [{ configs }] = useConfig();\r\n  const { control, handleSubmit, errors } = useForm();\r\n\r\n  const [passwordSee, setPasswordSee] = useState(false);\r\n  const [formValues, setFormValues] = useState(null)\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [isLoadingVerifyModal, setIsLoadingVerifyModal] = useState(false);\r\n  const [signupTab, setSignupTab] = useState(useSignupByCellphone && !useSignupByEmail ? 'cellphone' : 'email')\r\n  const [isFBLoading, setIsFBLoading] = useState(false)\r\n  const [phoneInputData, setPhoneInputData] = useState({\r\n    error: '',\r\n    phone: {\r\n      country_phone_code: null,\r\n      cellphone: null\r\n    }\r\n  });\r\n\r\n  const handleSuccessFacebook = (user: any) => {\r\n    login({\r\n      user,\r\n      token: user.session.access_token\r\n    })\r\n    navigation.navigate('Home');\r\n  }\r\n\r\n  const handleChangeTab = (val: string) => {\r\n    setSignupTab(val);\r\n    setPasswordSee(false);\r\n  }\r\n\r\n  const onSubmit = (values: any) => {\r\n    if (phoneInputData.error) {\r\n      showToast(ToastType.Error, phoneInputData.error);\r\n      return\r\n    }\r\n    if (\r\n      !phoneInputData.phone.country_phone_code &&\r\n      !phoneInputData.phone.cellphone &&\r\n      validationFields?.fields?.checkout?.cellphone?.enabled &&\r\n      validationFields?.fields?.checkout?.cellphone?.required\r\n    ) {\r\n      showToast(ToastType.Error, t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Mobile phone is required.'))\r\n      return\r\n    }\r\n    if (signupTab === 'email' || !useSignupByCellphone) {\r\n      handleButtonSignupClick && handleButtonSignupClick({\r\n        ...values,\r\n        ...phoneInputData.phone\r\n      })\r\n      if (!formState.loading && formState.result.result && !formState.result.error) {\r\n        handleSuccessSignup && handleSuccessSignup(formState.result.result)\r\n      }\r\n      return\r\n    }\r\n    setFormValues(values)\r\n    handleVerifyCodeClick(values)\r\n  }\r\n\r\n  const handleVerifyCodeClick = (values: any) => {\r\n    const formData = values || formValues\r\n    handleSendVerifyCode && handleSendVerifyCode({\r\n      ...formData,\r\n      ...phoneInputData.phone\r\n    })\r\n    setIsLoadingVerifyModal(true)\r\n  }\r\n\r\n  // get object with rules for hook form inputs\r\n  const getInputRules = (field: any) => {\r\n    const rules: any = {\r\n      required: isRequiredField(field.code)\r\n        ? t(`VALIDATION_ERROR_${field.code.toUpperCase()}_REQUIRED`, `${field.name} is required`)\r\n          .replace('_attribute_', t(field.name, field.code))\r\n        : null\r\n    }\r\n    if (field.code && field.code === 'email') {\r\n      rules.pattern = {\r\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n        message: t('INVALID_ERROR_EMAIL', 'Invalid email address').replace('_attribute_', t('EMAIL', 'Email'))\r\n      }\r\n    }\r\n    return rules\r\n  }\r\n\r\n  const handleChangeInputEmail = (value: string, onChange: any) => {\r\n    onChange(value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, ''))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!formState.loading && formState.result?.error) {\r\n      formState.result?.result && showToast(\r\n        ToastType.Error,\r\n        formState.result?.result[0]\r\n      )\r\n      setIsLoadingVerifyModal(false)\r\n    }\r\n  }, [formState])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors)\r\n      if (phoneInputData.error) {\r\n        list.push({ message: phoneInputData.error })\r\n      }\r\n      if (\r\n        !phoneInputData.error &&\r\n        !phoneInputData.phone.country_phone_code &&\r\n        !phoneInputData.phone.cellphone &&\r\n        validationFields?.fields?.checkout?.cellphone?.enabled &&\r\n        validationFields?.fields?.checkout?.cellphone?.required\r\n      ) {\r\n        list.push({ message: t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Mobile phone is required.') })\r\n      }\r\n      let stringError = ''\r\n      list.map((item: any, i: number) => {\r\n        stringError += (i + 1) === list.length ? `- ${item.message}` : `- ${item.message}\\n`\r\n      })\r\n      showToast(ToastType.Error, stringError)\r\n      setIsLoadingVerifyModal(false)\r\n    }\r\n  }, [errors])\r\n\r\n  useEffect(() => {\r\n    if (verifyPhoneState && !verifyPhoneState?.loading) {\r\n      if (verifyPhoneState.result?.error) {\r\n        const message = typeof verifyPhoneState?.result?.result === 'string'\r\n          ? verifyPhoneState?.result?.result\r\n          : verifyPhoneState?.result?.result[0]\r\n        verifyPhoneState.result?.result && showToast(\r\n          ToastType.Error,\r\n          message\r\n        )\r\n        setIsLoadingVerifyModal(false)\r\n        return\r\n      }\r\n\r\n      const okResult = verifyPhoneState.result?.result === 'OK'\r\n      if (okResult) {\r\n        !isModalVisible && setIsModalVisible(true)\r\n        setIsLoadingVerifyModal(false)\r\n      }\r\n    }\r\n  }, [verifyPhoneState])\r\n\r\n  return (\r\n    <View>\r\n      <NavBar\r\n        title={t('SIGNUP', 'Signup')}\r\n        titleAlign={'center'}\r\n        onActionLeft={() => navigation.goBack()}\r\n        showCall={false}\r\n        btnStyle={{ paddingLeft: 0 }}\r\n      />\r\n      <FormSide>\r\n        {useSignupByEmail && useSignupByCellphone &&\r\n          configs && Object.keys(configs).length > 0 &&\r\n          (configs?.twilio_service_enabled?.value === 'true' ||\r\n            configs?.twilio_service_enabled?.value === '1') && (\r\n            <SignupWith style={{ paddingBottom: 25 }}>\r\n              <OTabs>\r\n                {useSignupByEmail && (\r\n                  <Pressable onPress={() => handleChangeTab('email')}>\r\n                    <OTab>\r\n                      <OText size={18} color={signupTab === 'email' ? colors.primary : colors.disabled}>\r\n                        {t('SIGNUP_BY_EMAIL', 'Signup by Email')}\r\n                      </OText>\r\n                    </OTab>\r\n                  </Pressable>\r\n                )}\r\n                {useSignupByCellphone && (\r\n                  <Pressable onPress={() => handleChangeTab('cellphone')}>\r\n                    <OTab>\r\n                      <OText size={18} color={signupTab === 'cellphone' ? colors.primary : colors.disabled}>\r\n                        {t('SIGNUP_BY_PHONE', 'Signup by Phone')}\r\n                      </OText>\r\n                    </OTab>\r\n                  </Pressable>\r\n                )}\r\n              </OTabs>\r\n            </SignupWith>\r\n          )}\r\n        <FormInput>\r\n          {!(useChekoutFileds && validationFields?.loading) ? (\r\n            <>\r\n              {sortInputFields({ values: validationFields?.fields?.checkout }).map((field: any) =>\r\n                !notValidationFields.includes(field.code) &&\r\n                (\r\n                  showField && showField(field.code) && (\r\n                    <Controller\r\n                      key={field.id}\r\n                      control={control}\r\n                      render={({ onChange, value }) => (\r\n                        <OInput\r\n                          placeholder={t(field.name)}\r\n                          style={style.inputStyle}\r\n                          icon={field.code === 'email' ? IMAGES.email : IMAGES.user}\r\n                          value={value}\r\n                          onChange={(val: any) => field.code !== 'email' ? onChange(val) : handleChangeInputEmail(val, onChange)}\r\n                          autoCapitalize={field.code === 'email' ? 'none' : 'sentences'}\r\n                          autoCorrect={field.code === 'email' && false}\r\n                          type={field.code === 'email' ? 'email-address' : 'default'}\r\n                          isSecured={field.code === 'email'}\r\n                        />\r\n                      )}\r\n                      name={field.code}\r\n                      rules={getInputRules(field)}\r\n                      defaultValue=\"\"\r\n                    />\r\n                  )\r\n                ))\r\n              }\r\n\r\n              {!!showInputPhoneNumber && (\r\n                <View style={{ marginBottom: 25 }}>\r\n                  <PhoneInputNumber\r\n                    data={phoneInputData}\r\n                    handleData={(val: any) => setPhoneInputData(val)}\r\n                  />\r\n                </View>\r\n              )}\r\n\r\n              {signupTab !== 'cellphone' && (\r\n                <Controller\r\n                  control={control}\r\n                  render={({ onChange, value }) => (\r\n                    <OInput\r\n                      isSecured={!passwordSee ? true : false}\r\n                      placeholder={t('PASSWORD', 'Password')}\r\n                      style={style.inputStyle}\r\n                      icon={IMAGES.lock}\r\n                      iconCustomRight={\r\n                        !passwordSee ?\r\n                          <MaterialCommunityIcons name='eye-outline' size={24} onPress={() => setPasswordSee(!passwordSee)} /> :\r\n                          <MaterialCommunityIcons name='eye-off-outline' size={24} onPress={() => setPasswordSee(!passwordSee)} />\r\n                      }\r\n                      value={value}\r\n                      onChange={(val: any) => onChange(val)}\r\n                    />\r\n                  )}\r\n                  name=\"password\"\r\n                  rules={{\r\n                    required: isRequiredField('password')\r\n                      ? t('VALIDATION_ERROR_PASSWORD_REQUIRED', 'The field Password is required')\r\n                        .replace('_attribute_', t('PASSWORD', 'password'))\r\n                      : null,\r\n                    minLength: {\r\n                      value: 8,\r\n                      message: t('VALIDATION_ERROR_PASSWORD_MIN_STRING', 'The Password must be at least 8 characters.')\r\n                        .replace('_attribute_', t('PASSWORD', 'Password')).replace('_min_', 8)\r\n                    }\r\n                  }}\r\n                  defaultValue=\"\"\r\n                />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <Spinner visible />\r\n          )}\r\n\r\n          {signupTab === 'cellphone' && useSignupByEmail && useSignupByCellphone ? (\r\n            <OButton\r\n              onClick={handleSubmit(onSubmit)}\r\n              text={t('GET_VERIFY_CODE', 'Get Verify Code')}\r\n              borderColor={colors.primary}\r\n              imgRightSrc={null}\r\n              textStyle={{ color: 'white' }}\r\n              isLoading={isLoadingVerifyModal}\r\n              indicatorColor={colors.white}\r\n            />\r\n          ) : (\r\n            <OButton\r\n              onClick={handleSubmit(onSubmit)}\r\n              text={signupButtonText}\r\n              bgColor={colors.primary}\r\n              borderColor={colors.primary}\r\n              textStyle={{ color: 'white' }}\r\n              imgRightSrc={null}\r\n              isDisabled={formState.loading || validationFields.loading}\r\n            />\r\n\r\n          )}\r\n        </FormInput>\r\n\r\n        {\r\n          onNavigationRedirect && loginButtonText && (\r\n            <View style={style.wrappText}>\r\n              <OText size={18} style={{ marginRight: 5 }}>\r\n                {t('MOBILE_FRONT_ALREADY_HAVE_AN_ACCOUNT', 'Already have an account?')}\r\n              </OText>\r\n              <Pressable onPress={() => onNavigationRedirect('Login')}>\r\n                <OText size={18} color={colors.primary}>\r\n                  {loginButtonText}\r\n                </OText>\r\n              </Pressable>\r\n            </View>\r\n          )\r\n        }\r\n\r\n        {\r\n          configs && Object.keys(configs).length > 0 && (\r\n            (configs?.facebook_login?.value === 'true' ||\r\n              configs?.facebook_login?.value === '1') &&\r\n            configs?.facebook_id?.value &&\r\n            (\r\n              <ButtonsSection>\r\n                <OText size={18} color={colors.disabled}>\r\n                  {t('SELECT_AN_OPTION_TO_LOGIN', 'Select an option to login')}\r\n                </OText>\r\n\r\n                <SocialButtons>\r\n                  <FacebookLogin\r\n                    handleErrors={(err: any) => showToast(ToastType.Error, err)}\r\n                    handleLoading={(val: boolean) => setIsFBLoading(val)}\r\n                    handleSuccessFacebookLogin={handleSuccessFacebook}\r\n                  />\r\n                </SocialButtons>\r\n              </ButtonsSection>\r\n            )\r\n          )\r\n        }\r\n      </FormSide >\r\n      <OModal\r\n        open={isModalVisible}\r\n        onClose={() => setIsModalVisible(false)}\r\n      >\r\n        <VerifyPhone\r\n          phone={phoneInputData.phone}\r\n          formValues={formValues}\r\n          verifyPhoneState={verifyPhoneState}\r\n          checkPhoneCodeState={checkPhoneCodeState}\r\n          handleCheckPhoneCode={handleCheckPhoneCode}\r\n          setCheckPhoneCodeState={setCheckPhoneCodeState}\r\n          handleVerifyCodeClick={onSubmit}\r\n        />\r\n      </OModal>\r\n      <Spinner visible={formState.loading || validationFields.loading || isFBLoading} />\r\n    </View >\r\n  );\r\n};\r\n\r\nconst style = StyleSheet.create({\r\n  btnOutline: {\r\n    backgroundColor: '#FFF',\r\n    color: colors.primary\r\n  },\r\n  inputStyle: {\r\n    marginBottom: 25,\r\n    borderWidth: 1,\r\n    borderColor: colors.disabled\r\n  },\r\n  wrappText: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 30\r\n  }\r\n});\r\n\r\nexport const SignupForm = (props: any) => {\r\n  const signupProps = {\r\n    ...props,\r\n    UIComponent: SignupFormUI,\r\n  };\r\n  return <SignUpController {...signupProps} />;\r\n};\r\n"]}