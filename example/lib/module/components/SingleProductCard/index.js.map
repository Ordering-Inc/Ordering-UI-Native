{"version":3,"sources":["index.tsx"],"names":["React","useLanguage","useConfig","useOrder","useUtils","CardContainer","CardInfo","SoldOut","StyleSheet","colors","OText","OIcon","SingleProductCard","props","businessId","product","isSoldOut","onProductClick","t","stateConfig","parsePrice","optimizeImage","orderState","editMode","code","removeToBalance","quantity","cart","carts","productCart","products","find","prod","id","totalBalance","maxCartProductConfig","configs","max_product_amount","parseInt","productBalance","reduce","sum","_product","maxCartProductInventory","inventoried","undefined","isNaN","maxProductQuantity","Math","min","styles","container","soldOutBackgroundStyle","images","productStyle","textStyle","name","description","primary","price","soldOutTextStyle","create","borderWidth","borderRadius","borderColor","lightGray","marginBottom","flex","backgroundColor","textTransform","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useLanguage, useConfig, useOrder, useUtils } from 'ordering-components/native'\r\nimport { SingleProductCardParams } from '../../types'\r\nimport {\r\n  CardContainer,\r\n  CardInfo,\r\n  SoldOut\r\n} from './styles'\r\nimport { StyleSheet } from 'react-native'\r\nimport { colors } from '../../theme'\r\nimport { OText, OIcon } from '../shared'\r\n\r\nexport const SingleProductCard = (props: SingleProductCardParams) => {\r\n  const {\r\n    businessId,\r\n    product,\r\n    isSoldOut,\r\n    onProductClick\r\n  } = props\r\n\r\n  const [, t] = useLanguage()\r\n  const [stateConfig] = useConfig()\r\n  const [{ parsePrice, optimizeImage }] = useUtils()\r\n  const [orderState] = useOrder()\r\n\r\n  const editMode = typeof product?.code !== 'undefined'\r\n\r\n  const removeToBalance = editMode ? product?.quantity : 0\r\n  const cart = orderState.carts[`businessId:${businessId}`]\r\n  const productCart = cart?.products?.find((prod: any) => prod.id === product?.id)\r\n  const totalBalance = (productCart?.quantity || 0) - removeToBalance\r\n\r\n  const maxCartProductConfig = (stateConfig.configs.max_product_amount ? parseInt(stateConfig.configs.max_product_amount) : 100) - totalBalance\r\n\r\n  const productBalance = (cart?.products?.reduce((sum: any, _product: any) => sum + (product && _product.id === product?.id ? _product.quantity : 0), 0) || 0) - removeToBalance\r\n  let maxCartProductInventory = (product?.inventoried ? product?.quantity : undefined) - productBalance\r\n  maxCartProductInventory = !isNaN(maxCartProductInventory) ? maxCartProductInventory : maxCartProductConfig\r\n\r\n  const maxProductQuantity = Math.min(maxCartProductConfig, maxCartProductInventory)\r\n\r\n  return (\r\n    <CardContainer style={[styles.container, (isSoldOut || maxProductQuantity <= 0) && styles.soldOutBackgroundStyle]}\r\n      onPress={() => onProductClick(product)}\r\n    >\r\n      <OIcon\r\n        url={optimizeImage(product?.images, 'h_200,c_limit')}\r\n        style={styles.productStyle}\r\n      />\r\n      <CardInfo>\r\n        <OText numberOfLines={1} ellipsizeMode='tail' style={styles.textStyle}>{product?.name}</OText>\r\n        <OText size={12} numberOfLines={2} ellipsizeMode='tail' style={styles.textStyle}>{product?.description}</OText>\r\n        <OText color={colors.primary}>{parsePrice(product?.price)}</OText>\r\n      </CardInfo>\r\n\r\n      {(isSoldOut || maxProductQuantity <= 0) && (\r\n        <SoldOut>\r\n          <OText weight='bold' style={styles.soldOutTextStyle}>{t('SOLD_OUT', 'SOLD OUT')}</OText>\r\n        </SoldOut>\r\n      )}\r\n    </CardContainer>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    borderColor: colors.lightGray,\r\n    marginBottom: 15,\r\n  },\r\n  textStyle: {\r\n    flex: 1,\r\n  },\r\n  soldOutBackgroundStyle: {\r\n    backgroundColor: '#B8B8B8',\r\n  },\r\n  soldOutTextStyle : {\r\n    textTransform: 'uppercase'\r\n  },\r\n  productStyle: {\r\n    width: 75,\r\n    height: 75,\r\n    borderRadius: 10,\r\n  }\r\n})\r\n"]}