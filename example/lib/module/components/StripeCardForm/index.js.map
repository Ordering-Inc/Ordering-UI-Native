{"version":3,"sources":["index.tsx"],"names":["React","useState","View","StyleSheet","useLanguage","CreditCardInput","StripeCardForm","CardForm","FormStripe","FormRow","ErrorMessage","FormActions","OButton","OText","colors","StripeCardFormUI","props","stateCardForm","handleCancel","error","loading","t","cardState","setCardState","handleChange","values","handleSubmit","marginTop","styles","label","input","cancelColor","backgroundGray","textAlign","width","color","valid","primary","create","fontSize","cardFormProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { useLanguage } from 'ordering-components/native';\r\nimport { CreditCardInput } from 'react-native-credit-card-input';\r\nimport { StripeCardForm as CardForm } from './naked';\r\n\r\nimport {\r\n  FormStripe,\r\n  FormRow,\r\n  ErrorMessage,\r\n  FormActions\r\n} from './styles';\r\n\r\nimport { OButton, OText } from '../shared';\r\nimport { colors } from '../../theme';\r\n\r\nconst StripeCardFormUI = (props:  any) => {\r\n  const { stateCardForm, handleCancel } = props;\r\n\r\n  const { error, loading } = stateCardForm;\r\n\r\n  const [, t] = useLanguage();\r\n  const [cardState, setCardState] = useState<any>(null)\r\n\r\n  const handleChange = (values: any) => setCardState(values);\r\n\r\n  const handleSubmit = () => props.handleSubmit && props.handleSubmit(cardState)\r\n\r\n  return (\r\n    <FormStripe>\r\n      <FormRow style={{ marginTop: 30 }}>\r\n        <CreditCardInput\r\n          autoFocus\r\n          requiresCVC\r\n          labelStyle={styles.label}\r\n          inputStyle={styles.input}\r\n          validColor={'#000000'}\r\n          invalidColor={colors.cancelColor}\r\n          placeholderColor={colors.backgroundGray}\r\n          onChange={handleChange}\r\n        />\r\n        <ErrorMessage>\r\n          <OText color={colors.error} style={{ textAlign: 'center' }}>\r\n            {error}\r\n          </OText>\r\n        </ErrorMessage>\r\n      </FormRow>\r\n      <FormActions>\r\n        <View style={{ width: '49%' }}>\r\n          <OButton\r\n            text={t('CANCEL', 'Cancel')}\r\n            bgColor={colors.backgroundGray}\r\n            borderColor={colors.backgroundGray}\r\n            textStyle={{color: 'white'}}\r\n            imgRightSrc={null}\r\n            onClick={() => handleCancel()}\r\n          />\r\n        </View>\r\n        <View style={{ width: '49%' }}>\r\n          <OButton\r\n            text={loading ? t('LOADING', 'Loading...') : t('ADD', 'Add')}\r\n            isDisabled={!cardState?.valid || loading}\r\n            bgColor={colors.primary}\r\n            borderColor={colors.primary}\r\n            textStyle={{color: 'white'}}\r\n            imgRightSrc={null}\r\n            onClick={handleSubmit}\r\n          />\r\n        </View>\r\n      </FormActions>\r\n    </FormStripe>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: '#000',\r\n    fontSize: 14,\r\n  },\r\n  input: {\r\n    fontSize: 18,\r\n    color: '#000'\r\n  },\r\n})\r\n\r\nexport const StripeCardForm = (props: any) => {\r\n  const cardFormProps = {\r\n    ...props,\r\n    UIComponent: StripeCardFormUI\r\n  }\r\n  return <CardForm {...cardFormProps} />\r\n}\r\n"]}