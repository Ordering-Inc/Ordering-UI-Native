{"version":3,"sources":["naked.tsx"],"names":["React","useEffect","useState","useApi","useSession","StripeElementsForm","props","UIComponent","toSave","ordering","token","state","setState","loading","error","requirements","getRequirements","response","fetch","root","headers","Authorization","result","json"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,4BAAnC;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,KAAD,IAAgB;AAChD,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA;AAFI,MAGFF,KAHJ;AAKA,QAAM,CAACG,QAAD,IAAaN,MAAM,EAAzB;AACA,QAAM,CAAC;AAAEO,IAAAA;AAAF,GAAD,IAAcN,UAAU,EAA9B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC;AAAEW,IAAAA,OAAO,EAAE,KAAX;AAAkBC,IAAAA,KAAK,EAAE,IAAzB;AAA+BC,IAAAA,YAAY,EAAE;AAA7C,GAAD,CAAlC;;AAEA,QAAMC,eAAe,GAAG,YAAY;AAClC,QAAI;AACFJ,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAET,QAAQ,CAACU,IAAK,6CADS,EAE1B;AACEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASX,KAAM;AADxB;AADX,OAF0B,CAA5B;AAQA,YAAM;AAAEY,QAAAA;AAAF,UAAa,MAAML,QAAQ,CAACM,IAAT,EAAzB;AACAX,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,QAAAA,OAAO,EAAE,KAFF;AAGPE,QAAAA,YAAY,EAAEO;AAHP,OAAD,CAAR;AAKD,KAnBD,CAmBE,OAAOR,KAAP,EAAc;AACdF,MAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEPE,QAAAA,OAAO,EAAE,KAFF;AAGPC,QAAAA;AAHO,OAAD,CAAR;AAKD;AACF,GA3BD;;AA6BAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,KAAL,EAAY;AACZF,IAAAA,MAAM,IAAIQ,eAAe,EAAzB;AACD,GAHQ,EAGN,CAACN,KAAD,CAHM,CAAT;AAKA,sBACE,oBAAC,WAAD,eACMJ,KADN;AAEE,IAAA,MAAM,EAAEK,KAFV;AAGE,IAAA,YAAY,EAAEA,KAAK,CAACI;AAHtB,KADF;AAOD,CAnDM","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useApi, useSession } from 'ordering-components/native';\r\n\r\nexport const StripeElementsForm = (props: any) => {\r\n  const {\r\n    UIComponent,\r\n    toSave\r\n  } = props;\r\n\r\n  const [ordering] = useApi();\r\n  const [{ token }] = useSession();\r\n  const [state, setState] = useState({ loading: false, error: null, requirements: null });\r\n\r\n  const getRequirements = async () => {\r\n    try {\r\n      setState({\r\n        ...state,\r\n        loading: true\r\n      })\r\n      const response = await fetch(\r\n        `${ordering.root}/payments/stripe/requirements?type=add_card`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`\r\n          }\r\n        }\r\n      )\r\n      const { result } = await response.json();\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        requirements: result\r\n      })\r\n    } catch (error) {\r\n      setState({\r\n        ...state,\r\n        loading: false,\r\n        error\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!token) return\r\n    toSave && getRequirements()\r\n  }, [token])\r\n\r\n  return (\r\n    <UIComponent\r\n      {...props}\r\n      values={state}\r\n      requirements={state.requirements}\r\n    />\r\n  )\r\n}\r\n"]}