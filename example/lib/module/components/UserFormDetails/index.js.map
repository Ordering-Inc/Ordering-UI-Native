{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","StyleSheet","useSession","useLanguage","useForm","Controller","UDForm","UDLoader","UDWrapper","WrapperPhone","ToastType","useToast","OText","OButton","OInput","colors","IMAGES","PhoneInputNumber","sortInputFields","UserFormDetailsUI","props","isEdit","formState","showField","cleanFormState","onCloseProfile","isRequiredField","validationFields","handleChangeInput","handleButtonUpdateClick","phoneUpdate","t","showToast","handleSubmit","control","errors","setValue","user","userPhoneNumber","setUserPhoneNumber","phoneInputData","setPhoneInputData","error","phone","country_phone_code","cellphone","showInputPhoneNumber","fields","checkout","enabled","getInputRules","field","rules","required","code","toUpperCase","name","replace","pattern","value","message","setUserCellPhone","includes","onSubmit","Error","Object","keys","changes","length","handleChangePhoneNumber","number","phoneNumber","list","values","push","stringError","map","item","i","loading","result","id","styles","inputStyle","email","val","target","toLowerCase","marginHorizontal","textAlign","primary","color","create","btnOutline","backgroundColor","marginBottom","borderWidth","borderColor","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { useSession, useLanguage } from 'ordering-components/native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\nimport { UDForm, UDLoader, UDWrapper, WrapperPhone } from './styles';\r\n\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\nimport { OText, OButton, OInput } from '../shared';\r\nimport { colors } from '../../theme';\r\nimport { IMAGES } from '../../config/constants';\r\n\r\nimport { PhoneInputNumber } from '../PhoneInputNumber'\r\nimport { sortInputFields } from '../../utils';\r\n\r\nexport const UserFormDetailsUI = (props: any) => {\r\n  const {\r\n    isEdit,\r\n    formState,\r\n    showField,\r\n    cleanFormState,\r\n    onCloseProfile,\r\n    isRequiredField,\r\n    validationFields,\r\n    handleChangeInput,\r\n    handleButtonUpdateClick,\r\n    phoneUpdate,\r\n  } = props\r\n\r\n  const [, t] = useLanguage();\r\n  const { showToast } = useToast();\r\n  const { handleSubmit, control, errors, setValue } = useForm();\r\n\r\n  const [{ user }] = useSession()\r\n  const [userPhoneNumber, setUserPhoneNumber] = useState<any>(null)\r\n  const [phoneInputData, setPhoneInputData] = useState({\r\n    error: '',\r\n    phone: {\r\n      country_phone_code: null,\r\n      cellphone: null\r\n    }\r\n  });\r\n\r\n  const showInputPhoneNumber = validationFields?.fields?.checkout?.cellphone?.enabled ?? false\r\n\r\n  const getInputRules = (field: any) => {\r\n    const rules: any = {\r\n      required: isRequiredField(field.code)\r\n        ? t(`VALIDATION_ERROR_${field.code.toUpperCase()}_REQUIRED`, `${field.name} is required`)\r\n          .replace('_attribute_', t(field.name, field.code))\r\n        : null\r\n    }\r\n    if (field.code && field.code === 'email') {\r\n      rules.pattern = {\r\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n        message: t('INVALID_ERROR_EMAIL', 'Invalid email address').replace('_attribute_', t('EMAIL', 'Email'))\r\n      }\r\n    }\r\n    return rules\r\n  }\r\n\r\n  const setUserCellPhone = (isEdit = false) => {\r\n    if (userPhoneNumber && !userPhoneNumber.includes('null') && !isEdit) {\r\n      setUserPhoneNumber(userPhoneNumber)\r\n      return\r\n    }\r\n    if (user?.cellphone) {\r\n      let phone = null\r\n      if (user?.country_phone_code) {\r\n        phone = `+${user?.country_phone_code} ${user?.cellphone}`\r\n      } else {\r\n        phone = user?.cellphone\r\n      }\r\n      setUserPhoneNumber(phone)\r\n      setPhoneInputData({\r\n        ...phoneInputData,\r\n        phone: {\r\n          country_phone_code: user?.country_phone_code || null,\r\n          cellphone: user?.cellphone || null\r\n        }\r\n      })\r\n      return\r\n    }\r\n    setUserPhoneNumber(user?.cellphone || '')\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    if (phoneInputData.error) {\r\n      showToast(ToastType.Error, phoneInputData.error)\r\n      return\r\n    }\r\n    if (Object.keys(formState.changes).length > 0) {\r\n      if (\r\n        formState.changes?.cellphone === null &&\r\n        validationFields?.fields?.checkout?.cellphone?.enabled &&\r\n        validationFields?.fields?.checkout?.cellphone?.required\r\n      ) {\r\n        showToast(\r\n          ToastType.Error,\r\n          t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Phone Number is required.')\r\n        );\r\n        return\r\n      }\r\n      let changes = null\r\n      if (user?.cellphone && !userPhoneNumber) {\r\n        changes = {\r\n          country_phone_code: '',\r\n          cellphone: ''\r\n        }\r\n      }\r\n      handleButtonUpdateClick(changes)\r\n    }\r\n  }\r\n\r\n  const handleChangePhoneNumber = (number: any) => {\r\n    setPhoneInputData(number)\r\n    let phoneNumber = {\r\n      country_phone_code: {\r\n        name: 'country_phone_code',\r\n        value: number.phone.country_phone_code\r\n      },\r\n      cellphone: {\r\n        name: 'cellphone',\r\n        value: number.phone.cellphone\r\n      }\r\n    }\r\n    handleChangeInput(phoneNumber, true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      const list = Object.values(errors)\r\n      if (phoneInputData.error) {\r\n        list.push({ message: phoneInputData.error })\r\n      }\r\n      let stringError = ''\r\n      list.map((item: any, i: number) => {\r\n        stringError += (i + 1) === list.length ? `- ${item.message}` : `- ${item.message}\\n`\r\n      })\r\n      showToast(ToastType.Error, stringError)\r\n    }\r\n  }, [errors])\r\n\r\n  useEffect(() => {\r\n    if ((!formState?.loading && formState?.result?.error)) {\r\n      formState.result?.result && showToast(\r\n        ToastType.Error,\r\n        formState.result?.result[0]\r\n      )\r\n    }\r\n  }, [formState?.loading])\r\n\r\n  useEffect(() => {\r\n    if (!isEdit && onCloseProfile) {\r\n      onCloseProfile()\r\n    }\r\n    if ((user || !isEdit) && !formState?.loading) {\r\n      setUserCellPhone()\r\n      if (!isEdit && !formState?.loading) {\r\n        cleanFormState && cleanFormState({ changes: {} })\r\n        setUserCellPhone(true)\r\n      }\r\n    }\r\n  }, [user, isEdit])\r\n\r\n  return (\r\n    <>\r\n      <UDForm>\r\n        {!validationFields?.loading &&\r\n          sortInputFields({ values: validationFields.fields?.checkout }).length > 0 &&\r\n        (\r\n          <UDWrapper>\r\n            {sortInputFields({ values: validationFields.fields?.checkout }).map((field: any) =>\r\n              (\r\n                showField && showField(field.code) && (\r\n                  <React.Fragment key={field.id}>\r\n                    <Controller\r\n                      key={field.id}\r\n                      control={control}\r\n                      render={() => (\r\n                        <OInput\r\n                          name={field.code}\r\n                          placeholder={t(field.code.toUpperCase(), field?.name)}\r\n                          style={styles.inputStyle}\r\n                          icon={field.code === 'email' ? IMAGES.email : IMAGES.user}\r\n                          autoCapitalize={field.code === 'email' ? 'none' : 'sentences'}\r\n                          isDisabled={!isEdit}\r\n                          value={formState?.changes[field.code] ?? (user && user[field.code]) ?? ''}\r\n                            onChange={(val: any) => {\r\n                              field.code !== 'email' ? setValue(field.code, val.target.value) : setValue(field.code, val.target.value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, ''))\r\n                              field.code !== 'email' ? handleChangeInput(val) : handleChangeInput({target: {name : 'email', value: val.target.value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, '')}})\r\n                            }}\r\n                          autoCorrect={field.code === 'email' && false}\r\n                          type={field.code === 'email' ? 'email-address' : 'default'}\r\n                          isSecured={field.code === 'email'}\r\n                        />\r\n                      )}\r\n                      name={field.code}\r\n                      rules={getInputRules(field)}\r\n                      defaultValue={user && user[field.code]}\r\n                    />\r\n                  </React.Fragment>\r\n                )\r\n              ))}\r\n\r\n            {!!showInputPhoneNumber && (\r\n              <WrapperPhone>\r\n                <PhoneInputNumber\r\n                  data={phoneInputData}\r\n                  handleData={(val: any) => handleChangePhoneNumber(val)}\r\n                  defaultValue={phoneUpdate ? '' : user?.cellphone}\r\n                />\r\n                {phoneUpdate && (\r\n                  <OText color={colors.error} style={{ marginHorizontal: 10, textAlign: 'center' }}>{t('YOUR_PREVIOUS_CELLPHONE', 'Your previous cellphone')}: {user?.cellphone}</OText>\r\n                )}\r\n              </WrapperPhone>\r\n            )}\r\n\r\n          </UDWrapper>\r\n        )}\r\n        {validationFields?.loading && (\r\n          <UDLoader>\r\n            <OText size={20}>\r\n              Loading...\r\n            </OText>\r\n          </UDLoader>\r\n        )}\r\n      </UDForm>\r\n      {((formState && Object.keys(formState?.changes).length > 0 && isEdit) || formState?.loading) && (\r\n        <OButton\r\n          text={formState.loading ? t('UPDATING', 'Updating...') : t('UPDATE', 'Update')}\r\n          bgColor={colors.primary}\r\n          textStyle={{ color: 'white' }}\r\n          borderColor={colors.primary}\r\n          isDisabled={formState.loading}\r\n          imgRightSrc={null}\r\n          onClick={handleSubmit(onSubmit)}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  btnOutline: {\r\n    backgroundColor: '#FFF',\r\n    color: colors.primary\r\n  },\r\n  inputStyle: {\r\n    marginBottom: 25,\r\n    borderWidth: 1,\r\n    borderColor: colors.disabled\r\n  }\r\n});\r\n"]}