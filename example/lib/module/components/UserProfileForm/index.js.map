{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","UserFormDetails","UserProfileController","useSession","useLanguage","useForm","Controller","launchImageLibrary","Spinner","StyleSheet","View","IMAGES","colors","ToastType","useToast","sortInputFields","AddressList","LogoutButton","LanguageSelector","PhoneInputNumber","OIcon","OIconButton","OInput","OText","OButton","CenterView","UserData","Names","EditButton","Actions","WrapperPhone","ProfileUI","props","navigation","isEdit","formState","validationFields","showField","isRequiredField","toggleIsEdit","cleanFormState","handleChangeInput","handleButtonUpdateClick","user","t","showToast","handleSubmit","errors","setValue","control","phoneInputData","setPhoneInputData","error","phone","country_phone_code","cellphone","phoneUpdate","setPhoneUpdate","onSubmit","values","Error","changes","fields","checkout","enabled","required","password","length","replace","handleImagePicker","mediaType","maxHeight","maxWidth","includeBase64","response","didCancel","console","log","errorMessage","uri","url","type","base64","handleCancelEdit","handleChangePhoneNumber","number","phoneNumber","name","value","getInputRules","field","rules","code","toUpperCase","pattern","message","result","loading","Success","Object","keys","list","stringError","map","item","i","photo","borderRadius","camera","clear","width","height","lastname","middle_name","second_lastname","email","justifyContent","alignItems","id","whiteGray","styles","inputbox","val","target","toLowerCase","marginHorizontal","textAlign","lock","white","primary","fontSize","editButton","flex","marginLeft","color","create","dropdown","borderColor","marginTop","marginVertical","backgroundColor","borderWidth","UserProfileForm","profileProps","UIComponent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  UserFormDetails as UserProfileController,\r\n  useSession,\r\n  useLanguage,\r\n} from 'ordering-components/native';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { launchImageLibrary } from 'react-native-image-picker';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport { IMAGES } from '../../config/constants';\r\nimport { colors } from '../../theme';\r\nimport { ToastType, useToast } from '../../providers/ToastProvider';\r\nimport { ProfileParams } from '../../types';\r\nimport { sortInputFields } from '../../utils';\r\nimport { AddressList } from '../AddressList'\r\nimport { LogoutButton } from '../LogoutButton'\r\nimport { LanguageSelector } from '../LanguageSelector'\r\nimport { PhoneInputNumber } from '../PhoneInputNumber'\r\n\r\nimport {\r\n  OIcon,\r\n  OIconButton,\r\n  OInput,\r\n  OText,\r\n  OButton,\r\n} from '../../components/shared';\r\nimport {\r\n  CenterView,\r\n  UserData,\r\n  Names,\r\n  EditButton,\r\n  Actions,\r\n  WrapperPhone\r\n} from './styles';\r\n\r\nconst ProfileUI = (props: ProfileParams) => {\r\n  const {\r\n    navigation,\r\n    isEdit,\r\n    formState,\r\n    validationFields,\r\n    showField,\r\n    isRequiredField,\r\n    toggleIsEdit,\r\n    cleanFormState,\r\n    handleChangeInput,\r\n    handleButtonUpdateClick\r\n  } = props;\r\n\r\n  const [{ user }] = useSession();\r\n  const [, t] = useLanguage();\r\n  const { showToast } = useToast();\r\n  const { handleSubmit, errors, setValue, control } = useForm();\r\n\r\n  const [phoneInputData, setPhoneInputData] = useState({\r\n    error: '',\r\n    phone: {\r\n      country_phone_code: null,\r\n      cellphone: null\r\n    }\r\n  });\r\n  const [phoneUpdate, setPhoneUpdate] = useState(false)\r\n\r\n  const onSubmit = (values: any) => {\r\n    if (phoneInputData.error) {\r\n      showToast(ToastType.Error, phoneInputData.error)\r\n      return\r\n    }\r\n    if (\r\n      formState.changes.cellphone === '' &&\r\n      validationFields?.fields?.checkout?.cellphone?.enabled &&\r\n      validationFields?.fields?.checkout?.cellphone?.required\r\n    ) {\r\n      showToast(\r\n        ToastType.Error,\r\n        t('VALIDATION_ERROR_MOBILE_PHONE_REQUIRED', 'The field Phone Number is required.')\r\n      );\r\n      return\r\n    }\r\n    if (formState.changes.password && formState.changes.password.length < 8) {\r\n      showToast(ToastType.Error, t('VALIDATION_ERROR_PASSWORD_MIN_STRING', 'The Password must be at least 8 characters.').replace('_attribute_', t('PASSWORD', 'Password')).replace('_min_', 8))\r\n      return\r\n    }\r\n\r\n    handleButtonUpdateClick(values);\r\n  }\r\n\r\n  const handleImagePicker = () => {\r\n    launchImageLibrary({ mediaType: 'photo', maxHeight: 200, maxWidth: 200, includeBase64: true }, (response) => {\r\n      if (response.didCancel) {\r\n        console.log('User cancelled image picker');\r\n      } else if (response.errorMessage) {\r\n        console.log('ImagePicker Error: ', response.errorMessage);\r\n        showToast(ToastType.Error, response.errorMessage);\r\n      } else {\r\n        if (response.uri) {\r\n          const url = `data:${response.type};base64,${response.base64}`\r\n          handleButtonUpdateClick(null, true, url);\r\n        } else {\r\n          showToast(ToastType.Error, t('IMAGE_NOT_FOUND', 'Image not found'));\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    cleanFormState({ changes: {} });\r\n    toggleIsEdit();\r\n    setPhoneInputData({\r\n      error: '',\r\n      phone: {\r\n        country_phone_code: null,\r\n        cellphone: null\r\n      }\r\n    })\r\n  };\r\n\r\n  const handleChangePhoneNumber = (number: any) => {\r\n    setPhoneInputData(number)\r\n    let phoneNumber = {\r\n      country_phone_code: {\r\n        name: 'country_phone_code',\r\n        value: number.phone.country_phone_code\r\n      },\r\n      cellphone: {\r\n        name: 'cellphone',\r\n        value: number.phone.cellphone\r\n      }\r\n    }\r\n    handleChangeInput(phoneNumber, true)\r\n  }\r\n\r\n  const getInputRules = (field: any) => {\r\n    const rules: any = {\r\n      required: isRequiredField(field.code)\r\n        ? t(`VALIDATION_ERROR_${field.code.toUpperCase()}_REQUIRED`, `${field.name} is required`)\r\n          .replace('_attribute_', t(field.name, field.code))\r\n        : null\r\n    }\r\n    if (field.code && field.code === 'email') {\r\n      rules.pattern = {\r\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n        message: t('INVALID_ERROR_EMAIL', 'Invalid email address').replace('_attribute_', t('EMAIL', 'Email'))\r\n      }\r\n    }\r\n    return rules\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (formState.result.result && !formState.loading) {\r\n      if (formState.result?.error) {\r\n        showToast(ToastType.Error, formState.result.result);\r\n      } else {\r\n        showToast(ToastType.Success, t('UPDATE_SUCCESSFULLY', 'Update successfully'));\r\n      }\r\n    }\r\n  }, [formState.result])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length > 0) {\r\n      // Convert all errors in one string to show in toast provider\r\n      const list = Object.values(errors);\r\n      let stringError = '';\r\n      list.map((item: any, i: number) => {\r\n        stringError +=\r\n          i + 1 === list.length ? `- ${item.message}` : `- ${item.message}\\n`;\r\n      });\r\n      showToast(ToastType.Error, stringError);\r\n    }\r\n  }, [errors]);\r\n\r\n  useEffect(() => {\r\n    if (user?.cellphone && !user?.country_phone_code) {\r\n      setPhoneUpdate(true)\r\n    } else {\r\n      setPhoneUpdate(false)\r\n    }\r\n  }, [user?.country_phone_code])\r\n\r\n  return (\r\n    <>\r\n      <Actions>\r\n        <LanguageSelector />\r\n        <LogoutButton />\r\n      </Actions>\r\n      <CenterView>\r\n        <OIcon\r\n          url={user?.photo}\r\n          width={100}\r\n          height={100}\r\n          style={{ borderRadius: 12 }}\r\n        />\r\n        <OIconButton\r\n          icon={IMAGES.camera}\r\n          borderColor={colors.clear}\r\n          iconStyle={{ width: 30, height: 30 }}\r\n          style={{ maxWidth: 40 }}\r\n          onClick={() => handleImagePicker()}\r\n        />\r\n      </CenterView>\r\n      <Spinner visible={formState?.loading} />\r\n      {!isEdit ? (\r\n        <UserData>\r\n          <Names>\r\n            <OText space>{user?.name}</OText>\r\n            <OText>{user?.lastname}</OText>\r\n          </Names>\r\n          {(!!user?.middle_name || !!user?.second_lastname) && (\r\n            <Names>\r\n              <OText space>{user?.middle_name}</OText>\r\n              <OText>{user?.second_lastname}</OText>\r\n            </Names>\r\n          )}\r\n          <OText>{user?.email}</OText>\r\n          {!!user?.cellphone && <OText>{user?.cellphone}</OText>}\r\n          {!!phoneUpdate && (\r\n            <OText\r\n              color={colors.error}\r\n            >\r\n              {t('NECESSARY_UPDATE_COUNTRY_PHONE_CODE', 'It is necessary to update your phone number')}\r\n            </OText>\r\n          )}\r\n        </UserData>\r\n      ) : (\r\n        <View style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n          {sortInputFields({ values: validationFields.fields?.checkout }).map((field: any) =>\r\n            showField && showField(field.code) && (\r\n              <Controller\r\n                key={field.id}\r\n                control={control}\r\n                render={() => (\r\n                  <OInput\r\n                    key={field.id}\r\n                    name={field.code}\r\n                    placeholder={t(field.code.toUpperCase(), field?.name)}\r\n                    icon={field.code === 'email' ? IMAGES.email : IMAGES.user}\r\n                    borderColor={colors.whiteGray}\r\n                    style={styles.inputbox}\r\n                    onChange={(val: any) => {\r\n                      field.code !== 'email' ? setValue(field.code, val.target.value) : setValue(field.code, val.target.value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, ''))\r\n                      field.code !== 'email' ? handleChangeInput(val) : handleChangeInput({ target: { name: 'email', value: val.target.value.toLowerCase().replace(/[&,()%\";:ç?<>{}\\\\[\\]\\s]/g, '') } })\r\n                    }}\r\n                    value={user && user[field.code]}\r\n                    autoCapitalize={field.code === 'email' ? 'none' : 'sentences'}\r\n                    autoCorrect={field.code === 'email' && false}\r\n                    type={field.code === 'email' ? 'email-address' : ''}\r\n                    isSecured={field.code === 'email'}\r\n                  />\r\n                )}\r\n                name={field.code}\r\n                defaultValue={user && user[field.code]}\r\n                rules={getInputRules(field)}\r\n              />\r\n            )\r\n          )}\r\n          <WrapperPhone>\r\n            <PhoneInputNumber\r\n              data={phoneInputData}\r\n              handleData={(val: any) => handleChangePhoneNumber(val)}\r\n              defaultValue={phoneUpdate ? '' : user?.cellphone}\r\n            />\r\n            {phoneUpdate && (\r\n              <OText\r\n                color={colors.error}\r\n                style={{ marginHorizontal: 10, textAlign: 'center' }}\r\n              >\r\n                {t('YOUR_PREVIOUS_CELLPHONE', 'Your previous cellphone')}: {user?.cellphone}\r\n              </OText>\r\n            )}\r\n          </WrapperPhone>\r\n          <OInput\r\n            name='password'\r\n            isSecured={true}\r\n            placeholder={t('PASSWORD', 'Password')}\r\n            icon={IMAGES.lock}\r\n            borderColor={colors.whiteGray}\r\n            style={styles.inputbox}\r\n            onChange={(val: any) => {\r\n              handleChangeInput(val)\r\n            }}\r\n          />\r\n        </View>\r\n      )}\r\n      {!validationFields.loading && (\r\n        <EditButton>\r\n          {!isEdit ? (\r\n            <OButton\r\n              text={t('EDIT', 'Edit')}\r\n              bgColor={colors.white}\r\n              borderColor={colors.primary}\r\n              isDisabled={formState.loading}\r\n              imgRightSrc={null}\r\n              textStyle={{ fontSize: 20 }}\r\n              style={{ ...styles.editButton }}\r\n              onClick={toggleIsEdit}\r\n            />\r\n          ) : (\r\n            <>\r\n              <View style={{ flex: 1 }}>\r\n                <OButton\r\n                  text={t('CANCEL', 'Cancel')}\r\n                  bgColor={colors.white}\r\n                  borderColor={colors.primary}\r\n                  isDisabled={formState.loading}\r\n                  imgRightSrc={null}\r\n                  style={{ ...styles.editButton }}\r\n                  onClick={handleCancelEdit}\r\n                />\r\n              </View>\r\n              {((formState &&\r\n                Object.keys(formState?.changes).length > 0 && isEdit) || formState?.loading) &&\r\n              (\r\n                <View style={{ flex: 1, marginLeft: 5 }}>\r\n                  <OButton\r\n                    text={formState.loading ? t('UPDATING', 'Updating...') : t('UPDATE', 'Update')}\r\n                    bgColor={colors.primary}\r\n                    textStyle={{ color: formState.loading ? 'black' : 'white' }}\r\n                    borderColor={colors.primary}\r\n                    isDisabled={formState.loading}\r\n                    imgRightSrc={null}\r\n                    style={{ ...styles.editButton }}\r\n                    onClick={handleSubmit(onSubmit)}\r\n                  />\r\n                </View>\r\n              )}\r\n            </>\r\n          )}\r\n        </EditButton>\r\n      )}\r\n\r\n      {user?.id && (\r\n        <AddressList\r\n          nopadding\r\n          isFromProfile\r\n          userId={user.id}\r\n          navigation={navigation}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  dropdown: {\r\n    borderColor: colors.whiteGray,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginTop: 16,\r\n  },\r\n  inputbox: {\r\n    marginVertical: 8,\r\n    width: '90%'\r\n  },\r\n  editButton: {\r\n    // flex:0,\r\n    borderRadius: 25,\r\n    borderColor: colors.primary,\r\n    backgroundColor: colors.white,\r\n    borderWidth: 1,\r\n    color: colors.primary,\r\n    // width: 100,\r\n    // height: 50,\r\n    marginVertical: 8,\r\n    // flex: 1,\r\n  },\r\n});\r\n\r\nexport const UserProfileForm = (props: any) => {\r\n  const profileProps = {\r\n    ...props,\r\n    UIComponent: ProfileUI,\r\n  };\r\n  return <UserProfileController {...profileProps} />;\r\n};\r\n"]}