{"version":3,"sources":["index.tsx"],"names":["React","useEffect","useState","Pressable","StyleSheet","TextInput","useLanguage","Spinner","getTraduction","OText","colors","Container","CountDownContainer","ResendSection","WrappCountdown","InputsSection","ErrorSection","TIME_COUNTDOWN","VerifyPhone","props","phone","formValues","verifyPhoneState","checkPhoneCodeState","setCheckPhoneCodeState","handleCheckPhoneCode","handleVerifyCodeClick","t","timer","setTimer","verifyCode","setVerifyCode","isSendCodeAgain","setIsSendCodeAgain","lastNumbers","cellphone","charAt","length","handleChangeCode","val","i","checkResult","result","handleSendCodeAgain","_timer","minutes","seconds","interval","setInterval","formatMinutes","parseInt","toString","formatseconds","clearInterval","codes","Object","keys","isFullInputs","values","every","country_phone_code","code","join","replace","textAlign","disabled","error","success","Array","map","_","styles","inputStyle","loading","e","marginRight","primary","create","width","height","marginBottom","borderWidth","borderColor","borderRadius","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Pressable, StyleSheet, TextInput } from 'react-native';\r\nimport { useLanguage } from 'ordering-components/native';\r\nimport Spinner from 'react-native-loading-spinner-overlay';\r\nimport { getTraduction } from '../../utils'\r\n\r\nimport { OText } from '../shared';\r\nimport { colors } from '../../theme'\r\n\r\nimport {\r\n  Container,\r\n  CountDownContainer,\r\n  ResendSection,\r\n  WrappCountdown,\r\n  InputsSection,\r\n  ErrorSection\r\n} from './styles'\r\n\r\nconst TIME_COUNTDOWN = 60 * 10 // 10 minutes\r\n\r\nexport const VerifyPhone = (props: any) => {\r\n  const {\r\n    phone,\r\n    formValues,\r\n    verifyPhoneState,\r\n    checkPhoneCodeState,\r\n    setCheckPhoneCodeState,\r\n    handleCheckPhoneCode,\r\n    handleVerifyCodeClick\r\n  } = props\r\n  const [, t] = useLanguage()\r\n\r\n  const [timer, setTimer] = useState(`${TIME_COUNTDOWN / 60}:00`)\r\n  const [verifyCode, setVerifyCode] = useState({ 0: '', 1: '', 2: '', 3: '' })\r\n  const [isSendCodeAgain, setIsSendCodeAgain] = useState(false)\r\n\r\n  const lastNumbers = phone?.cellphone &&\r\n    `${phone?.cellphone.charAt(phone?.cellphone.length-2)}${phone?.cellphone.charAt(phone?.cellphone.length-1)}`\r\n\r\n  const handleChangeCode = (val: number, i: number) => {\r\n    setVerifyCode({ ...verifyCode, [i]: val })\r\n  }\r\n\r\n  const checkResult = (result: any) => {\r\n    if (!result) return\r\n    return typeof result === 'string'\r\n      ? [result]\r\n      : result\r\n  }\r\n\r\n  const handleSendCodeAgain = () => {\r\n    setCheckPhoneCodeState && setCheckPhoneCodeState()\r\n    setTimer(`${TIME_COUNTDOWN / 60}:00`)\r\n    setIsSendCodeAgain(true)\r\n    handleVerifyCodeClick && handleVerifyCodeClick()\r\n  }\r\n\r\n  useEffect(() => {\r\n    let _timer = TIME_COUNTDOWN - 1;\r\n    let minutes = 0;\r\n    let seconds = 0;\r\n    const interval = setInterval(() => {\r\n      minutes = _timer / 60;\r\n      seconds = _timer % 60;\r\n\r\n      minutes = minutes < 10 ? 0 + minutes : minutes;\r\n      seconds = seconds < 10 ? 0 + seconds : seconds;\r\n\r\n      const formatMinutes = parseInt(minutes.toString()) < 10\r\n        ? `0${parseInt(minutes.toString())}`\r\n        : parseInt(minutes.toString());\r\n\r\n      const formatseconds = parseInt(seconds.toString()) < 10\r\n        ? `0${parseInt(seconds.toString())}`\r\n        : parseInt(seconds.toString());\r\n\r\n      setTimer(`${formatMinutes}:${formatseconds}`);\r\n\r\n      if (--_timer < 0) {\r\n        clearInterval(interval);\r\n      }\r\n\r\n      if (timer === `${TIME_COUNTDOWN / 60}:00` && isSendCodeAgain) {\r\n        setIsSendCodeAgain(false)\r\n        clearInterval(interval);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval)\r\n  }, [isSendCodeAgain])\r\n\r\n  useEffect(() => {\r\n    const codes = Object.keys(verifyCode).length\r\n    const isFullInputs = codes && Object.values(verifyCode).every(val => val)\r\n    if (codes === 4 && isFullInputs) {\r\n      const values = {\r\n        ...formValues,\r\n        cellphone: phone.cellphone,\r\n        country_phone_code: `+${phone.country_phone_code}`,\r\n        code: Object.values(verifyCode).join().replace(/,/g, '')\r\n      }\r\n      handleCheckPhoneCode && handleCheckPhoneCode(values)\r\n    }\r\n  }, [verifyCode])\r\n\r\n  return (\r\n    <Container>\r\n      <OText size={30} style={{ textAlign: 'left' }}>\r\n        {t('VERIFY_PHONE', 'Verify Phone')}\r\n      </OText>\r\n      {lastNumbers && (\r\n        <OText size={20} color={colors.disabled}>\r\n          {`${t('MESSAGE_ENTER_VERIFY_CODE', 'Please, enter the verification code we sent to your mobile ending with')} **${lastNumbers}`}\r\n        </OText>\r\n      )}\r\n      <WrappCountdown>\r\n        <CountDownContainer color={timer === '00:00' ? colors.error: colors.success}>\r\n          <OText\r\n            size={30}\r\n            color={timer === '00:00' ? colors.error: colors.success}\r\n          >\r\n            {timer}\r\n          </OText>\r\n        </CountDownContainer>\r\n      </WrappCountdown>\r\n      <InputsSection>\r\n        {[...Array(4),].map((_: any, i: number) => (\r\n          <TextInput\r\n            key={i}\r\n            keyboardType='number-pad'\r\n            placeholder={'0'}\r\n            style={styles.inputStyle}\r\n            onChangeText={(val: any) => handleChangeCode(val, i)}\r\n            maxLength={1}\r\n            editable={timer !== '00:00'}\r\n          />\r\n        ))}\r\n      </InputsSection>\r\n      {(verifyPhoneState?.result?.error ? verifyPhoneState : checkPhoneCodeState) &&\r\n        !(verifyPhoneState?.result?.error ? verifyPhoneState : checkPhoneCodeState)?.loading &&\r\n        (verifyPhoneState?.result?.error ? verifyPhoneState : checkPhoneCodeState)?.result?.error &&\r\n        (verifyPhoneState?.result?.error ? verifyPhoneState : checkPhoneCodeState).result?.result &&\r\n      (\r\n        <ErrorSection>\r\n          {checkResult((\r\n            verifyPhoneState?.result?.error ? verifyPhoneState : checkPhoneCodeState\r\n          ).result?.result)?.map((e: any, i: number) => (\r\n            <OText\r\n              key={i}\r\n              size={20}\r\n              color={colors.error}\r\n            >\r\n              {`* ${t(getTraduction(e))}`}\r\n            </OText>\r\n          ))}\r\n        </ErrorSection>\r\n      )}\r\n      <ResendSection>\r\n        <OText size={17} style={{ marginRight: 5 }}>\r\n          {t('ARE_YOU_NOT_SEEING_THE_CODE', 'Are you not seeing the code?')}\r\n        </OText>\r\n        <Pressable onPress={() => handleSendCodeAgain()}>\r\n          <OText size={17} color={colors.primary}>\r\n            {t('SEND_AGAIN', 'Send Again')}\r\n          </OText>\r\n        </Pressable>\r\n      </ResendSection>\r\n      <Spinner visible={checkPhoneCodeState.loading} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  inputStyle: {\r\n    width: 80,\r\n    height: 80,\r\n    marginBottom: 25,\r\n    borderWidth: 1,\r\n    borderColor: colors.disabled,\r\n    borderRadius: 20,\r\n    textAlign: 'center',\r\n    fontSize: 40\r\n  }\r\n});\r\n"]}