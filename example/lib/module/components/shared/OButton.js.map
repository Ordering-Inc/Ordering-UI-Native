{"version":3,"sources":["OButton.tsx"],"names":["ActivityIndicator","TouchableOpacity","View","React","styled","colors","StyledButton","primary","StyledButtonDisabled","disabled","StyledText","Text","btnFont","StyledTextDisabled","StyledImage","Image","EndImage","OButton","props","isDisabled","parentStyle","style","textStyle","text","isLoading","indicatorColor","testID","activeOpacity","onClick","width","isCircle","bgColor","backgroundColor","borderColor","imgLeftSrc","imgLeftStyle","imgRightSrc","imgRightStyle","defaultProps","require"],"mappings":"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","sourcesContent":["import {\r\n  ActivityIndicator,\r\n  ImageSourcePropType,\r\n  ImageStyle,\r\n  TextStyle,\r\n  TouchableOpacity,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport * as React from 'react';\r\nimport styled from 'styled-components/native';\r\nimport { colors } from '../../theme';\r\n\r\nconst StyledButton = styled.View<Props>`\r\n  background-color: ${colors.primary};\r\n  border-radius: 26px;\r\n  border-width: 2px;\r\n  height: 52px;\r\n  border-color: ${colors.primary};\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 1px 1px 2px #00000020;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  position: relative;\r\n`\r\nconst StyledButtonDisabled = styled(StyledButton)`\r\n  background-color: ${colors.disabled};\r\n  border-color: ${colors.disabled};\r\n`\r\n\r\nconst StyledText = styled.Text`\r\n  font-size: 16px;\r\n  color: ${colors.btnFont};\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  font-family: 'Poppins-Regular';\r\n`\r\n\r\nconst StyledTextDisabled = styled(StyledText)`\r\n  color: ${colors.primary};\r\n`\r\n\r\nconst StyledImage = styled.Image`\r\n  width: 20px;\r\n  height: 20px;\r\n  resize-mode: contain;\r\n`\r\nconst EndImage = styled.Image`\r\n  width: 15px;\r\n  height: 15px;\r\n  resize-mode: contain;\r\n  right: 20px;\r\n  position: absolute;\r\n  right: 20px;\r\n`;\r\n\r\ninterface Props {\r\n  testID?: string;\r\n  isLoading?: boolean;\r\n  isDisabled?: boolean;\r\n  onClick?: () => void;\r\n  style?: ViewStyle;\r\n  parentStyle?: ViewStyle;\r\n  disabledStyle?: ViewStyle;\r\n  textStyle?: TextStyle;\r\n  imgLeftSrc?: ImageSourcePropType;\r\n  imgLeftStyle?: ImageStyle;\r\n  imgRightSrc?: any;\r\n  imgRightStyle?: ImageStyle;\r\n  indicatorColor?: string;\r\n  activeOpacity?: number;\r\n  text?: string;\r\n  isCircle?: boolean;\r\n  bgColor?: string;\r\n  borderColor?: string;\r\n}\r\n\r\nconst OButton = (props: Props): React.ReactElement => {\r\n  if (props.isDisabled) {\r\n    return (\r\n      <View style={props.parentStyle}>\r\n      <StyledButtonDisabled style={props.style}>\r\n        <StyledTextDisabled style={props.textStyle}>\r\n          {props.text}\r\n        </StyledTextDisabled>\r\n      </StyledButtonDisabled>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (props.isLoading) {\r\n    return (\r\n      <StyledButton style={props.style}>\r\n        <ActivityIndicator size=\"small\" color={props.indicatorColor} />\r\n      </StyledButton>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      testID={props.testID}\r\n      activeOpacity={props.activeOpacity}\r\n      onPress={props.onClick}\r\n      style={{ width: props.isCircle ? 52 : props.style?.width, ...props.parentStyle }}\r\n    >\r\n      <StyledButton style={props.bgColor ? { ...props.style, backgroundColor: props.bgColor, borderColor: props.borderColor } : props.style}>\r\n        {props.imgLeftSrc ? (\r\n          <StyledImage style={props.imgLeftStyle} source={props.imgLeftSrc} />\r\n        ) : null}\r\n        {props.text ? (\r\n          <StyledText style={props.textStyle}>{props.text}</StyledText>\r\n        ) : null}\r\n        {props.imgRightSrc ? (\r\n          <EndImage style={props.imgRightStyle} source={props.imgRightSrc} />\r\n        ) : null}\r\n      </StyledButton>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n\r\nOButton.defaultProps = {\r\n  isLoading: false,\r\n  isDisabled: false,\r\n  indicatorColor: 'white',\r\n  activeOpacity: 0.5,\r\n  imgRightSrc: require('../../assets/icons/arrow_right.png')\r\n};\r\n\r\nexport default OButton;\r\n"]}