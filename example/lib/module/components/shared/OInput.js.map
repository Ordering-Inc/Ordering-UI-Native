{"version":3,"sources":["OInput.tsx"],"names":["React","styled","OIcon","colors","MaterialIcon","Wrapper","View","backgroundLight","Input","TextInput","OInput","props","backgroundColor","bgColor","borderColor","style","icon","iconColor","marginRight","vertorIcon","vectorIconColor","marginHorizontal","name","isSecured","txt","onChange","target","value","placeholder","type","multiline","isDisabled","autoCapitalize","autoCompleteType","autoCorrect","iconRight","iconRightColor","iconRightStyle","iconCustomRight","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {ImageSourcePropType, ImageStyle, ViewStyle} from 'react-native';\r\nimport styled from 'styled-components/native';\r\nimport OIcon from './OIcon';\r\nimport {colors} from '../../theme';\r\nimport MaterialIcon from 'react-native-vector-icons/MaterialIcons'\r\n\r\nconst Wrapper = styled.View`\r\n  background-color: ${colors.backgroundLight};\r\n  border-radius: 25px;\r\n  border-width: 1px;\r\n  padding-horizontal: 16px;\r\n  height: 50px;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  flex: 1;\r\n  justify-content: center;\r\n`;\r\nconst Input = styled.TextInput`\r\n  flex-grow: 1;\r\n  flex: 1;\r\n  min-height: 30px;\r\n  font-size: 15px;\r\n  font-family: 'Poppins-Regular';\r\n`;\r\n\r\ninterface Props {\r\n  bgColor?: string;\r\n  borderColor?: string;\r\n  isRequired?: boolean;\r\n  requiredMsg?: string;\r\n  isDisabled?: boolean;\r\n  isSecured?: boolean;\r\n  style?: ViewStyle;\r\n  placeholder?: string;\r\n  icon?: ImageSourcePropType;\r\n  iconRight?: ImageSourcePropType;\r\n  iconColor?: string;\r\n  iconRightColor?: string;\r\n  iconStyle?: ImageStyle;\r\n  iconRightStyle?: ImageStyle;\r\n  iconCustomRight?: any;\r\n  value?: string;\r\n  onChange?: any;\r\n  name?: string;\r\n  type?: string;\r\n  multiline?: boolean;\r\n  vertorIcon?: string;\r\n  vectorIconColor?: string;\r\n  autoCapitalize?: string;\r\n  autoCompleteType?: string;\r\n  autoCorrect?: boolean;\r\n  keyboardType?: string;\r\n}\r\n\r\nconst OInput = (props: Props): React.ReactElement => {\r\n  return (\r\n    <Wrapper\r\n      style={{\r\n        backgroundColor: props.bgColor,\r\n        borderColor: props.borderColor,\r\n        ...props.style,\r\n      }}>\r\n      {props.icon ? (\r\n        <OIcon\r\n          src={props.icon}\r\n          color={props.iconColor}\r\n          width={20}\r\n          height={20}\r\n          style={{marginRight: 10}}\r\n        />\r\n      ) : null}\r\n      {props.vertorIcon && (\r\n        <MaterialIcon name={props?.vertorIcon} size={20} color={props?.vectorIconColor} style={{marginHorizontal: 10}} />\r\n      )}\r\n      <Input\r\n        name={props.name}\r\n        secureTextEntry={props.isSecured}\r\n        onChangeText={(txt: any) => props.name ? props.onChange({target: {name: props.name, value: txt}}) : props.onChange(txt)}\r\n        defaultValue={props.value}\r\n        placeholder={props.placeholder ? props.placeholder : ''}\r\n        keyboardType={props.type || 'default'}\r\n        multiline={props.multiline}\r\n        scrollEnabled={props.multiline}\r\n        editable={!props.isDisabled}\r\n        autoCapitalize={props.autoCapitalize}\r\n        autoCompleteType={props.autoCompleteType}\r\n        autoCorrect={props.autoCorrect}\r\n      />\r\n      {props.iconRight && (\r\n        <OIcon\r\n          src={props.iconRight}\r\n          color={props.iconRightColor}\r\n          width={20}\r\n          height={20}\r\n          style={{ ...props.iconRightStyle }}\r\n        />\r\n      )}\r\n      {props.iconCustomRight}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nOInput.defaultProps = {\r\n  iconColor: '#959595',\r\n  bgColor: 'white',\r\n  borderColor: 'white',\r\n};\r\n\r\nexport default OInput;\r\n"]}