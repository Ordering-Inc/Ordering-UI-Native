{"version":3,"sources":["OText.tsx"],"names":["React","styled","css","SText","Text","props","color","size","hasBottom","mBottom","mRight","mLeft","weight","isWrap","OText","style","children","space"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,IAAgBC,GAAhB,QAA0B,0BAA1B;AAEA,MAAMC,KAAK,GAAGF,MAAM,CAACG,IAAK;AAC1B,WAAYC,KAAD,IAAgBA,KAAK,CAACC,KAAN,IAAe,OAAQ;AAClD;AACA,eAAgBD,KAAD,IAAiBA,KAAK,CAACE,IAAN,GAAc,GAAEF,KAAK,CAACE,IAAK,IAA3B,GAAiC,MAAQ;AACzE;AACA,mBAAoBF,KAAD,IACfA,KAAK,CAACG,SAAN,GAAkB,MAAlB,GAA2BH,KAAK,CAACI,OAAN,GAAiB,GAAEJ,KAAK,CAACI,OAAQ,IAAjC,GAAuC,CAAE;AACxE,kBAAmBJ,KAAD,IACdA,KAAK,CAACG,SAAN,GAAkB,MAAlB,GAA2BH,KAAK,CAACK,MAAN,GAAgB,GAAEL,KAAK,CAACK,MAAO,IAA/B,GAAqC,CAAE;AACtE,iBAAkBL,KAAD,IACbA,KAAK,CAACG,SAAN,GAAkB,MAAlB,GAA2BH,KAAK,CAACM,KAAN,GAAe,GAAEN,KAAK,CAACM,KAAM,IAA7B,GAAmC,CAAE;AACpE,IAAKN,KAAD,IACAA,KAAK,CAACO,MAAN,IACAV,GAAI;AACR,qBAAqBG,KAAK,CAACO,MAAO;AAClC,KAAM;AACN,IAAKP,KAAD,IACAA,KAAK,CAACQ,MAAN,IACAX,GAAI;AACR,cAAcG,KAAK,CAACO,MAAN,GAAe,CAAf,GAAmB,CAAE;AACnC,KAAM;AACN,CArBA;;AAsCA,MAAME,KAAK,GAAIT,KAAD,IAAsC;AAClD,sBACE,oBAAC,KAAD,eAAWA,KAAX;AAAkB,IAAA,KAAK,EAAEA,KAAK,CAACU;AAA/B,MACGV,KAAK,CAACW,QADT,EACmBX,KAAK,CAACY,KAAN,IAAe,GADlC,CADF;AAKD,CAND;;AAQA,eAAeH,KAAf","sourcesContent":["import * as React from 'react';\r\nimport {TextStyle} from 'react-native';\r\nimport styled, {css} from 'styled-components/native';\r\n\r\nconst SText = styled.Text`\r\n  color: ${(props: any) => props.color || 'black'};\r\n  font-family: 'Poppins-Regular';\r\n  font-size: ${(props: any) => (props.size ? `${props.size}px` : '14px')};\r\n  flex-wrap: wrap;\r\n  margin-bottom: ${(props: any) =>\r\n    props.hasBottom ? '10px' : props.mBottom ? `${props.mBottom}px` : 0};\r\n  margin-right: ${(props: any) =>\r\n    props.hasBottom ? '10px' : props.mRight ? `${props.mRight}px` : 0};\r\n  margin-left: ${(props: any) =>\r\n    props.hasBottom ? '10px' : props.mLeft ? `${props.mLeft}px` : 0};\r\n  ${(props: any) =>\r\n    props.weight &&\r\n    css`\r\n      font-weight: ${props.weight};\r\n    `};\r\n  ${(props: any) =>\r\n    props.isWrap &&\r\n    css`\r\n      flex: ${props.weight ? 1 : 0};\r\n    `};\r\n`;\r\ninterface Props {\r\n  color?: string;\r\n  size?: number;\r\n  weight?: any;\r\n  style?: TextStyle;\r\n  children?: JSX.Element | JSX.Element[] | string;\r\n  isWrap?: boolean;\r\n  hasBottom?: boolean;\r\n  mBottom?: any;\r\n  space?: any;\r\n  mRight?: number;\r\n  mLeft?: number;\r\n  numberOfLines?: number;\r\n  ellipsizeMode?: string;\r\n}\r\n\r\nconst OText = (props: Props): React.ReactElement => {\r\n  return (\r\n    <SText {...props} style={props.style}>\r\n      {props.children}{props.space && ' '}\r\n    </SText>\r\n  );\r\n};\r\n\r\nexport default OText;\r\n"]}