{"version":3,"sources":["OToast.tsx"],"names":["React","Animated","StyleSheet","Text","View","ToastType","useToast","colors","fadeDuration","bottomPosition","Toast","toastConfig","hideToast","opacity","useRef","Value","current","fadeIn","useCallback","timing","toValue","duration","useNativeDriver","start","fadeOut","useEffect","timer","setTimeout","clearTimeout","type","message","backgroundColor","Info","Error","primary","Success","styles","container","bottom","toast","create","alignSelf","position","maxWidth","zIndex","borderRadius","padding","fontSize","textAlign","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Animated, StyleSheet, Text, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport { ToastType, useToast } from \"../../providers/ToastProvider\";\r\nimport { colors } from \"../../theme\";\r\n\r\nconst fadeDuration = 300;\r\nconst bottomPosition = 20;\r\n\r\nexport const Toast: React.FC = () => {\r\n    // const insets = useSafeAreaInsets();\r\n    const { toastConfig, hideToast } = useToast();\r\n    const opacity = React.useRef(new Animated.Value(0)).current;\r\n\r\n    const fadeIn = React.useCallback(() => {\r\n        Animated.timing(opacity, {\r\n            toValue: 1,\r\n            duration: fadeDuration,\r\n            useNativeDriver: true,\r\n        }).start();\r\n    }, [opacity]);\r\n\r\n    const fadeOut = React.useCallback(() => {\r\n        Animated.timing(opacity, {\r\n            toValue: 0,\r\n            duration: fadeDuration,\r\n            useNativeDriver: true,\r\n        }).start(() => {\r\n            hideToast();\r\n        });\r\n    }, [opacity, hideToast]);\r\n\r\n    React.useEffect(() => {\r\n        if (!toastConfig) {\r\n            return;\r\n        }\r\n\r\n        fadeIn();\r\n        const timer = setTimeout(fadeOut, toastConfig.duration);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [toastConfig, fadeIn, fadeOut]);\r\n\r\n    if (!toastConfig) {\r\n        return null;\r\n    }\r\n\r\n    const { type, message } = toastConfig;\r\n\r\n    let backgroundColor;\r\n    switch (type) {\r\n        case ToastType.Info:\r\n            backgroundColor = '#6ba4ff';\r\n            break;\r\n        case ToastType.Error:\r\n            backgroundColor = colors.primary;\r\n            break;\r\n        case ToastType.Success:\r\n            backgroundColor = '#73bd24';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Animated.View\r\n            style={[\r\n                styles.container,\r\n                { bottom: bottomPosition, opacity },\r\n            ]}\r\n        >\r\n            <View style={[styles.toast, { backgroundColor }]}>\r\n                <Text style={styles.message}>{message}</Text>\r\n            </View>\r\n        </Animated.View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignSelf: \"center\",\r\n        position: \"absolute\",\r\n        maxWidth: 480,\r\n        zIndex: 9999999999\r\n    },\r\n    toast: {\r\n        borderRadius: 16,\r\n        padding: 16,\r\n    },\r\n    message: {\r\n        fontSize: 14,\r\n        textAlign: \"center\",\r\n        color: '#fff',\r\n    },\r\n});\r\n"]}