{"version":3,"sources":["Checkout.tsx"],"names":["React","Checkout","Container","stripe","ToastType","useToast","useOrder","useLanguage","stripePaymentOptions","CheckoutPage","props","showToast","t","confirmCart","checkoutProps","cartUuid","route","params","driverTipsOptions","onPlaceOrderClick","data","paymethod","cart","order","uuid","navigation","navigate","orderId","isFromCheckout","status","includes","gateway","clientSecret","paymethod_data","result","client_secret","paymentMethodId","source_id","publicKey","credentials","publishable","setOptions","publishableKey","confirmPaymentIntent","handleIsRedirect","confirmCartRes","error","Error","message","screen","toString","e","onNavigationRedirect","page"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Checkout } from '../components/Checkout';\r\nimport { Container } from '../layouts/Container';\r\nimport stripe from 'tipsi-stripe';\r\nimport { ToastType, useToast } from '../providers/ToastProvider';\r\n\r\nimport { useOrder, useLanguage } from 'ordering-components/native';\r\n\r\nconst stripePaymentOptions = ['stripe', 'stripe_direct', 'stripe_connect']\r\n\r\nexport const CheckoutPage = (props: any) => {\r\n  const { showToast } = useToast();\r\n  const [, t] = useLanguage();\r\n  const [, { confirmCart }] = useOrder();\r\n\r\n  const checkoutProps = {\r\n    ...props,\r\n    cartUuid: props?.cartUuid || props.route?.params?.cartUuid,\r\n    driverTipsOptions: [0, 10, 15, 20, 25],\r\n    stripePaymentOptions,\r\n    onPlaceOrderClick: async (data: any, paymethod: any, cart: any) => {\r\n      if (cart?.order?.uuid) {\r\n        props.navigation.navigate('OrderDetails', { orderId: cart.order?.uuid, isFromCheckout: true });\r\n        return\r\n      }\r\n\r\n      if (cart?.status === 2 && stripePaymentOptions.includes(paymethod?.gateway)) {\r\n        const clientSecret = cart?.paymethod_data?.result?.client_secret;\r\n        const paymentMethodId = cart.paymethod_data?.data?.source_id;\r\n        const publicKey = paymethod?.gateway === 'stripe_connect'\r\n          ? paymethod?.paymethod?.credentials?.stripe.publishable\r\n          : paymethod?.paymethod?.credentials?.publishable;\r\n\r\n        stripe.setOptions({\r\n          publishableKey: publicKey\r\n        })\r\n\r\n        try {\r\n          const confirmPaymentIntent = await stripe.confirmPaymentIntent({\r\n            clientSecret,\r\n            paymentMethodId\r\n          });\r\n\r\n          if (confirmPaymentIntent?.status === 'succeeded') {\r\n            props.handleIsRedirect && props.handleIsRedirect(true);\r\n            try {\r\n              const confirmCartRes = await confirmCart(cart?.uuid)\r\n              if (confirmCartRes.error) {\r\n                showToast(ToastType.Error, confirmCartRes.error.message)\r\n              }\r\n              if (confirmCartRes.result.order?.uuid) {\r\n                props.navigation.navigate('HomeNavigator', { screen: 'OrderDetails', params: { orderId: confirmCartRes.result.order.uuid, isFromCheckout: true }})\r\n              }\r\n            } catch (error) {\r\n              showToast(ToastType.Error, error?.toString() || error.message)\r\n            }\r\n            return\r\n          }\r\n        } catch (error) {\r\n          const e = error.message === 'failed'\r\n            ? t('FAILED_PAYMENT', 'The payment has failed')\r\n            : error?.toString() || error.message\r\n          showToast(ToastType.Error, e)\r\n        }\r\n      }\r\n    },\r\n    onNavigationRedirect: (page: string, params: any) => {\r\n      if (!page) return\r\n      props.navigation.navigate(page, params);\r\n    }\r\n  }\r\n  return (\r\n    <Container nopadding>\r\n      <Checkout {...checkoutProps} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CheckoutPage;\r\n"]}