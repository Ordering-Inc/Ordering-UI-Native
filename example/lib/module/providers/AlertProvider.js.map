{"version":3,"sources":["AlertProvider.tsx"],"names":["React","AwesomeAlert","getTraduction","useLanguage","colors","Alert","props","open","title","content","onClose","onAccept","t","parseContent","list","allMessages","map","message","primary"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,MAAT,QAAuB,UAAvB;;AASA,MAAMC,KAAK,GAAIC,KAAD,IAAkB;AAC9B,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,OAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAOA,QAAM,GAAGM,CAAH,IAAQT,WAAW,EAAzB;;AACA,QAAMU,YAAY,GAAIC,IAAD,IAAyB;AAC5C,QAAIC,WAAmB,GAAG,EAA1B;AACAD,IAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEE,GAAN,CAAWC,OAAD,IAAqB;AAC7BF,MAAAA,WAAW,GAAI,KAAIb,aAAa,CAACe,OAAD,CAAU,IAA5B,GAAkCF,WAAhD;AACD,KAFD;AAGA,WAAOA,WAAP;AACD,GAND;;AAOA,sBACE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,YAAY,EAAE,KAFhB;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,OAAO,EAAEN,aAAa,CAACO,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAG,CAAH,CAAR,CAJxB;AAKE,IAAA,mBAAmB,EAAE,IALvB;AAME,IAAA,wBAAwB,EAAE,KAN5B;AAOE,IAAA,iBAAiB,EAAE,IAPrB;AAQE,IAAA,WAAW,EAAEG,CAAC,CAAC,QAAD,EAAW,QAAX,CARhB;AASE,IAAA,kBAAkB,EAAER,MAAM,CAACc,OAT7B;AAUE,IAAA,eAAe,EAAE,MAAMR,OAAO,EAVhC;AAWE,IAAA,gBAAgB,EAAE,MAAMC,QAAQ;AAXlC,IADF;AAeD,CA/BD;;AAiCA,eAAeN,KAAf","sourcesContent":["import * as React from 'react'\r\nimport AwesomeAlert from 'react-native-awesome-alerts'\r\nimport { getTraduction } from '../utils'\r\nimport { useLanguage } from 'ordering-components/native'\r\nimport { colors } from '../theme'\r\ninterface Props {\r\n  open: boolean,\r\n  title: string,\r\n  content: Array<string>,\r\n  onClose: () => void,\r\n  onAccept: () => void\r\n}\r\n\r\nconst Alert = (props: Props) => {\r\n  const {\r\n    open,\r\n    title,\r\n    content,\r\n    onClose,\r\n    onAccept,\r\n  } = props\r\n  const [, t] = useLanguage()\r\n  const parseContent = (list: Array<string>) => {\r\n    let allMessages: string = ''\r\n    list?.map((message: string) => {\r\n      allMessages = `* ${getTraduction(message)}\\n` + allMessages\r\n    })\r\n    return allMessages\r\n  }\r\n  return (\r\n    <AwesomeAlert\r\n      show={open}\r\n      showProgress={false}\r\n      title={title}\r\n      message={getTraduction(content?.[0])}\r\n      closeOnTouchOutside={true}\r\n      closeOnHardwareBackPress={false}\r\n      showConfirmButton={true}\r\n      confirmText={t('ACCEPT', 'Accept')}\r\n      confirmButtonColor={colors.primary}\r\n      onCancelPressed={() => onClose()}\r\n      onConfirmPressed={() => onAccept()}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Alert;\r\n"]}