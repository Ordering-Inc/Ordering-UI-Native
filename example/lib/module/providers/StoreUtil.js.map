{"version":3,"sources":["StoreUtil.tsx"],"names":["AsyncStorage","useEffect","useState","useLocalStorage","key","defaultValue","stored","window","localStorage","getItem","initial","JSON","parse","value","setValue","setItem","stringify","_retrieveStoreData","_setStoreData","val","error","console","log","clearAllData","getAllKeys","then","keys","multiRemove","alert"],"mappings":"AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAEA;;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAcC,YAAd,KAAuC;AACpE,QAAMC,MAAM,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BL,GAA5B,CAAf;AACA,QAAMM,OAAO,GAAGJ,MAAM,GAAGK,IAAI,CAACC,KAAL,CAAWN,MAAX,CAAH,GAAwBD,YAA9C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAACQ,OAAD,CAAlC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4BX,GAA5B,EAAiCO,IAAI,CAACK,SAAL,CAAeH,KAAf,CAAjC;AACD,GAFQ,EAEN,CAACT,GAAD,EAAMS,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD,CAVM;AAYP,OAAO,MAAMG,kBAAkB,GAAG,MAAOb,GAAP,IAAuB;AACvD,MAAI;AACF,UAAMS,KAAK,GAAG,MAAMb,YAAY,CAACS,OAAb,CAAqBL,GAArB,CAApB;;AACA,QAAIS,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAOF,IAAI,CAACC,KAAL,CAAWC,KAAX,CAAP;AACD;AACF,GALD,CAKE,MAAM;AACN,WAAO,IAAP;AACD;AACF,CATM;AAWP,OAAO,MAAMK,aAAa,GAAG,CAACd,GAAD,EAAce,GAAd,KAA2B;AACtD,MAAI;AACFnB,IAAAA,YAAY,CAACe,OAAb,CACEX,GADF,EAEE,OAAQe,GAAR,KAAiB,QAAjB,GAA4BA,GAA5B,GAAkCR,IAAI,CAACK,SAAL,CAAeG,GAAf,CAFpC;AAID,GALD,CAKE,OAAOC,KAAP,EAAc;AACd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mEAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAXM;AAaP,OAAO,MAAMG,YAAY,GAAG,MAAM;AAChCvB,EAAAA,YAAY,CAACwB,UAAb,GACGC,IADH,CACQC,IAAI,IAAI1B,YAAY,CAAC2B,WAAb,CAAyBD,IAAzB,CADhB,EAEGD,IAFH,CAEQ,MAAMG,KAAK,CAAC,SAAD,CAFnB;AAGD,CAJM","sourcesContent":["\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { useEffect, useState } from 'react'\r\n\r\n// localStorage Hook --------------------\r\n\r\nexport const useLocalStorage = (key: string, defaultValue: string) => {\r\n  const stored = window.localStorage.getItem(key);\r\n  const initial = stored ? JSON.parse(stored) : defaultValue;\r\n  const [value, setValue] = useState(initial);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nexport const _retrieveStoreData = async (key: string) => {\r\n  try {\r\n    const value = await AsyncStorage.getItem(key);\r\n    if (value !== null) {\r\n      return JSON.parse(value)\r\n    }\r\n  } catch {\r\n    return null\r\n  }\r\n};\r\n\r\nexport const _setStoreData = (key: string, val: any) => {\r\n  try {\r\n    AsyncStorage.setItem(\r\n      key,\r\n      typeof (val) === 'string' ? val : JSON.stringify(val)\r\n    )\r\n  } catch (error) {\r\n    // Error retrieving data\r\n    console.log('--------------- Occured Storage Setting Data error --------------')\r\n    console.log(error)\r\n  }\r\n};\r\n\r\nexport const clearAllData = () => {\r\n  AsyncStorage.getAllKeys()\r\n    .then(keys => AsyncStorage.multiRemove(keys))\r\n    .then(() => alert('success'));\r\n}\r\n"]}