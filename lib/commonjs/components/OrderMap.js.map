{"version":3,"sources":["OrderMap.tsx"],"names":["Wrapper","styled","View","OrderMap","props","mapRef","React","useRef","region","setRegion","useState","useEffect","current","markers","length","setTimeout","fitToCoordinates","map","item","latlng","edgePadding","top","left","right","bottom","animated","style","Platform","OS","PROVIDER_GOOGLE","bind","index","image","StyleSheet","create","absoluteFillObject"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAQA,MAAMA,OAAO,GAAGC,gBAAOC,IAAK;AAC5B;AACA,CAFA;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAyB;AACtC,QAAMC,MAAM,GAAGC,KAAK,CAACC,MAAN,CAAsB,IAAtB,CAAf;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBH,KAAK,CAACI,QAAN,CAAeN,KAAK,CAACI,MAArB,CAA5B;AAEAF,EAAAA,KAAK,CAACK,SAAN,CAAgB,MAAM;AAClB,QAAIN,MAAM,CAACO,OAAP,IAAkBR,KAAK,CAACS,OAAN,CAAcC,MAAd,GAAuB,CAA7C,EAAgD;AAC5CC,MAAAA,UAAU,CAAC,MAAI;AAAA;;AACX,2BAAAV,MAAM,CAACO,OAAP,oEAAgBI,gBAAhB,CACIZ,KAAK,CAACS,OAAN,CAAcI,GAAd,CAAkBC,IAAI,IAAIA,IAAI,CAACC,MAA/B,CADJ,EAEI;AACIC,UAAAA,WAAW,EAAE;AACTC,YAAAA,GAAG,EAAE,GADI;AAETC,YAAAA,IAAI,EAAE,EAFG;AAGTC,YAAAA,KAAK,EAAE,EAHE;AAITC,YAAAA,MAAM,EAAE;AAJC,WADjB;AAOIC,UAAAA,QAAQ,EAAE;AAPd,SAFJ;AAWH,OAZS,EAYR,IAZQ,CAAV;AAaH;AACJ,GAhBD,EAgBG,EAhBH;AAkBA,sBACI,oBAAC,OAAD,qBACI,oBAAC,wBAAD;AACI,IAAA,KAAK,EAAGC,KAAK,CAACT,GADlB;AAEI,IAAA,OAAO,EAAGU,sBAASC,EAAT,IAAe,SAAf,GAA2B,MAA3B,GAAoC,UAFlD;AAGI,IAAA,QAAQ,EAAGC,gCAHf;AAII,IAAA,sBAAsB,EAAEpB,SAAS,CAACqB,IAAV,SAAqB1B,KAAK,CAACI,MAA3B,CAJ5B;AAKI,IAAA,GAAG,EAAGH;AALV,KAQQD,KAAK,CAACS,OAAN,CAAcI,GAAd,CAAkB,CAACC,IAAD,EAAOa,KAAP,kBACd,oBAAC,uBAAD;AACI,IAAA,GAAG,EAAEA,KADT;AAEI,IAAA,iBAAiB,EAAG,KAFxB;AAGI,IAAA,UAAU,EAAGb,IAAI,CAACC,MAHtB;AAII,IAAA,KAAK,EAAGD,IAAI,CAACc;AAJjB,IADJ,CARR,CADJ,CADJ;AAsBH,CA5CD;;AA8CA,MAAMN,KAAK,GAAGO,wBAAWC,MAAX,CAAkB;AAC5BjB,EAAAA,GAAG,EAAE,EACD,GAAGgB,wBAAWE;AADb;AADuB,CAAlB,CAAd;;eAMehC,Q","sourcesContent":["import * as React from 'react'\r\nimport { Platform, StyleSheet } from 'react-native'\r\nimport MapView, { Region, PROVIDER_GOOGLE, Marker, LatLng } from 'react-native-maps'\r\nimport styled from 'styled-components/native'\r\n\r\nexport interface MapInterface {\r\n    region?: Region,\r\n    onChangeRegion?: any,\r\n    markers: Array<{latlng: LatLng, image: any}>\r\n}\r\n\r\nconst Wrapper = styled.View`\r\n    height: 100%;\r\n`\r\n\r\nconst OrderMap = (props: MapInterface) => {\r\n    const mapRef = React.useRef<MapView>(null);\r\n    const [region, setRegion] = React.useState(props.region);\r\n    \r\n    React.useEffect(() => {\r\n        if (mapRef.current && props.markers.length > 0) {\r\n            setTimeout(()=>{\r\n                mapRef.current?.fitToCoordinates(\r\n                    props.markers.map(item => item.latlng), \r\n                    {\r\n                        edgePadding: {\r\n                            top: 100,\r\n                            left: 50,\r\n                            right: 50,\r\n                            bottom: 300\r\n                        },\r\n                        animated: true\r\n                    });\r\n            },1000)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Wrapper>\r\n            <MapView \r\n                style={ style.map }\r\n                mapType={ Platform.OS == 'android' ? \"none\" : \"standard\" }\r\n                provider={ PROVIDER_GOOGLE }\r\n                onRegionChangeComplete={setRegion.bind(this, props.region)}\r\n                ref={ mapRef }\r\n            >\r\n                {\r\n                    props.markers.map((item, index) => (\r\n                        <Marker \r\n                            key={index}\r\n                            tracksViewChanges={ false }\r\n                            coordinate={ item.latlng }\r\n                            image={ item.image }\r\n                        />\r\n                    ))\r\n                }\r\n            </MapView>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nconst style = StyleSheet.create({\r\n    map: {\r\n        ...StyleSheet.absoluteFillObject\r\n    }\r\n})\r\n\r\nexport default OrderMap;"]}