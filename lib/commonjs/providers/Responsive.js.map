{"version":3,"sources":["Responsive.tsx"],"names":["width","SCREEN_WIDTH","height","SCREEN_HEIGHT","Dimensions","get","scale","normalize","size","newSize","Platform","OS","Math","round","PixelRatio","roundToNearestPixel"],"mappings":";;;;;;;AAAA;;AAEA,MAAM;AACFA,EAAAA,KAAK,EAAEC,YADL;AAEFC,EAAAA,MAAM,EAAEC;AAFN,IAGFC,wBAAWC,GAAX,CAAe,QAAf,CAHJ,C,CAKA;;;AACA,MAAMC,KAAK,GAAGL,YAAY,GAAG,GAA7B;;AAEO,MAAMM,SAAS,GAAIC,IAAD,IAAkB;AACvC,QAAMC,OAAO,GAAGD,IAAI,GAAGF,KAAvB;;AACA,MAAII,sBAASC,EAAT,KAAgB,KAApB,EAA2B;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWC,wBAAWC,mBAAX,CAA+BN,OAA/B,CAAX,CAAP;AACH,GAFD,MAEO;AACH,WAAOG,IAAI,CAACC,KAAL,CAAWC,wBAAWC,mBAAX,CAA+BN,OAA/B,CAAX,IAAsD,CAA7D;AACH;AACJ,CAPM","sourcesContent":["import { Dimensions, Platform, PixelRatio } from 'react-native';\r\n\r\nconst {\r\n    width: SCREEN_WIDTH,\r\n    height: SCREEN_HEIGHT,\r\n} = Dimensions.get('window');\r\n\r\n// based on iphone 5s's scale\r\nconst scale = SCREEN_WIDTH / 320;\r\n\r\nexport const normalize = (size: number) => {\r\n    const newSize = size * scale\r\n    if (Platform.OS === 'ios') {\r\n        return Math.round(PixelRatio.roundToNearestPixel(newSize))\r\n    } else {\r\n        return Math.round(PixelRatio.roundToNearestPixel(newSize)) - 2\r\n    }\r\n}"]}