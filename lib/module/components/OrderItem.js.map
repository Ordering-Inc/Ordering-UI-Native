{"version":3,"sources":["OrderItem.tsx"],"names":["React","styled","ORDER_STATUS","getOrderStatus","getStatusColor","colors","OText","OIcon","OButton","Wrapper","TouchableOpacity","InnerWrapper","View","InfoWrapper","Avatar","Image","Status","Address","OrderNumber","StatusAction","lightGray","OrderItem","props","curItem","onSelectItem","useState","is_online","changOnline","isOnline","useEffect","onClickItem","item","onClick","data","borderLeftColor","status","business","logo","borderRadius","borderColor","borderWidth","marginRight","id","date","marginTop","name","require","address","primary","PENDING","width","shadowColor","height","flex","fontSize","color","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport styled from 'styled-components/native'\r\nimport { ORDER_STATUS } from '../config/constants'\r\nimport { getOrderStatus, getStatusColor } from '../providers/Utilities'\r\nimport { colors } from '../theme'\r\nimport { OText, OIcon, OButton } from './shared'\r\n\r\ninterface Props {\r\n    data: any,\r\n    canAccept?: boolean,\r\n    onClick?: any,\r\n    isOnline?: boolean\r\n}\r\n\r\nconst Wrapper = styled.TouchableOpacity`\r\n    flex: 1;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 2px #00000020;\r\n    border-left-width: 5px;\r\n    padding: 10px;\r\n    margin-bottom: 12px;\r\n    margin-left: 3px;\r\n    margin-right: 3px;\r\n    margin-top: 3px;\r\n`\r\nconst InnerWrapper = styled.View`\r\n    flex: 1;    \r\n    flex-direction: row;    \r\n`\r\nconst InfoWrapper = styled.View`\r\n    flex-grow: 1;\r\n`\r\nconst Avatar = styled.Image`\r\n    width: 80px;\r\n    height: 80px;\r\n    resize-mode: contain;\r\n    margin-top: 8px;\r\n    margin-right: 8px;\r\n    border-radius: 10px;\r\n    border: 1px solid #e5e5e5;\r\n`\r\nconst Status = styled.View`\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 12px;\r\n    flex-direction: row;\r\n`\r\nconst Address = styled.View`\r\n    flex: 1;\r\n    flex-direction: row;\r\n    align-items: center;\r\n`\r\nconst OrderNumber = styled.View`\r\n    flex: 1;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\nconst StatusAction = styled.View`\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n    border: 1px solid ${colors.lightGray}\r\n    height: 42px;\r\n    border-radius: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst OrderItem = (props: Props) => {\r\n    const [curItem, onSelectItem] = React.useState(null);\r\n    const [is_online, changOnline] = React.useState(props.isOnline);\r\n\r\n    React.useEffect(() => {\r\n        changOnline(props.isOnline);\r\n    }, [props.isOnline]);\r\n\r\n    let onClickItem = (item: any) => {\r\n        props.onClick(item)\r\n        onSelectItem(item)\r\n    }\r\n\r\n    return (\r\n        <Wrapper onPress={() => onClickItem(props.data)} style={{borderLeftColor: getStatusColor(props.data.status)}}>\r\n            <InnerWrapper>\r\n                <OIcon \r\n                    url={props.data.business.logo}\r\n                    width={80}\r\n                    height={80}\r\n                    style={{borderRadius: 10, borderColor: '#e5e5e5', borderWidth: 1, marginRight: 10}}\r\n                />\r\n                <InfoWrapper>\r\n                    <OrderNumber>\r\n                        <OText size={22} weight={'600'}>\r\n                            {`#${props.data.id}`}\r\n                        </OText>\r\n                        <OText color={'grey'}>\r\n                            {props.data.date}\r\n                        </OText>\r\n                    </OrderNumber>\r\n                    <OText size={18} weight={'500'} style={{marginTop: -6}}>{props.data.business.name}</OText>\r\n                    <Address>\r\n                        <OIcon src={require('../assets/icons/pin_outline.png')} width={15} style={{marginRight: 4}} />\r\n                        <OText isWrap={true} weight={'300'} size={12.5}>\r\n                            {props.data.business.address}\r\n                        </OText>\r\n                    </Address>\r\n                </InfoWrapper>\r\n            </InnerWrapper>\r\n            <Status>\r\n                <StatusAction>\r\n                    <OText color={colors.primary}>{getOrderStatus(props.data.status)}</OText>\r\n                </StatusAction>\r\n                {props.data.status == ORDER_STATUS.PENDING ? (\r\n                    <>\r\n                        <OText style={{width: 10}}>{''}</OText>\r\n                        <OButton onClick={() => {}} style={{shadowColor: 'transparent', height: 42, borderRadius: 10}} parentStyle={{flex: 1}} textStyle={{fontSize: 14, color: 'white'}} bgColor={colors.primary} borderColor={colors.primary} isDisabled={!is_online} text={'Accept'} imgRightSrc={null} />\r\n                    </>\r\n                ) : null}\r\n            </Status>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nOrderItem.defaultProps = {\r\n\r\n}\r\n\r\nexport default OrderItem"]}